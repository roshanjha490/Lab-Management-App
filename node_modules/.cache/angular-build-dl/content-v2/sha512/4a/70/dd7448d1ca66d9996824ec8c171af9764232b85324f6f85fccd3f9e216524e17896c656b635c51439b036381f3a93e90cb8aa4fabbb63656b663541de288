{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/All-Services/software-content.service.ts","webpack:///src/app/All-Services/total-system.service.ts","webpack:///src/app/Authentication/auth-guard.service.ts","webpack:///src/app/Authentication/auth.service.ts","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/filter.pipe.ts","webpack:///src/app/admin/hardware/hardware.component.ts","webpack:///src/app/admin/hardware/hardware.component.html","webpack:///src/app/admin/manage-computers/dialogbox/dialogbox.component.ts","webpack:///src/app/admin/manage-computers/dialogbox/dialogbox.component.html","webpack:///src/app/admin/manage-computers/edit-system/edit-system.component.ts","webpack:///src/app/admin/manage-computers/edit-system/edit-system.component.html","webpack:///src/app/admin/manage-computers/grid-view/grid-view.component.ts","webpack:///src/app/admin/manage-computers/grid-view/grid-view.component.html","webpack:///src/app/admin/manage-computers/manage-computers.component.ts","webpack:///src/app/admin/manage-computers/manage-computers.component.html","webpack:///src/app/admin/manage-computers/table-view/table-view.component.ts","webpack:///src/app/admin/manage-computers/table-view/table-view.component.html","webpack:///src/app/admin/manage-labs/manage-labs.component.ts","webpack:///src/app/admin/manage-labs/manage-labs.component.html","webpack:///src/app/admin/not-in-use/grid-not/grid-not.component.ts","webpack:///src/app/admin/not-in-use/grid-not/grid-not.component.html","webpack:///src/app/admin/not-in-use/not-in-use.component.ts","webpack:///src/app/admin/not-in-use/not-in-use.component.html","webpack:///src/app/admin/not-in-use/table-not/table-not.component.ts","webpack:///src/app/admin/not-in-use/table-not/table-not.component.html","webpack:///src/app/admin/notification/notification.component.ts","webpack:///src/app/admin/notification/notification.component.html","webpack:///src/app/admin/repairs/grid-repair/grid-repair.component.ts","webpack:///src/app/admin/repairs/grid-repair/grid-repair.component.html","webpack:///src/app/admin/repairs/repairs.component.ts","webpack:///src/app/admin/repairs/repairs.component.html","webpack:///src/app/admin/repairs/table-repair/table-repair.component.ts","webpack:///src/app/admin/repairs/table-repair/table-repair.component.html","webpack:///src/app/admin/software/software.component.ts","webpack:///src/app/admin/software/software.component.html","webpack:///src/app/admin/specific-hardware/grid-hardware/grid-hardware.component.ts","webpack:///src/app/admin/specific-hardware/grid-hardware/grid-hardware.component.html","webpack:///src/app/admin/specific-hardware/specific-hardware.component.ts","webpack:///src/app/admin/specific-hardware/specific-hardware.component.html","webpack:///src/app/admin/specific-hardware/table-hardware/table-hardware.component.ts","webpack:///src/app/admin/specific-hardware/table-hardware/table-hardware.component.html","webpack:///src/app/admin/specific-lab/grid-lab/grid-lab.component.ts","webpack:///src/app/admin/specific-lab/grid-lab/grid-lab.component.html","webpack:///src/app/admin/specific-lab/specific-lab.component.ts","webpack:///src/app/admin/specific-lab/specific-lab.component.html","webpack:///src/app/admin/specific-lab/table-lab/table-lab.component.ts","webpack:///src/app/admin/specific-lab/table-lab/table-lab.component.html","webpack:///src/app/admin/specific-software/grid-software/grid-software.component.ts","webpack:///src/app/admin/specific-software/grid-software/grid-software.component.html","webpack:///src/app/admin/specific-software/specific-software.component.ts","webpack:///src/app/admin/specific-software/specific-software.component.html","webpack:///src/app/admin/specific-software/table-software/table-software.component.ts","webpack:///src/app/admin/specific-software/table-software/table-software.component.html","webpack:///src/app/admin/user/user-edit/user-edit.component.ts","webpack:///src/app/admin/user/user-edit/user-edit.component.html","webpack:///src/app/admin/user/user-infrm/user-infrm.component.ts","webpack:///src/app/admin/user/user-infrm/user-infrm.component.html","webpack:///src/app/admin/user/user.component.ts","webpack:///src/app/admin/user/user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","SoftwareContentService","searchterm","notification","message","sender","seen","readedMessages","Labs","Name","totalSystem","softwareNameNcolor","backgroundColor","adminAccount","ID","active","profileImg","password","job","joinedIn","contact","email","hardWare","providedIn","TotalSystemService","allSystem","totalNumberOfLab","AuthGuard","authService","router","route","state","isAuthenticated","authenticated","navigate","canActivate","AuthService","loggedIn","promise","reject","setTimeout","adminRoutes","AdminRoutingModule","forChild","imports","AdminComponent","_SoftwareContentService","modeIn","openIn","adminArr","goadminAccount","innerWidth","window","messages","length","readMessages","messageNumber","event","i","logout","navrct","selector","templateUrl","styleUrls","AdminModule","declarations","DashboardComponent","_snackBar","_TotalSystemService","softNo","repairsLength","repairs","getAllSystem","items","getsoftwareNameNcolor","allSystems","softwareLength","bgColors","labNumber","getLabs","systemNo","extrRepairLength","j","indexOf","param1","randomNo","Math","floor","random","value","classList","add","placeholder","push","open","duration","gotoRepair","gotoMngLab","gotoMngSystm","gotoNotification","addSoftware","FilterPipe","searchText","toLowerCase","filter","it","includes","name","HardwareComponent","computers","hrdwrePC","hardwares","gethardWare","hardwareLength","addNewhardware","DialogboxComponent","paramsSubscription","params","subscribe","systemInformation","softwareName","hardwareName","alert","EditSystemComponent","system","Lab","Software","Condition","Company","os","condition","viewValue","conditiontwo","toppings","toppingsTwo","toppingList","toppingListTwo","softwareNames","hardWareNames","param2","param3","param4","param5","relativeTo","editSystemInfrm","GridViewComponent","condition1","searchTerm","closeDialog","ManageComputersComponent","totalPc","workingPc","NotWorkingPc","NotingUsePc","newStatus","newLab","newOs","layout","isSpecial","target","console","log","newName","newCompany","hardwareNames","onKey","onBlue","addSystem","gridOn","tableOn","TableViewComponent","ManageLabsComponent","pcInLabs","allsystems","labLength","addNewLab","GridNotComponent","NotInUseComponent","TableNotComponent","NotificationComponent","getNotification","splice","index","textMessage","textContent","senderName","GridRepairComponent","RepairsComponent","TableRepairComponent","SoftwareComponent","sftwrePC","softwares","addNewsoftware","GridHardwareComponent","SpecificHardwareComponent","hardwarePc","wrkngPc","notWrkngPc","TableHardwareComponent","GridLabComponent","labName","SpecificLabComponent","labPc","TableLabComponent","GridSoftwareComponent","SpecificSoftwareComponent","softwarePc","TableSoftwareComponent","UserEditComponent","Activeuser","regPassowrd","reg3","idChange","style","display","CurrentPassword","NewPassword","ConfirmPassword","errorPassword","test","remove","shwPsswrd","hdePsswrd","type","userId","userImg","userContact","userEmail","userJob","resetPasswrd","shwpasswrd_1","hdepasswrd_1","shwpasswrd_2","hdepasswrd_2","shwpasswrd_3","hdepasswrd_3","setPassword","UserInfrmComponent","userInformation","UserComponent","date","Date","months","users","activeUser","userName","user_password","getDate","getMonth","getFullYear","user_contact","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","AppComponent","title","AppModule","entryComponents","providers","bootstrap","LoginComponent","idNo","errorIn_id","errorIn_psswrd","self","login","inp2","extr","shwpasswrd","hdepasswrd","goToAdmin","MaterialComponents","MaterialModule","PageNotFoundComponent","gotoLogin","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,sB;AAEX,wCAAc;AAAA;;AAEd,aAAAC,UAAA,GAAqB,EAArB;AAGA,aAAAC,YAAA,GAAqB,CACnB;AAAEC,iBAAO,EAAE,wCAAX;AAAqDC,gBAAM,EAAE,YAA7D;AAA2EC,cAAI,EAAE;AAAjF,SADmB,EAEnB;AAAEF,iBAAO,EAAE,wIAAX;AAAqJC,gBAAM,EAAE,YAA7J;AAA2KC,cAAI,EAAE;AAAjL,SAFmB,EAGnB;AAAEF,iBAAO,EAAE,wCAAX;AAAqDC,gBAAM,EAAE,YAA7D;AAA2EC,cAAI,EAAE;AAAjF,SAHmB,EAInB;AAAEF,iBAAO,EAAE,wIAAX;AAAqJC,gBAAM,EAAE,YAA7J;AAA2KC,cAAI,EAAE;AAAjL,SAJmB,EAKnB;AAAEF,iBAAO,EAAE,wCAAX;AAAqDC,gBAAM,EAAE,YAA7D;AAA2EC,cAAI,EAAE;AAAjF,SALmB,EAMnB;AAAEF,iBAAO,EAAE,wIAAX;AAAqJC,gBAAM,EAAE,YAA7J;AAA2KC,cAAI,EAAE;AAAjL,SANmB,EAOnB;AAAEF,iBAAO,EAAE,wCAAX;AAAqDC,gBAAM,EAAE,YAA7D;AAA2EC,cAAI,EAAE;AAAjF,SAPmB,EAQnB;AAAEF,iBAAO,EAAE,wIAAX;AAAqJC,gBAAM,EAAE,YAA7J;AAA2KC,cAAI,EAAE;AAAjL,SARmB,EASnB;AAAEF,iBAAO,EAAE,wCAAX;AAAqDC,gBAAM,EAAE,YAA7D;AAA2EC,cAAI,EAAE;AAAjF,SATmB,EAUnB;AAAEF,iBAAO,EAAE,wIAAX;AAAqJC,gBAAM,EAAE,YAA7J;AAA2KC,cAAI,EAAE;AAAjL,SAVmB,EAWnB;AAAEF,iBAAO,EAAE,wCAAX;AAAqDC,gBAAM,EAAE,YAA7D;AAA2EC,cAAI,EAAE;AAAjF,SAXmB,CAArB;AAmBA,aAAAC,cAAA,GAAuB,EAAvB;AASA,aAAAC,IAAA,GAAa,CACX;AACEC,cAAI,EAAE,eADR;AACyBC,qBAAW,EAAE;AADtC,SADW,EAIX;AACED,cAAI,EAAE,eADR;AACyBC,qBAAW,EAAE;AADtC,SAJW,EAOX;AACED,cAAI,EAAE,eADR;AACyBC,qBAAW,EAAE;AADtC,SAPW,EAUX;AACED,cAAI,EAAE,UADR;AACoBC,qBAAW,EAAE;AADjC,SAVW,EAaX;AACED,cAAI,EAAE,eADR;AACyBC,qBAAW,EAAE;AADtC,SAbW,EAgBX;AACED,cAAI,EAAE,oBADR;AAC8BC,qBAAW,EAAE;AAD3C,SAhBW,EAmBX;AACED,cAAI,EAAE,YADR;AACsBC,qBAAW,EAAE;AADnC,SAnBW,CAAb;AAmCA,aAAAC,kBAAA,GAA2B,CAEzB;AAAEF,cAAI,EAAE,WAAR;AAAqBG,yBAAe,EAAE,SAAtC;AAAiDF,qBAAW,EAAE;AAA9D,SAFyB,EAIzB;AAAED,cAAI,EAAE,aAAR;AAAuBG,yBAAe,EAAE,SAAxC;AAAmDF,qBAAW,EAAE;AAAhE,SAJyB,EAMzB;AAAED,cAAI,EAAE,YAAR;AAAsBG,yBAAe,EAAE,SAAvC;AAAkDF,qBAAW,EAAE;AAA/D,SANyB,EAQzB;AAAED,cAAI,EAAE,cAAR;AAAwBG,yBAAe,EAAE,SAAzC;AAAoDF,qBAAW,EAAE;AAAjE,SARyB,EAUzB;AAAED,cAAI,EAAE,SAAR;AAAmBG,yBAAe,EAAE,SAApC;AAA+CF,qBAAW,EAAE;AAA5D,SAVyB,EAYzB;AAAED,cAAI,EAAE,SAAR;AAAmBG,yBAAe,EAAE,SAApC;AAA+CF,qBAAW,EAAE;AAA5D,SAZyB,EAczB;AAAED,cAAI,EAAE,YAAR;AAAsBG,yBAAe,EAAE,SAAvC;AAAkDF,qBAAW,EAAE;AAA/D,SAdyB,EAgBzB;AAAED,cAAI,EAAE,MAAR;AAAgBG,yBAAe,EAAE,SAAjC;AAA4CF,qBAAW,EAAE;AAAzD,SAhByB,EAkBzB;AAAED,cAAI,EAAE,SAAR;AAAmBG,yBAAe,EAAE,SAApC;AAA+CF,qBAAW,EAAE;AAA5D,SAlByB,EAoBzB;AAAED,cAAI,EAAE,UAAR;AAAoBG,yBAAe,EAAE,SAArC;AAAgDF,qBAAW,EAAE;AAA7D,SApByB,EAsBzB;AAAED,cAAI,EAAE,UAAR;AAAoBG,yBAAe,EAAE,SAArC;AAAgDF,qBAAW,EAAE;AAA7D,SAtByB,EAwBzB;AAAED,cAAI,EAAE,UAAR;AAAoBG,yBAAe,EAAE,SAArC;AAAgDF,qBAAW,EAAE;AAA7D,SAxByB,CAA3B;AAoCA,aAAAG,YAAA,GAAqB,CACnB;AAAEC,YAAE,EAAE,CAAN;AAASd,YAAE,EAAE,aAAb;AAA4BS,cAAI,EAAE,kBAAlC;AAAsDM,gBAAM,EAAE,KAA9D;AAAqEC,oBAAU,EAAE,eAAjF;AAAkGC,kBAAQ,EAAE,YAA5G;AAA0HC,aAAG,EAAE,UAA/H;AAA2IC,kBAAQ,EAAE,aAArJ;AAAoKC,iBAAO,EAAE,YAA7K;AAA2LC,eAAK,EAAE;AAAlM,SADmB,EAEnB;AAAEP,YAAE,EAAE,CAAN;AAASd,YAAE,EAAE,aAAb;AAA4BS,cAAI,EAAE,UAAlC;AAA8CM,gBAAM,EAAE,KAAtD;AAA6DC,oBAAU,EAAE,eAAzE;AAA0FC,kBAAQ,EAAE,YAApG;AAAkHC,aAAG,EAAE,WAAvH;AAAoIC,kBAAQ,EAAE,aAA9I;AAA6JC,iBAAO,EAAE,YAAtK;AAAoLC,eAAK,EAAE;AAA3L,SAFmB,EAGnB;AAAEP,YAAE,EAAE,CAAN;AAASd,YAAE,EAAE,aAAb;AAA4BS,cAAI,EAAE,YAAlC;AAAgDM,gBAAM,EAAE,KAAxD;AAA+DC,oBAAU,EAAE,eAA3E;AAA4FC,kBAAQ,EAAE,YAAtG;AAAoHC,aAAG,EAAE,YAAzH;AAAuIC,kBAAQ,EAAE,aAAjJ;AAAgKC,iBAAO,EAAE,YAAzK;AAAuLC,eAAK,EAAE;AAA9L,SAHmB,EAInB;AAAEP,YAAE,EAAE,CAAN;AAASd,YAAE,EAAE,aAAb;AAA4BS,cAAI,EAAE,eAAlC;AAAmDM,gBAAM,EAAE,KAA3D;AAAkEC,oBAAU,EAAE,eAA9E;AAA+FC,kBAAQ,EAAE,YAAzG;AAAuHC,aAAG,EAAE,eAA5H;AAA6IC,kBAAQ,EAAE,aAAvJ;AAAsKC,iBAAO,EAAE,YAA/K;AAA6LC,eAAK,EAAE;AAApM,SAJmB,CAArB;AAWA,aAAAC,QAAA,GAAiB,CACf;AAAEb,cAAI,EAAE,KAAR;AAAeC,qBAAW,EAAE;AAA5B,SADe,EAGf;AAAED,cAAI,EAAE,KAAR;AAAeC,qBAAW,EAAE;AAA5B,SAHe,EAKf;AAAED,cAAI,EAAE,KAAR;AAAeC,qBAAW,EAAE;AAA5B,SALe,EAOf;AAAED,cAAI,EAAE,MAAR;AAAgBC,qBAAW,EAAE;AAA7B,SAPe,EASf;AAAED,cAAI,EAAE,MAAR;AAAgBC,qBAAW,EAAE;AAA7B,SATe,EAWf;AAAED,cAAI,EAAE,MAAR;AAAgBC,qBAAW,EAAE;AAA7B,SAXe,EAaf;AAAED,cAAI,EAAE,eAAR;AAAyBC,qBAAW,EAAE;AAAtC,SAbe,EAef;AAAED,cAAI,EAAE,UAAR;AAAoBC,qBAAW,EAAE;AAAjC,SAfe,CAAjB;AAnHiB;;;;0CAmBC;AAChB,iBAAO,KAAKP,YAAZ;AACD;;;4CAKmB;AAElB,iBAAO,KAAKI,cAAZ;AAED;;;kCAgCS;AACR,iBAAO,KAAKC,IAAZ;AACD;;;gDAiCuB;AACtB,iBAAO,KAAKG,kBAAZ;AACD;;;yCAYgB;AACf,iBAAO,KAAKE,YAAZ;AACD;;;sCAoBa;AACZ,iBAAO,KAAKS,QAAZ;AACD;;;;;;;uBAzIUrB,sB;AAAsB,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB,K;AAAA,kBAFrB;;;;;sEAEDA,sB,EAAsB;cAHlC,wDAGkC;eAHvB;AACVsB,oBAAU,EAAE;AADF,S;AAGuB,Q;;;;;;;;;;;;;;;;;;;;ACLnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,kB;AAEX,oCAAc;AAAA;;AAEd,aAAAC,SAAA,GAAkB,CAChB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAAnE;AAAuJ,uBAAa,SAApK;AAA+K,qBAAW,OAA1L;AAAmM,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA/M;AAAsP,gBAAM;AAA5P,SADgB,EAEhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAAnE;AAAuJ,uBAAa,SAApK;AAA+K,qBAAW,OAA1L;AAAmM,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA/M;AAAsP,gBAAM;AAA5P,SAFgB,EAGhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAAnE;AAAuJ,uBAAa,SAApK;AAA+K,qBAAW,IAA1L;AAAgM,sBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,eAAf,EAAgC,UAAhC,CAA5M;AAAyP,gBAAM;AAA/P,SAHgB,EAIhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAAnE;AAAuJ,uBAAa,SAApK;AAA+K,qBAAW,IAA1L;AAAgM,sBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,eAAf,EAAgC,UAAhC,CAA5M;AAAyP,gBAAM;AAA/P,SAJgB,EAKhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,SAAd,EAAyB,YAAzB,EAAuC,MAAvC,EAA+C,UAA/C,EAA2D,UAA3D,CAAnE;AAA2I,uBAAa,SAAxJ;AAAmK,qBAAW,OAA9K;AAAuL,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAnM;AAA0O,gBAAM;AAAhP,SALgB,EAMhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,SAAd,EAAyB,YAAzB,EAAuC,MAAvC,EAA+C,UAA/C,EAA2D,UAA3D,CAAnE;AAA2I,uBAAa,SAAxJ;AAAmK,qBAAW,OAA9K;AAAuL,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAnM;AAA0O,gBAAM;AAAhP,SANgB,EAOhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,UAA3C,EAAuD,UAAvD,CAAnE;AAAuI,uBAAa,aAApJ;AAAmK,qBAAW,KAA9K;AAAqL,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAjM;AAAwO,gBAAM;AAA9O,SAPgB,EAQhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAAnE;AAAmI,uBAAa,SAAhJ;AAA2J,qBAAW,KAAtK;AAA6K,sBAAY,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,CAAzL;AAA+N,gBAAM;AAArO,SARgB,EAShB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,UAAnB;AAA+B,iBAAO,eAAtC;AAAuD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAAnE;AAAmI,uBAAa,aAAhJ;AAA+J,qBAAW,KAA1K;AAAiL,sBAAY,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,CAA7L;AAAmO,gBAAM;AAAzO,SATgB,EAUhB;AAAE,gBAAM,CAAR;AAAW,kBAAQ,WAAnB;AAAgC,iBAAO,eAAvC;AAAwD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAApE;AAAoI,uBAAa,SAAjJ;AAA4J,qBAAW,KAAvK;AAA8K,sBAAY,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,CAA1L;AAAgO,gBAAM;AAAtO,SAVgB,EAWhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAArE;AAAqI,uBAAa,SAAlJ;AAA6J,qBAAW,KAAxK;AAA+K,sBAAY,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,CAA3L;AAAiO,gBAAM;AAAvO,SAXgB,EAYhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,cAAd,EAA8B,SAA9B,EAAyC,YAAzC,EAAuD,MAAvD,EAA+D,UAA/D,CAArE;AAAiJ,uBAAa,SAA9J;AAAyK,qBAAW,IAApL;AAA0L,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAtM;AAA6O,gBAAM;AAAnP,SAZgB,EAahB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,cAAd,EAA8B,SAA9B,EAAyC,YAAzC,EAAuD,MAAvD,EAA+D,UAA/D,CAArE;AAAiJ,uBAAa,aAA9J;AAA6K,qBAAW,IAAxL;AAA8L,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA1M;AAAiP,gBAAM;AAAvP,SAbgB,EAchB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,cAAd,EAA8B,SAA9B,EAAyC,YAAzC,EAAuD,MAAvD,EAA+D,UAA/D,CAArE;AAAiJ,uBAAa,SAA9J;AAAyK,qBAAW,IAApL;AAA0L,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAtM;AAA6O,gBAAM;AAAnP,SAdgB,EAehB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,cAAd,EAA8B,SAA9B,EAAyC,YAAzC,EAAuD,MAAvD,EAA+D,UAA/D,CAArE;AAAiJ,uBAAa,aAA9J;AAA6K,qBAAW,IAAxL;AAA8L,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA1M;AAAiP,gBAAM;AAAvP,SAfgB,EAgBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAArE;AAAyJ,uBAAa,SAAtK;AAAiL,qBAAW,IAA5L;AAAkM,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA9M;AAAqP,gBAAM;AAA3P,SAhBgB,EAiBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAArE;AAAyJ,uBAAa,SAAtK;AAAiL,qBAAW,IAA5L;AAAkM,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA9M;AAAqP,gBAAM;AAA3P,SAjBgB,EAkBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAArE;AAAyJ,uBAAa,SAAtK;AAAiL,qBAAW,IAA5L;AAAkM,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA9M;AAAqP,gBAAM;AAA3P,SAlBgB,EAmBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAArE;AAAyJ,uBAAa,aAAtK;AAAqL,qBAAW,IAAhM;AAAsM,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAlN;AAAyP,gBAAM;AAA/P,SAnBgB,EAoBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAArE;AAAqI,uBAAa,SAAlJ;AAA6J,qBAAW,KAAxK;AAA+K,sBAAY,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,CAA3L;AAAiO,gBAAM;AAAvO,SApBgB,EAqBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAArE;AAAqI,uBAAa,SAAlJ;AAA6J,qBAAW,KAAxK;AAA+K,sBAAY,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,CAA3L;AAAiO,gBAAM;AAAvO,SArBgB,EAsBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAArE;AAAqI,uBAAa,aAAlJ;AAAiK,qBAAW,KAA5K;AAAmL,sBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,eAAf,EAAgC,UAAhC,CAA/L;AAA4O,gBAAM;AAAlP,SAtBgB,EAuBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,UAAxC;AAAoD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,YAA3D,EAAyE,UAAzE,EAAqF,UAArF,CAAhE;AAAkK,uBAAa,SAA/K;AAA0L,qBAAW,IAArM;AAA2M,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAvN;AAA8P,gBAAM;AAApQ,SAvBgB,EAwBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,UAAxC;AAAoD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,SAA3D,EAAsE,YAAtE,EAAoF,MAApF,EAA4F,SAA5F,EAAuG,UAAvG,EAAmH,UAAnH,CAAhE;AAAgM,uBAAa,SAA7M;AAAwN,qBAAW,IAAnO;AAAyO,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAArP;AAA4R,gBAAM;AAAlS,SAxBgB,EAyBhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,UAAxC;AAAoD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,SAA3D,EAAsE,YAAtE,EAAoF,MAApF,EAA4F,UAA5F,EAAwG,UAAxG,CAAhE;AAAqL,uBAAa,SAAlM;AAA6M,qBAAW,IAAxN;AAA8N,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA1O;AAAiR,gBAAM;AAAvR,SAzBgB,EA0BhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,UAAxC;AAAoD,sBAAY,CAAC,SAAD,EAAY,SAAZ,EAAuB,UAAvB,CAAhE;AAAoG,uBAAa,SAAjH;AAA4H,qBAAW,IAAvI;AAA6I,sBAAY,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,CAAzJ;AAA+L,gBAAM;AAArM,SA1BgB,EA2BhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,UAAxC;AAAoD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,SAA3D,EAAsE,SAAtE,EAAiF,YAAjF,EAA+F,MAA/F,EAAuG,SAAvG,EAAkH,UAAlH,EAA8H,UAA9H,EAA0I,UAA1I,CAAhE;AAAuN,uBAAa,SAApO;AAA+O,qBAAW,OAA1P;AAAmQ,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA/Q;AAAsT,gBAAM;AAA5T,SA3BgB,EA4BhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,CAArE;AAAmG,uBAAa,SAAhH;AAA2H,qBAAW,IAAtI;AAA4I,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAxJ;AAA+L,gBAAM;AAArM,SA5BgB,EA6BhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,SAA3C,EAAsD,SAAtD,CAArE;AAAuI,uBAAa,SAApJ;AAA+J,qBAAW,IAA1K;AAAgL,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA5L;AAAmO,gBAAM;AAAzO,SA7BgB,EA8BhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,eAAxC;AAAyD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAArE;AAAyJ,uBAAa,SAAtK;AAAiL,qBAAW,IAA5L;AAAkM,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAA9M;AAAqP,gBAAM;AAA3P,SA9BgB,EA+BhB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,oBAAxC;AAA8D,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,UAA3D,EAAuE,UAAvE,CAA1E;AAA8J,uBAAa,SAA3K;AAAsL,qBAAW,OAAjM;AAA0M,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAtN;AAA6P,gBAAM;AAAnQ,SA/BgB,EAgChB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,oBAAxC;AAA8D,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2C,cAA3C,EAA2D,SAA3D,EAAsE,SAAtE,EAAiF,YAAjF,EAA+F,MAA/F,EAAuG,SAAvG,EAAkH,UAAlH,EAA8H,UAA9H,EAA0I,UAA1I,CAA1E;AAAiO,uBAAa,SAA9O;AAAyP,qBAAW,OAApQ;AAA6Q,sBAAY,CAAC,MAAD,EAAS,eAAT,EAA0B,UAA1B,CAAzR;AAAgU,gBAAM;AAAtU,SAhCgB,EAiChB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,YAAxC;AAAsD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,CAAlE;AAA8G,uBAAa,YAA3H;AAAyI,qBAAW,KAApJ;AAA2J,sBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,eAAf,EAAgC,UAAhC,CAAvK;AAAoN,gBAAM;AAA1N,SAjCgB,EAkChB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,YAAxC;AAAsD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,CAAlE;AAA8G,uBAAa,YAA3H;AAAyI,qBAAW,KAApJ;AAA2J,sBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,eAAf,EAAgC,UAAhC,CAAvK;AAAoN,gBAAM;AAA1N,SAlCgB,EAmChB;AAAE,gBAAM,EAAR;AAAY,kBAAQ,WAApB;AAAiC,iBAAO,YAAxC;AAAsD,sBAAY,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,CAAlE;AAA8G,uBAAa,YAA3H;AAAyI,qBAAW,KAApJ;AAA2J,sBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,eAAf,EAAgC,UAAhC,CAAvK;AAAoN,gBAAM;AAA1N,SAnCgB,CAAlB;AAFiB;;;;uCAwCF;AACb,iBAAO,KAAKA,SAAZ;AACD;;;8CAIqB;AAEpB,iBAAO,KAAKC,gBAAZ;AAED;;;;;;;uBApDUF,kB;AAAkB,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVD,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;ACL/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaI,S;AAET,yBAAoBC,WAApB,EAAsDC,MAAtD,EAAoE;AAAA;;AAAhD,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;oCAE3DC,K,EAA+BC,K,EAA0B;AAAA;;AAElE,iBAAO,KAAKH,WAAL,CAAiBI,eAAjB,GAAmCvC,IAAnC,CAAwC,UAACwC,aAAD,EAA4B;AACvE,gBAAGA,aAAH,EAAiB;AACb,qBAAO,IAAP;AACH,aAFD,MAEK;AACD,mBAAI,CAACJ,MAAL,CAAYK,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACH;AACJ,WANM,CAAP;AAOH;;;yCAEgBJ,K,EAA+BC,K,EAA0B;AACtE,iBAAO,KAAKI,WAAL,CAAiBL,KAAjB,EAAwBC,KAAxB,CAAP;AACH;;;;;;;uBAjBQJ,S,EAAS,iH,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS;;;;;sEAATA,S,EAAS;cADrB;AACqB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACNtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaS,W;AADb;AAAA;;AAGI,aAAAC,QAAA,GAAoB,KAApB;AAmBH;;;;0CAjBqB;AAAA;;AACd,cAAMC,OAAO,GAAG,IAAI/C,OAAJ,CAAY,UAACC,OAAD,EAAU+C,MAAV,EAAqB;AAC7CC,sBAAU,CAAC,YAAM;AACbhD,qBAAO,CAAC,MAAI,CAAC6C,QAAN,CAAP;AACH,aAFS,EAEP,GAFO,CAAV;AAGH,WAJe,CAAhB;AAMA,iBAAOC,OAAP;AACH;;;gCAEO;AACJ,eAAKD,QAAL,GAAgB,IAAhB;AACH;;;iCAEQ;AACL,eAAKA,QAAL,GAAgB,KAAhB;AACH;;;;;;;uBApBQD,W;AAAW,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;ACMxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMK,WAAW,GAAW,EAA5B;;QAQaC,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBAHpB,CAAC,6DAAaC,QAAb,CAAsBF,WAAtB,CAAD,CAGoB,EAFnB,4DAEmB;;;;0HAAlBC,kB,EAAkB;AAAA;AAAA,kBAFnB,4DAEmB;AAAA,O;AAFP,K;;;;;sEAEXA,kB,EAAkB;cAJ9B,sDAI8B;eAJrB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBF,WAAtB,CAAD,CADD;AAER1C,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIqB,Q;;;;;;;;;;;;;;;;;;AC/B/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACYY;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AAGI;;AAAmC;;AACvC;;AACA;;AACI;;AACmF;;AACvE;;AACZ;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAC2E;;AAAM;;AAC7F;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAvB6B;;AAAA;;AASkC;;AAAA;;AAG3B;;AAAA;;;;;;AAnBxC;;AACI;;AA8BJ;;;;;;AA9BS;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QDFJ8C,c;AAUX,8BAAoBhB,MAApB,EAA4CiB,uBAA5C,EAAqGlB,WAArG,EAA+H;AAAA;;AAA3G,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAlB,WAAA,GAAAA,WAAA;AAiCrG,aAAAmB,MAAA,GAAiB,MAAjB;AAEA,aAAAC,MAAA,GAAkB,IAAlB,CAnC+H,CA+D/H;AAGA;AACA;AACA;AAEA;AACA;AACA;;AAGA,aAAAC,QAAA,GAAiB,KAAKH,uBAAL,CAA6BI,cAA7B,EAAjB;AA3EkI;;;;mCAEvH;AACT,eAAKC,UAAL,GAAkBC,MAAM,CAACD,UAAzB,CADS,CAGT;;AAEA,cAAI,KAAKA,UAAL,IAAmB,OAAvB,EAAgC;AAE9B,iBAAKJ,MAAL,GAAc,MAAd;AAEA,iBAAKC,MAAL,GAAc,KAAd;AACD;;AAED,cAAI,KAAKG,UAAL,GAAkB,OAAtB,EAA+B;AAE7B,iBAAKJ,MAAL,GAAc,MAAd;AAEA,iBAAKC,MAAL,GAAc,IAAd;AACD;AAEF;;;oCAEW;AAEV,eAAKK,QAAL,GAAgB,KAAKP,uBAAL,CAA6B3C,YAA7B,CAA0CmD,MAA1D;AAEA,eAAKC,YAAL,GAAoB,KAAKT,uBAAL,CAA6BvC,cAA7B,CAA4C+C,MAAhE;AAEA,eAAKE,aAAL,GAAqB,KAAKH,QAAL,GAAgB,KAAKE,YAA1C;AAED;;;iCAMQ;AAEP,eAAKP,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;;;iCAImDS,K,EAAO;AAEzD,cAAIL,MAAM,CAACD,UAAP,IAAqB,OAAzB,EAAkC;AAEhC,iBAAKJ,MAAL,GAAc,MAAd;AAEA,iBAAKC,MAAL,GAAc,KAAd;AACD;;AAED,cAAII,MAAM,CAACD,UAAP,GAAoB,OAAxB,EAAiC;AAE/B,iBAAKJ,MAAL,GAAc,MAAd;AAEA,iBAAKC,MAAL,GAAc,IAAd;AACD;AAGF;;;iCAgBQ;AAEP,eAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,QAAL,CAAcK,MAAlC,EAA0CI,CAAC,EAA3C,EAA+C;AAE7C,gBAAI,KAAKT,QAAL,CAAcS,CAAd,EAAiB,QAAjB,KAA8B,IAAlC,EAAwC;AAEtC,mBAAKZ,uBAAL,CAA6BI,cAA7B,GAA8CQ,CAA9C,EAAiD,QAAjD,IAA6D,KAA7D;AAED;AAEF;;AAED,eAAK9B,WAAL,CAAiB+B,MAAjB;AAEA,eAAK9B,MAAL,CAAYK,QAAZ,CAAqB,CAAC,cAAD,CAArB;AAED;;;;;;;uBAvGUW,c,EAAc,uH,EAAA,8J,EAAA,yI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;;;;;;;;;;;ACV3B;;AAEI;;AAAa;AAAA;AAAA,aAAiB,cAAjB,EAAiB;AAAA;AAAA,WAAjB;;AAET;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAoB;;AAC5B;;AAEA;;AAiCA;;AACI;;AACI;;AACI;;AAA6B;;AACrB;;AACJ;;AAAI;;AACR;;AAAqC;;AAAS;;AAClD;;AACJ;;AAEA;;AACI;;AACI;;AAA6B;;AACrB;;AACJ;;AAAI;;AACR;;AAAqC;;AAAW;;AACpD;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAAqC;;AAAa;;AACtD;;AACJ;;AAEA;;AACI;;AACI;;AAA6B;;AACrB;;AACJ;;AAAI;;AACR;;AAAqC;;AAAO;;AAChD;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAAqC;;AAAU;;AACnD;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAqC;;AAAe;;AACxD;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAAqC;;AAAe;;AACxD;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAAqC;;AAAiD;;AAEtF;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACJ;;AACJ;;AAGA;;AAAqB;AAAA,mBAAS,IAAAe,MAAA,EAAT;AAAiB,WAAjB;;AACjB;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;;;AA3IiB;;AAAA,uFAAiB,QAAjB,EAAiB,UAAjB;;AASK;;AAAA;;AAkCS;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAWA;;AAAA;;AASA;;AAAA;;AAWA;;AAAA;;AASA;;AAAA;;AAWA;;AAAA;;AAQ4B;;AAAA;;;;;;;;;sEDhH9Cf,c,EAAc;cAL1B,uDAK0B;eALhB;AACTgB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;gBAsDxB,0D;iBAAa,e,EAAiB,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;AEhEjaC,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBAxCb,CACP,4DADO,EAEP,wEAFO,EAGP,uEAHO,EAIP,wEAJO,EAKP,0DALO,EAMP,kEANO,CAwCa;;;;0HAAXA,W,EAAW;AAAA,uBA/BpB,iFA+BoB,EA9BpB,qGA8BoB,EA7BpB,0FA6BoB,EA5BpB,uFA4BoB,EA3BpB,4EA2BoB,EA1BpB,kGA0BoB,EAzBpB,wGAyBoB,EAxBpB,wDAwBoB,EAvBpB,0FAuBoB,EAtBpB,yGAsBoB,EArBpB,mFAqBoB,EApBpB,+EAoBoB,EAnBpB,yGAmBoB,EAlBpB,+GAkBoB,EAjBpB,kHAiBoB,EAhBpB,kGAgBoB,EAfpB,qGAeoB,EAdpB,2FAcoB,EAbpB,8FAaoB,EAZpB,+FAYoB,EAXpB,kGAWoB,EAVpB,yFAUoB,EATpB,4FASoB,EARpB,+GAQoB,EAPpB,kHAOoB,EANpB,+EAMoB,EALpB,mEAKoB,EAJpB,yFAIoB,EAHpB,sFAGoB;AAHH,kBApCjB,4DAoCiB,EAnCjB,wEAmCiB,EAlCjB,uEAkCiB,EAjCjB,wEAiCiB,EAhCjB,0DAgCiB,EA/BjB,kEA+BiB;AAGG,O;AAlCD,K;;;;;sEAkCVA,W,EAAW;cAzCvB,sDAyCuB;eAzCd;AACRpB,iBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,uEAHO,EAIP,wEAJO,EAKP,0DALO,EAMP,kEANO,CADD;AASRqB,sBAAY,EAAE,CACZ,iFADY,EAEZ,qGAFY,EAGZ,0FAHY,EAIZ,uFAJY,EAKZ,4EALY,EAMZ,kGANY,EAOZ,wGAPY,EAQZ,wDARY,EASZ,0FATY,EAUZ,yGAVY,EAWZ,mFAXY,EAYZ,+EAZY,EAaZ,yGAbY,EAcZ,+GAdY,EAeZ,kHAfY,EAgBZ,kGAhBY,EAiBZ,qGAjBY,EAkBZ,2FAlBY,EAmBZ,8FAnBY,EAoBZ,+FApBY,EAqBZ,kGArBY,EAsBZ,yFAtBY,EAuBZ,4FAvBY,EAwBZ,+GAxBY,EAyBZ,kHAzBY,EA0BZ,+EA1BY,EA2BZ,mEA3BY,EA4BZ,yFA5BY,EA6BZ,sFA7BY;AATN,S;AAyCc,Q;;;;;;;;;;;;;;;;;;AC5ExB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;AC8HY;;AAII;;AAEI;;AACI;;AAAsB;;AAAa;;AACnC;;AAAqB;;AAAkC;;AAC3D;;AAEJ;;AACJ;;;;;;AAPQ;;AAAA;;AAD+B;;AAGL;;AAAA;;AACD;;AAAA;;;;QD7HhCC,kB;AAMX,kCAAoBC,SAApB,EAAoDrB,uBAApD,EAA4GsB,mBAA5G,EAA6JvC,MAA7J,EAA6K;AAAA;;AAAzJ,aAAAsC,SAAA,GAAAA,SAAA;AAAgC,aAAArB,uBAAA,GAAAA,uBAAA;AAAwD,aAAAsB,mBAAA,GAAAA,mBAAA;AAAiD,aAAAvC,MAAA,GAAAA,MAAA;AAF7J,aAAAwC,MAAA,GAAiB,CAAjB;AAIA,aAAAC,aAAA,GAAgB,CAAhB;AAEA,aAAAC,OAAA,GAAgB,KAAKH,mBAAL,CAAyBI,YAAzB,EAAhB;AAIA,aAAAC,KAAA,GAAc,KAAK3B,uBAAL,CAA6B4B,qBAA7B,EAAd;AAEA,aAAAC,UAAA,GAAmB,KAAKP,mBAAL,CAAyBI,YAAzB,EAAnB;AAEA,aAAAI,cAAA,GAAiB,CAAjB;AAEA,aAAAC,QAAA,GAAqB,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAA0C,SAA1C,EAAoD,SAApD,EAA8D,SAA9D,EAAwE,SAAxE,EAAkF,SAAlF,EAA6F,SAA7F,CAArB;AAoEF,aAAAC,SAAA,GAAY,KAAKhC,uBAAL,CAA6BiC,OAA7B,GAAuCzB,MAAnD;AAEA,aAAA0B,QAAA,GAAmB,KAAKZ,mBAAL,CAAyB3C,SAAzB,CAAmC6B,MAAtD;AApFkL;;;;mCAkBrK;AAET,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKa,OAAL,CAAajB,MAAjC,EAAyCI,CAAC,EAA1C,EAA8C;AAE3C,gBAAK,KAAKa,OAAL,CAAab,CAAb,EAAgB,WAAhB,MAAiC,aAAtC,EAAqD;AACjD,mBAAKY,aAAL;AACH;AACL;;AAEA,eAAKW,gBAAL,GAAwB,KAAKX,aAA7B,CATU,CAWb;;AAEI,eAAK,IAAIZ,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKe,KAAL,CAAWnB,MAA/B,EAAuCI,EAAC,EAAxC,EAA4C;AAE1C,iBAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKP,UAAL,CAAgBrB,MAApC,EAA4C4B,CAAC,EAA7C,EAAiD;AAE/C,kBAAK,KAAKP,UAAL,CAAgBO,CAAhB,EAAmB,UAAnB,EAA+BC,OAA/B,CAAuC,KAAKV,KAAL,CAAWf,EAAX,EAAc,MAAd,CAAvC,IAAgE,CAAC,CAAtE,EAAyE;AAErE,qBAAKe,KAAL,CAAWf,EAAX,EAAc,aAAd,IAAgC,KAAKkB,cAAL,EAAhC;AACH;AACJ;;AAEE,iBAAKA,cAAL,GAAsB,CAAtB;AAEF;AAEF;;;oCAEWQ,M,EAAM;AAEhB,eAAKC,QAAL,GAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAhB;;AAEE,cAAIJ,MAAM,CAACK,KAAP,IAAgB,EAApB,EAAuB;AAElBL,kBAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAEEP,kBAAM,CAACQ,WAAP,GAAqB,+BAArB;AAEGR,kBAAM,CAACK,KAAP,GAAe,EAAf;AAET,WARD,MAUI;AAEE,iBAAK3C,uBAAL,CAA6BnC,kBAA7B,CAAgDkF,IAAhD,CACA;AACIpF,kBAAI,EAAE2E,MAAM,CAACK,KADjB;AACwB7E,6BAAe,EAAE,KAAKiE,QAAL,CAAc,KAAKQ,QAAnB,CADzC;AACuE3E,yBAAW,EAAE;AADpF,aADA;;AAMA,iBAAKyD,SAAL,CAAe2B,IAAf,CAAoBV,MAAM,CAACK,KAAP,GAAa,8BAAjC,EAAiE,gBAAjE,EAAmF;AACjFM,sBAAQ,EAAE;AADuE,aAAnF;;AAIAX,kBAAM,CAACK,KAAP,GAAe,EAAf;AAEL;AAGJ;;;oCAcM;AAEH,eAAKpC,QAAL,GAAgB,KAAKP,uBAAL,CAA6B3C,YAA7B,CAA0CmD,MAA1D;AAEA,eAAKC,YAAL,GAAoB,KAAKT,uBAAL,CAA6BvC,cAA7B,CAA4C+C,MAAhE;AAEA,eAAKE,aAAL,GAAqB,KAAKH,QAAL,GAAgB,KAAKE,YAA1C;AAEL;;;qCAKS;AACR,eAAK1B,MAAL,CAAYK,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;;;qCAES;AACR,eAAKL,MAAL,CAAYK,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;uCAEW;AACV,eAAKL,MAAL,CAAYK,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD;;;2CAEe;AACd,eAAKL,MAAL,CAAYK,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD;;;;;;;uBA7HYgC,kB,EAAkB,wI,EAAA,8J,EAAA,sJ,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,gsC;AAAA;AAAA;;;ACX/B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AAAO;;AAAa;;AAAQ;;AAChD;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAA2B;AAAA,mBAAS,IAAA8B,UAAA,EAAT;AAAqB,WAArB;;AACvB;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAoB;;AAC5B;;AACA;;AACI;;AAAI;;AAAO;;AACf;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAA6B;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;;AACzB;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAa;;AACrB;;AACA;;AACI;;AAAI;;AAAW;;AACnB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAgC;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AAC5B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AACpB;;AACA;;AACI;;AAAI;;AAAc;;AACtB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAA+B;AAAA,mBAAS,IAAAC,gBAAA,EAAT;AAA2B,WAA3B;;AAC3B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAiB;;AACzB;;AACA;;AACI;;AAAI;;AAAa;;AACrB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAmD;AAAA;AAAA;;AAAnD;;AACA;;AACI;;AACuB;;AAAM;;AACjC;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AAA0C;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,WAAA,MAAT;AAAkC,WAAlC;;AACL;;AAAG;;AAC5C;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;;;AAaJ;;AACJ;;AACJ;;;;AA9HwC;;AAAA;;AAqBA;;AAAA;;AAqBA;;AAAA;;AAqBA;;AAAA;;AAyBuC;;AAAA;;AAuB9D;;AAAA;;;;;;;;;;sEDrHJlC,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTL,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIasC,U;;;;;;;kCACD5B,K,EAAc6B,U,EAAkB;AACxC,cAAG,CAAC7B,KAAJ,EAAW,OAAO,EAAP;AACX,cAAG,CAAC6B,UAAJ,EAAgB,OAAO7B,KAAP;AACpB6B,oBAAU,GAAGA,UAAU,CAACC,WAAX,EAAb;AACA,iBAAO9B,KAAK,CAAC+B,MAAN,CAAc,UAAAC,EAAE,EAAI;AACrB,mBAAOA,EAAE,CAAChG,IAAH,CAAQ8F,WAAR,GAAsBG,QAAtB,CAA+BJ,UAA/B,CAAP;AACD,WAFE,CAAP;AAGI;;;;;;;uBARSD,U;AAAU,K;;;;YAAVA,U;AAAU;;;;;sEAAVA,U,EAAU;cAHtB,kDAGsB;eAHjB;AACJM,cAAI,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;ACJvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACwCY;;AAEI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAiB;;AACzB;;AAEA;;AACI;;AAAG;;AAAwB;;AAC/B;;AACJ;;AACJ;;AACJ;;;;;;AAhByB;;AAAA;;AAQL;;AAAA;;AAID;;AAAA;;;;QD3ClBC,iB;AAWX,iCACUzC,SADV,EAEUtC,MAFV,EAGUiB,uBAHV,EAIUsB,mBAJV,EAIiD;AAAA;;AAHvC,aAAAD,SAAA,GAAAA,SAAA;AACA,aAAAtC,MAAA,GAAAA,MAAA;AACA,aAAAiB,uBAAA,GAAAA,uBAAA;AACA,aAAAsB,mBAAA,GAAAA,mBAAA;AARV,aAAAyC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEA,aAAAsC,QAAA,GAAmB,CAAnB;AAOI;;;;mCAEO;AACT,eAAKC,SAAL,GAAiB,KAAKjE,uBAAL,CAA6BkE,WAA7B,EAAjB;AAEA,eAAKC,cAAL,GAAsB,KAAKF,SAAL,CAAezD,MAArC;;AAEA,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKqD,SAAL,CAAezD,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAC9C,iBAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2B,SAAL,CAAevD,MAAnC,EAA2C4B,CAAC,EAA5C,EAAgD;AAC9C,kBACE,KAAK2B,SAAL,CAAe3B,CAAf,EAAkB,UAAlB,EAA8BC,OAA9B,CAAsC,KAAK4B,SAAL,CAAerD,CAAf,EAAkB,MAAlB,CAAtC,IAAmE,CAAC,CADtE,EAEE;AACA,qBAAKoD,QAAL;AACD;;AAED,mBAAKC,SAAL,CAAerD,CAAf,EAAkB,aAAlB,IAAmC,KAAKoD,QAAxC;AACD;;AAED,iBAAKA,QAAL,GAAgB,CAAhB;AACD;AACF;;;uCAEc1B,M,EAAQ;AACrB,cAAIA,MAAM,CAACK,KAAP,IAAgB,EAApB,EAAwB;AACtBL,kBAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAEAP,kBAAM,CAACQ,WAAP,GAAqB,0BAArB;AAEAR,kBAAM,CAACK,KAAP,GAAe,EAAf;AACD,WAND,MAMO;AACL,iBAAK3C,uBAAL,CAA6BkE,WAA7B,GAA2CnB,IAA3C,CAAgD;AAC9CpF,kBAAI,EAAE2E,MAAM,CAACK,KADiC;AAE9C/E,yBAAW,EAAE;AAFiC,aAAhD;;AAKA,iBAAKyD,SAAL,CAAe2B,IAAf,CACEV,MAAM,CAACK,KAAP,GAAe,8BADjB,EAEE,gBAFF,EAGE;AACEM,sBAAQ,EAAE;AADZ,aAHF;;AAQAX,kBAAM,CAACK,KAAP,GAAe,EAAf;AACD;AACF;;;;;;;uBA7DUmB,iB,EAAiB,wI,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,4mC;AAAA;AAAA;;;ACX9B;;AACI;;AACI;;AACI;;AAAI;;AAAe;;AACvB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAmD;AAAA;AAAA;;AAAnD;;AACA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AAA0C;AAAA;;AAAA;;AAAA,mBAAS,IAAAM,cAAA,KAAT;AAAoC,WAApC;;AACL;;AAAG;;AAC5C;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAoB;;AAAyC;;AACjE;;AAEA;;AACI;;AACI;;;;AAmBJ;;AACJ;;AACJ;;;;AA/C2E;;AAAA;;AAqB/C;;AAAA;;AAMZ;;AAAA;;;;;;;;;;sED9BHN,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT/C,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMwB;;AAAmE;;AAAS;;;;;;AAAS;;AACzB;;AAAa;;;;;;AAAS;;AACvB;;AAAY;;;;;;AAQpE;;AAAyC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAYzC;;AAA0C;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;;;QDnBxDoD,kB;AAUX,kCAAoBrF,KAApB,EAAmDD,MAAnD,EAA2EuC,mBAA3E,EAAoH;AAAA;;AAAhG,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAuC,mBAAA,GAAAA,mBAAA;AAA4C;;;;mCAE5G;AAAA;;AAGT,eAAKgD,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AACxE,kBAAI,CAACE,iBAAL,GAAyB,MAAI,CAACnD,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,CAAzB;AAEA,kBAAI,CAACG,YAAL,GAAoB,MAAI,CAACpD,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,UAAtD,CAApB;AAEA,kBAAI,CAACI,YAAL,GAAoB,MAAI,CAACrD,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,UAAtD,CAApB;AACD,WANyB,CAA1B;AAQD,S,CAED;AACA;AACA;;;;+BAEO;AACLK,eAAK,CAAC,KAAKH,iBAAN,CAAL;AACD;;;;;;;uBA/BUJ,kB,EAAkB,+H,EAAA,uH,EAAA,sJ;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,c;AAAA,iS;AAAA;AAAA;ACV/B;;AACI;;AACJ;;AACA;;AACA;;AACI;;AACI;;AACI;;AAAI;;AAAQ;;AAAqF;;AACH;;AACH;;AAC/F;;AAEA;;AACI;;AAAI;;AAAK;;AAAQ;;AAAyB;;AAAQ;;AACtD;;AAEA;;AACI;;AAAI;;AAAW;;AAAgE;;AACnF;;AAEA;;AACI;;AAAI;;AAAS;;AAAQ;;AAA6B;;AAAQ;;AAC9D;;AAEA;;AACI;;AAAI;;AAAkB;;AAAQ;;AAAwB;;AAAQ;;AAClE;;AAEA;;AACI;;AAAI;;AAAW;;AAAkE;;AACrF;;AAEA;;AACI;;AAA2C;;AAAuB;;AACtE;;AACJ;;AACJ;;;;AAnCI;;AAAA;;AAM2B;;AAAA;;AACX;;AAAA;;AACA;;AAAA;;AAIS;;AAAA;;AAIK;;AAAA;;AAID;;AAAA;;AAIS;;AAAA;;AAIR;;AAAA;;AAIH;;AAAA;;;;;;;;;sEDvBlBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTtD,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBgB;;AACI;;AACJ;;;;;;AAF6C,gGAAA0B,KAAA;;AACzC;;AAAA;;;;;;AAYJ;;AACI;;AACJ;;;;;;AAFqC;;AACjC;;AAAA;;;;;;AAoBJ;;AACI;;AACJ;;;;;;AAFgD,gGAAAA,KAAA;;AAC5C;;AAAA;;;;;;AAYJ;;AAAuE;;AAAgB;;;;;;AAAvC;;AAAuB;;AAAA;;;;;;AAWvE;;AAA0E;;AAAgB;;;;;;AAAvC;;AAAuB;;AAAA;;;;QDnD7EkC,mB;AAYX,mCAAoBxD,SAApB,EAAoDrC,KAApD,EAAmFD,MAAnF,EAA2GiB,uBAA3G,EAAoKsB,mBAApK,EAA6M;AAAA;;AAAzL,aAAAD,SAAA,GAAAA,SAAA;AAAgC,aAAArC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AAVpK,aAAAwD,MAAA,GAAiI;AAAEnH,cAAI,EAAE,EAAR;AAAYoH,aAAG,EAAE,EAAjB;AAAqBC,kBAAQ,EAAE,EAA/B;AAAmCC,mBAAS,EAAE,EAA9C;AAAkDC,iBAAO,EAAE,EAA3D;AAA+D1G,kBAAQ,EAAE,EAAzE;AAA6E2G,YAAE,EAAE;AAAjF,SAAjI;AAiCA,aAAAC,SAAA,GAAoB,CAClB;AAAEzC,eAAK,EAAE,SAAT;AAAoB0C,mBAAS,EAAE;AAA/B,SADkB,EAElB;AAAE1C,eAAK,EAAE,aAAT;AAAwB0C,mBAAS,EAAE;AAAnC,SAFkB,EAGlB;AAAE1C,eAAK,EAAE,YAAT;AAAuB0C,mBAAS,EAAE;AAAlC,SAHkB,CAApB;AAMA,aAAAC,YAAA,GAAuB,CACrB;AAAE3C,eAAK,EAAE,YAAT;AAAuB0C,mBAAS,EAAE;AAAlC,SADqB,EAErB;AAAE1C,eAAK,EAAE,WAAT;AAAsB0C,mBAAS,EAAE;AAAjC,SAFqB,EAGrB;AAAE1C,eAAK,EAAE,QAAT;AAAmB0C,mBAAS,EAAE;AAA9B,SAHqB,EAIrB;AAAE1C,eAAK,EAAE,OAAT;AAAkB0C,mBAAS,EAAE;AAA7B,SAJqB,CAAvB;AAOA,aAAA3H,IAAA,GAAa,KAAKsC,uBAAL,CAA6BtC,IAA1C;AAIA,aAAA6H,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAEA,aAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AAEA,aAAAC,WAAA,GAAoB,KAAKzF,uBAAL,CAA6B4B,qBAA7B,EAApB;AAEA,aAAA8D,cAAA,GAAuB,KAAK1F,uBAAL,CAA6BkE,WAA7B,EAAvB;AA9CgN;;;;mCAErM;AAAA;;AACT,eAAKI,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,kBAAI,CAACrH,EAAL,GAAUqH,MAAM,CAAC,IAAD,CAAhB;AAEA,kBAAI,CAACO,MAAL,GAAc;AACZnH,kBAAI,EAAE,MAAI,CAAC2D,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,MAAtD,CADM;AAEZQ,iBAAG,EAAE,MAAI,CAACzD,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,KAAtD,CAFO;AAGZS,sBAAQ,EAAE,MAAI,CAAC1D,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,UAAtD,CAHE;AAIZU,uBAAS,EAAE,MAAI,CAAC3D,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,WAAtD,CAJC;AAKZW,qBAAO,EAAE,MAAI,CAAC5D,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,SAAtD,CALG;AAMZ/F,sBAAQ,EAAE,MAAI,CAAC8C,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,UAAtD,CANE;AAOZY,gBAAE,EAAE,MAAI,CAAC7D,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,IAAtD;AAPQ,aAAd;AAUA,kBAAI,CAACoB,aAAL,GAAqB,MAAI,CAACrE,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,UAAtD,CAArB;AAEA,kBAAI,CAACqB,aAAL,GAAqB,MAAI,CAACtE,mBAAL,CAAyBI,YAAzB,GAAwC6C,MAAM,CAAC,IAAD,CAA9C,EAAsD,UAAtD,CAArB;AACD,WAjByB,CAA1B;AAkBD;;;wCA6BejC,M,EAAQuD,M,EAAQC,M,EAAQC,M,EAAQC,M,EAAQ;AAEtD,eAAK1E,mBAAL,CAAyB3C,SAAzB,CAAmC,KAAKzB,EAAxC,EAA4C,MAA5C,IAAsDoF,MAAtD;AAEA,eAAKhB,mBAAL,CAAyB3C,SAAzB,CAAmC,KAAKzB,EAAxC,EAA4C,KAA5C,IAAqD4I,MAArD;AAEA,eAAKxE,mBAAL,CAAyB3C,SAAzB,CAAmC,KAAKzB,EAAxC,EAA4C,UAA5C,IAA0D,KAAKyI,aAA/D;AAEA,eAAKrE,mBAAL,CAAyB3C,SAAzB,CAAmC,KAAKzB,EAAxC,EAA4C,WAA5C,IAA2D2I,MAA3D;AAEA,eAAKvE,mBAAL,CAAyB3C,SAAzB,CAAmC,KAAKzB,EAAxC,EAA4C,SAA5C,IAAyD6I,MAAzD;AAEA,eAAKzE,mBAAL,CAAyB3C,SAAzB,CAAmC,KAAKzB,EAAxC,EAA4C,UAA5C,IAA0D,KAAK0I,aAA/D;AAEA,eAAKtE,mBAAL,CAAyB3C,SAAzB,CAAmC,KAAKzB,EAAxC,EAA4C,IAA5C,IAAoD8I,MAApD;AAEA,eAAKjH,MAAL,CAAYK,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAAE6G,sBAAU,EAAE,KAAKjH;AAAnB,WAA9B,EAhBsD,CAkBtD;;AAEA,eAAKqC,SAAL,CAAe2B,IAAf,CAAoBV,MAAM,GAAG,mBAA7B,EAAkD,gBAAlD,EAAoE;AAClEW,oBAAQ,EAAE;AADwD,WAApE;AAID;;;;;;;uBAtFU4B,mB,EAAmB,wI,EAAA,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,2d;AAAA;AAAA;;;ACzBhC;;AACI;;AACJ;;AACA;;AAEA;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AAEA;;AAEI;;AACI;;AAAW;;AAAa;;AACxB;;AACI;;AAGJ;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AAAW;;AAAU;;AACrB;;AACI;;AAGJ;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AAAW;;AAAuB;;AAClC;;AACI;;AAGJ;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AAAW;;AAAc;;AACzB;;AAA8C;AAAA;AAAA;;AAC1C;;AACJ;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AAAW;;AAAc;;AACzB;;AAAiD;AAAA;AAAA;;AAC7C;;AACJ;;AACJ;;AAEJ;;AAEA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAqB,eAAA,4DAAT;AAA8F,WAA9F;;AAAgG;;AAC7E;;AAC3B;;AAEJ;;;;AAvFI;;AAAA;;AAQkD;;AAAA;;AAQtB;;AAAA;;AACJ;;AAAA;;AAYC;;AAAA;;AACD;;AAAA;;AAW2B;;AAAA;;AASnB;;AAAA;;AACR;;AAAA;;AAYJ;;AAAA,gGAAwB,SAAxB,EAAwB,iBAAxB;;AACI;;AAAA;;AAUJ;;AAAA,mGAA2B,SAA3B,EAA2B,iBAA3B;;AACI;;AAAA;;;;;;;;;sEDnDfrB,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT9D,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSsC;;AAA0D;;AAAS;;;;;;AAAS;;AACnC;;AAAa;;;;;;AAAS;;AACvB;;AAAY;;;;;;;;;;;;AATtF;;AAEI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAkB;;AAA4E;;AACb;;AACH;;AAClF;;AAAI;;AAAqB;;AACzB;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AAAG;;AAAqB;;AAAI;;AACpC;;AACJ;;AACJ;;AACJ;;;;;;AAVgB;;AAAA;;AAAyB;;AAAA;;AACrB;;AAAA;;AACA;;AAAA;;AACJ;;AAAA,gGAAA8D,GAAA;;AAEoE;;AAAA;;;;QDM3EoB,iB;AAMX,iCAAmB7E,mBAAnB,EAAoEtB,uBAApE,EAAmH;AAAA;;AAAhG,aAAAsB,mBAAA,GAAAA,mBAAA;AAAiD,aAAAtB,uBAAA,GAAAA,uBAAA;AAJpE,aAAAoG,UAAA,GAAsB,IAAtB;AAEA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAE0H;;;;mCAG/G,CACV;;;oCAIW;AAEV,eAAK2E,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAEY;AACX,eAAKgJ,UAAL,GAAkB,KAAlB;AACD;;;sCAEa;AACZ,eAAKA,UAAL,GAAkB,IAAlB;AACD;;;;;;;uBA1BUD,iB,EAAiB,sJ,EAAA,8J;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,qiB;AAAA;AAAA;ACpB9B;;AAEI;;;;AAmBJ;;AAIA;;AAAyD;AAAA,mBAAS,IAAAG,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AA5BS;;AAAA;;AAuBJ;;AAAA;;AAGA;;AAAA;;;;;;;;;;sEDRQH,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTpF,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEnB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgD4C;;AACI;;AACJ;;;;;;AAF6C;;AACzC;;AAAA;;;;;;AAiBJ;;AACI;;AACJ;;;;;;AAFqC;;AACjC;;AAAA;;;;;;AA8BJ;;AACI;;AAAgB;;;;;;AAD+B;;AAC/C;;AAAA;;;;;;AAYJ;;AACI;;AAAgB;;;;;;AAD4B;;AAC5C;;AAAA;;;;;;AAYJ;;AACI;;AACJ;;;;;;AAF4C;;AACxC;;AAAA;;;;;;AAsEpC;;;;;;AAEA;;;;QD/KCsF,wB;AAcX,wCAAoBlF,SAApB,EAAmDC,mBAAnD,EAAoGtB,uBAApG,EAAmJ;AAAA;;AAA/H,aAAAqB,SAAA,GAAAA,SAAA;AAA+B,aAAAC,mBAAA,GAAAA,mBAAA;AAAiD,aAAAtB,uBAAA,GAAAA,uBAAA;AAZpG,aAAAoG,UAAA,GAAsB,IAAtB;AAEA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEA,aAAA8E,OAAA,GAAkB,KAAKzC,SAAL,CAAevD,MAAjC;AAEA,aAAAiG,SAAA,GAAoB,CAApB;AAEA,aAAAC,YAAA,GAAuB,CAAvB;AAEA,aAAAC,WAAA,GAAsB,CAAtB;AA6EA,aAAAC,SAAA,GAAiB,EAAjB;AAEA,aAAAC,MAAA,GAAiB,EAAjB;AAIA,aAAAC,KAAA,GAAa,EAAb,CAjFmJ,CAmFnJ;;AACA,aAAA1B,SAAA,GAAoB,CAClB;AAAEzC,eAAK,EAAE,SAAT;AAAoB0C,mBAAS,EAAE;AAA/B,SADkB,EAElB;AAAE1C,eAAK,EAAE,aAAT;AAAwB0C,mBAAS,EAAE;AAAnC,SAFkB,EAGlB;AAAE1C,eAAK,EAAE,YAAT;AAAuB0C,mBAAS,EAAE;AAAlC,SAHkB,CAApB;AAMA,aAAAC,YAAA,GAAuB,CACrB;AAAE3C,eAAK,EAAE,YAAT;AAAuB0C,mBAAS,EAAE;AAAlC,SADqB,EAErB;AAAE1C,eAAK,EAAE,WAAT;AAAsB0C,mBAAS,EAAE;AAAjC,SAFqB,EAGrB;AAAE1C,eAAK,EAAE,QAAT;AAAmB0C,mBAAS,EAAE;AAA9B,SAHqB,EAIrB;AAAE1C,eAAK,EAAE,OAAT;AAAkB0C,mBAAS,EAAE;AAA7B,SAJqB,CAAvB;AAOA,aAAA3H,IAAA,GAAa,KAAKsC,uBAAL,CAA6BtC,IAA1C;AAGA,aAAAqJ,MAAA,GAAiB,MAAjB;AAEA,aAAAC,SAAA,GAAqB,IAArB;AAiBA,aAAAzB,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAEA,aAAAE,WAAA,GAAoB,KAAKzF,uBAAL,CAA6B4B,qBAA7B,EAApB;AAEA,aAAA8D,cAAA,GAAuB,KAAK1F,uBAAL,CAA6BkE,WAA7B,EAAvB;AA3H0J;;;;mCAE/I;AAET,eAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAE9C,gBAAI,KAAKmD,SAAL,CAAenD,CAAf,EAAkB,WAAlB,MAAmC,SAAvC,EAAkD;AAEhD,mBAAK6F,SAAL;AAED;AACF;;AAGD,eAAK,IAAI7F,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,GAAC,EAA5C,EAAgD;AAE9C,gBAAI,KAAKmD,SAAL,CAAenD,GAAf,EAAkB,WAAlB,MAAmC,aAAvC,EAAsD;AAEpD,mBAAK8F,YAAL;AAED;AAEF;;AAED,eAAK,IAAI9F,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,GAAC,EAA5C,EAAgD;AAE9C,gBAAI,KAAKmD,SAAL,CAAenD,GAAf,EAAkB,WAAlB,MAAmC,YAAvC,EAAqD;AAEnD,mBAAK+F,WAAL;AAED;AAEF;AAEF;;;oCAGW,CAEX;;;qCAEY;AACX,eAAKP,UAAL,GAAkB,KAAlB;AACD;;;sCAGa;AACZ,eAAKA,UAAL,GAAkB,IAAlB;AACD;;;8BAKK9D,M,EAAQ;AAEZ,eAAKtC,uBAAL,CAA6B5C,UAA7B,GAA0CkF,MAAM,CAAC2E,MAAP,CAActE,KAAxD,CAFY,CAIZ;AAGD;;;+BAEMkD,M,EAAQ;AAEb,eAAK7F,uBAAL,CAA6B5C,UAA7B,GAA0C,EAA1C;AAEA8J,iBAAO,CAACC,GAAR,CAAY,KAAKnH,uBAAL,CAA6B5C,UAAzC;AAGD;;;iCAoCQ;AACP,eAAK2J,MAAL,GAAc,MAAd;AAEA,eAAKC,SAAL,GAAiB,IAAjB;AACD;;;kCAES;AACR,eAAKD,MAAL,GAAc,OAAd;AAEA,eAAKC,SAAL,GAAiB,KAAjB;AACD;;;oCAeW;AAEV,eAAK1F,mBAAL,CAAyBI,YAAzB,GAAwCqB,IAAxC,CAA6C;AAC3C7F,cAAE,EAAE,KAAKoE,mBAAL,CAAyB3C,SAAzB,CAAmC6B,MADI;AAE3C7C,gBAAI,EAAE,KAAKyJ,OAFgC;AAG3CrC,eAAG,EAAE,KAAK8B,MAHiC;AAI3C7B,oBAAQ,EAAE,KAAKW,aAJ4B;AAK3CV,qBAAS,EAAE,KAAK2B,SAL2B;AAM3C1B,mBAAO,EAAE,KAAKmC,UAN6B;AAO3C7I,oBAAQ,EAAE,KAAK8I,aAP4B;AAQ3CnC,cAAE,EAAE,KAAK2B;AARkC,WAA7C;;AAWA,eAAKzF,SAAL,CAAe2B,IAAf,CAAoB,KAAKoE,OAAL,GAAe,4BAAnC,EAAiE,gBAAjE,EAAmF;AACjFnE,oBAAQ,EAAE;AADuE,WAAnF,EAbU,CAiBV;AAEA;AAEA;AAEA;AAEA;;AAED;;;;;;;uBA3KUsD,wB,EAAwB,wI,EAAA,sJ,EAAA,8J;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,gB;AAAA,c;AAAA,qzE;AAAA;AAAA;ACtBrC;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAa;;AACrB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAEgC;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAAgB,KAAA,QAAV;AAAuB,WAA/C,EAAwB,MAAxB,EAAwB;AAAA,mBAC5C,IAAAC,MAAA,QAD4C;AAC9B,WADM;;AAFhC;;AAIA;;AACI;;AAAmE;;AAAM;;AAC7E;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAEsB;AAAA;AAAA;;AAFtB;;AAGJ;;AAEA;;AACwB;;AAAgB;;AAC5C;;AAEA;;AAEI;;AACI;;AAAW;;AAAa;;AACxB;;AAAqB;AAAA;AAAA;;AAGjB;;AAGJ;;AACJ;;AAEA;;AACwB;;AACd;;AAEd;;AAEA;;AAEI;;AACI;;AAAW;;AAAU;;AACrB;;AAAqB;AAAA;AAAA;;AAEjB;;AAGJ;;AACJ;;AAEA;;AACwB;;AACjB;;AAEX;;AAEA;;AAEI;;AACI;;AAEuB;AAAA;AAAA;;AAFvB;;AAGJ;;AAEA;;AACwB;;AAAwB;;AAEpD;;AAEA;;AAEI;;AACI;;AAAW;;AAAc;;AACzB;;AACI;AAAA;AAAA;;AACA;;AAEJ;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AAAW;;AAAc;;AACzB;;AACI;AAAA;AAAA;;AACA;;AAEJ;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AAAW;;AAAuB;;AAClC;;AAAqB;AAAA;AAAA;;AAEjB;;AAGJ;;AACJ;;AAEA;;AAA6E;;AACzD;;AAExB;;AAEA;;AACI;;AAAsD;AAAA,mBAAS,IAAAC,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAClE;;AACd;;AAEJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAA0B;;AAClC;;AAEA;;AACI;;AAAI;;AAA8B;;AACtC;;AAGA;;AACI;;AAAI;;AAAqC;;AAC7C;;AAEA;;AACI;;AAAI;;AAAmC;;AAC3C;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqC;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AACI;;AACjC;;AACJ;;AAAI;;AACZ;;AACA;;AACI;;AAAsC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AACG;;AACjC;;AACJ;;AAAI;;AACZ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAEA;;AAEJ;;AACJ;;AACJ;;;;;;;;;;;;;;;;AAxLwD;;AAAA;;AAiBZ;;AAAA;;AACkB;;AAGnB;;AAAA;;AASC;;AAAA;;AADiB;;AAGL;;AAAA;;AAMb;;AAAA;;AAWC;;AAAA;;AADiB;;AAEL;;AAAA;;AAMb;;AAAA;;AAUC;;AAAA;;AACmB;;AAGpB;;AAAA;;AASkB;;AAAA,gGAAwB,SAAxB,EAAwB,iBAAxB;;AAEL;;AAAA;;AAWK;;AAAA,gGAAwB,SAAxB,EAAwB,iBAAxB;;AAEL;;AAAA;;AAYZ;;AAAA;;AADiB;;AAEL;;AAAA;;AAMb;;AAAA;;AAMY;;AAAA;;AAkB/B;;AAAA;;AAIA;;AAAA;;AAKA;;AAAA;;AAIA;;AAAA;;AAWQ;;AAAA;;AAMA;;AAAA;;AASL;;AAAA;;AAEA;;AAAA;;AAEC;;AAAA;;;;;;;;;sED/KfpB,wB,EAAwB;cAPpC,uDAOoC;eAP1B;AACTxF,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAO0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEtBrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACSE;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAA0F;;AAAG;;AACxF;;AAAI;;AAAS;;AAChC;;;;;;;AANM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACoE;;AAAA;;;;QDJ/D2G,kB;AAOX,kCAAmBtG,mBAAnB,EAAoEtB,uBAApE,EAAmH;AAAA;;AAAhG,aAAAsB,mBAAA,GAAAA,mBAAA;AAAiD,aAAAtB,uBAAA,GAAAA,uBAAA;AALpE,aAAAoG,UAAA,GAAsB,IAAtB;AAGA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAE0H;;;;mCAG/G,CACV;;;oCAIW;AAEV,eAAK2E,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAEY;AACX,eAAKgJ,UAAL,GAAkB,KAAlB;AACD;;;sCAEa;AACZ,eAAKA,UAAL,GAAkB,IAAlB;AACD;;;;;;;uBA3BUwB,kB,EAAkB,sJ,EAAA,8J;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,2S;AAAA;AAAA;ACV/B;;AACE;;AACE;;AAA0E;;AAAI;;AAC9E;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AACV;;AAEA;;;;AAQF;;AAKA;;AAAyD;AAAA,mBAAS,IAAAtB,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACE;;AACF;;;;AAlBM;;AAAA;;AAaD;;AAAA;;AAGA;;AAAA;;;;;;;;;;sEDfQsB,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT7G,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACsCY;;AAEI;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AACjB;;AACI;;AACI;;AAA0B;;AAAQ;;AACtC;;AACA;;AACI;;AAAI;;AAAY;;AACpB;;AACA;;AACI;;AAAG;;AAAmB;;AAC1B;;AACJ;;AACJ;;AACJ;;;;;;AAb6C;;AAAA;;AAMzB;;AAAA;;AAGD;;AAAA;;;;QDtClB4G,mB;AAcX,mCAAoBxG,SAApB,EAAoDtC,MAApD,EAA4EiB,uBAA5E,EAAqIsB,mBAArI,EAA8K;AAAA;;AAA1J,aAAAD,SAAA,GAAAA,SAAA;AAAgC,aAAAtC,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AANrI,aAAAwG,QAAA,GAAmB,CAAnB;AAEA,aAAA/D,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAIiL;;;;mCAEtK;AAET,eAAKhE,IAAL,GAAY,KAAKsC,uBAAL,CAA6BiC,OAA7B,EAAZ;AAEA,eAAK8F,UAAL,GAAkB,KAAKzG,mBAAL,CAAyBI,YAAzB,EAAlB;AAEA,eAAKsG,SAAL,GAAiB,KAAKtK,IAAL,CAAU8C,MAA3B;;AAEA,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlD,IAAL,CAAU8C,MAA9B,EAAsCI,CAAC,EAAvC,EAA2C;AAEzC,iBAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2B,SAAL,CAAevD,MAAnC,EAA2C4B,CAAC,EAA5C,EAAgD;AAE9C,kBAAI,KAAK2B,SAAL,CAAe3B,CAAf,EAAkB,KAAlB,KAA4B,KAAK1E,IAAL,CAAUkD,CAAV,EAAa,MAAb,CAAhC,EAAsD;AAEpD,qBAAKkH,QAAL;AACD;;AAED,mBAAKpK,IAAL,CAAUkD,CAAV,EAAa,aAAb,IAA8B,KAAKkH,QAAnC;AACD;;AAED,iBAAKA,QAAL,GAAgB,CAAhB;AAED;AAEF;;;oCAGW;AAEV,eAAKpK,IAAL,GAAY,KAAKsC,uBAAL,CAA6BiC,OAA7B,EAAZ;AAEA,eAAK+F,SAAL,GAAiB,KAAKtK,IAAL,CAAU8C,MAA3B;AAEA,eAAKuH,UAAL,GAAkB,KAAKzG,mBAAL,CAAyBI,YAAzB,EAAlB;AACD;;;kCAGSY,M,EAAQ;AAGhB,cAAIA,MAAM,CAACK,KAAP,IAAgB,EAApB,EAAwB;AAEtBL,kBAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAEAP,kBAAM,CAACQ,WAAP,GAAqB,0BAArB;AAEAR,kBAAM,CAACK,KAAP,GAAe,EAAf;AAED,WARD,MAUK;AAEH,iBAAK3C,uBAAL,CAA6BiC,OAA7B,GAAuCc,IAAvC,CAA4C;AAE1CpF,kBAAI,EAAE2E,MAAM,CAACK,KAF6B;AAEtB/E,yBAAW,EAAE;AAFS,aAA5C;;AAMA,iBAAKyD,SAAL,CAAe2B,IAAf,CAAoBV,MAAM,CAACK,KAAP,GAAe,iBAAnC,EAAsD,gBAAtD,EAAwE;AACtEM,sBAAQ,EAAE;AAD4D,aAAxE;;AAIAX,kBAAM,CAACK,KAAP,GAAe,EAAf;AAED;AAEF;;;kCAGS,CAER;AACD;;;;;;;uBAxFUkF,mB,EAAmB,wI,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,wmC;AAAA;AAAA;;;ACXhC;;AACI;;AACI;;AACI;;AAAI;;AAAW;;AACnB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA8C;AAAA;AAAA;;AAA9C;;AACA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AAA0C;AAAA;;AAAA;;AAAA,mBAAS,IAAAI,SAAA,MAAT;AAA0B,WAA1B;;AACnB;;AAAG;;AAC9B;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAoB;;AAAgC;;AACxD;;AACA;;AACI;;;;AAgBJ;;AACJ;;AACJ;;;;AA1CsE;;AAAA;;AAqBtC;;AAAA;;AAIhB;;AAAA;;;;;;;;;;sED5BHJ,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT9G,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACS0C;;AAA0D;;AAAS;;;;;;AACrF;;AAA8D;;AAAa;;;;;;AAAS;;AAC1B;;AAAY;;;;;;;;;;;;AARtF;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAkB;;AAClB;;AAAoF;;AACN;;AAClF;;AAAI;;AAAqB;;AACzB;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAC0B;;AAAG;;AAAqB;;AAAI;;AAClE;;AACJ;;AACJ;;AACJ;;;;;;AAVgB;;AAAA;;AAAyB;;AAAA;;AAClB;;AAAA;;AACH;;AAAA;;AACJ;;AAAA,gGAAA8D,GAAA;;AAGI;;AAAA;;;;;;AAdxB;;AAEI;;AAiBJ;;;;;;AAjBS;;AAAA;;;;QDQAmD,gB;AAMX,gCAAmB5G,mBAAnB,EAAoEtB,uBAApE,EAAmH;AAAA;;AAAhG,aAAAsB,mBAAA,GAAAA,mBAAA;AAAiD,aAAAtB,uBAAA,GAAAA,uBAAA;AAJpE,aAAAoG,UAAA,GAAsB,IAAtB;AAEA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAE0H;;;;mCAG/G,CACV;;;oCAIW;AAEV,eAAK2E,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAGY;AACX,eAAKgJ,UAAL,GAAkB,KAAlB;AACD;;;sCAEa;AACZ,eAAKA,UAAL,GAAkB,IAAlB;AACD;;;;;;;uBA3BU8B,gB,EAAgB,sJ,EAAA,8J;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,c;AAAA,a;AAAA,ymB;AAAA;AAAA;ACX7B;;AACI;;;;AAoBJ;;AAGA;;AAAyD;AAAA,mBAAS,IAAA5B,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AA5BkB;;AAAA;;AAuBb;;AAAA;;AAGA;;AAAA;;;;;;;;;;sEDhBQ4B,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTnH,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqDY;;;;;;AAEA;;;;QD7CCkH,iB;AAgBX,iCAAmB7G,mBAAnB,EAAoEtB,uBAApE,EAAmH;AAAA;;AAAhG,aAAAsB,mBAAA,GAAAA,mBAAA;AAAiD,aAAAtB,uBAAA,GAAAA,uBAAA;AAbpE,aAAAoG,UAAA,GAAsB,IAAtB;AAUA,aAAAM,YAAA,GAAuB,CAAvB;AAiBA,aAAA3C,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAsBA,aAAAqF,MAAA,GAAiB,MAAjB;AAEA,aAAAC,SAAA,GAAqB,IAArB;AAtC0H;;;;qCAX7G;AACX,eAAKZ,UAAL,GAAkB,KAAlB;AACD;;;sCAEa;AACZ,eAAKA,UAAL,GAAkB,IAAlB;AACD;;;mCAOU;AACT,eAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAE9C,gBAAI,KAAKmD,SAAL,CAAenD,CAAf,EAAkB,WAAlB,MAAmC,YAAvC,EAAqD;AAEnD,mBAAK8F,YAAL;AAED;AAEF;AACF;;;8BAMKpE,M,EAAQ;AAEZ,eAAKtC,uBAAL,CAA6B5C,UAA7B,GAA0CkF,MAAM,CAAC2E,MAAP,CAActE,KAAxD,CAFY,CAIZ;AAGD;;;+BAEMkD,M,EAAQ;AAEb,eAAK7F,uBAAL,CAA6B5C,UAA7B,GAA0C,EAA1C;AAEA8J,iBAAO,CAACC,GAAR,CAAY,KAAKnH,uBAAL,CAA6B5C,UAAzC;AAGD;;;iCAOQ;AACP,eAAK2J,MAAL,GAAc,MAAd;AAEA,eAAKC,SAAL,GAAiB,IAAjB;AACD;;;kCAES;AACR,eAAKD,MAAL,GAAc,OAAd;AAEA,eAAKC,SAAL,GAAiB,KAAjB;AACD;;;;;;;uBAnEUmB,iB,EAAiB,sJ,EAAA,8J;AAAA,K;;;YAAjBA,iB;AAAiB,qC;AAAA,e;AAAA,a;AAAA,ygC;AAAA;AAAA;ACX9B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAU;;AAClB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAiD;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAAZ,KAAA,QAAV;AAAuB,WAA/C,EAAwB,MAAxB,EAAwB;AAAA,mBAC7D,IAAAC,MAAA,QAD6D;AAC/C,WADuB;;AAAjD;;AAEA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAAoB;;AAA0C;;AAClE;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqC;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AACI;;AACjC;;AACJ;;AAAI;;AACZ;;AACA;;AACI;;AAAsC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AACG;;AACjC;;AACJ;;AAAI;;AACZ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAEA;;AAEJ;;AACJ;;AACJ;;AAOA;;AAAyD;AAAA,mBAAS,IAAArB,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AA5DiE;;AAAA;;AAczB;;AAAA;;AAWR;;AAAA;;AAMA;;AAAA;;AASL;;AAAA;;AAED;;AAAA;;AAEC;;AAAA;;AAWtB;;AAAA;;AAGA;;AAAA;;;;;;;;;sED3DQ6B,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTpH,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACUQ;;AAEI;;AAAI;;AAAO;;AACX;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACJ;;AAAG;;AAAqB;;AAAI;;AAAS;;AACjD;;;;;;;;;AANQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACoE;;AAAA;;;;;;AAPhF;;AACI;;AAUJ;;;;;;AAVQ;;AAAA;;;;QDECmH,iB;AAUX,iCAAoBpJ,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA6K;AAAA;;AAAzJ,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAMA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEgL;;;;mCAIrK;AAAA;;AAET,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,kBAAI,CAACG,YAAL,GAAoBH,MAAM,CAAC,UAAD,CAA1B;AAEA2C,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACzC,YAAjB;AAED,WANyB,CAA1B;AAOD;;;oCAIW;AAEV,eAAK2B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAEY;AACX,eAAKgJ,UAAL,GAAkB,KAAlB;AACD;;;sCAEa;AACZ,eAAKA,UAAL,GAAkB,IAAlB;AACD;;;;;;;uBAvCUgC,iB,EAAiB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,wT;AAAA;AAAA;ACZ9B;;AACI;;AACI;;AAA0E;;AAAI;;AAC9E;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AACZ;;AAEA;;;;AAYJ;;AAKA;;AAAyD;AAAA,mBAAS,IAAA9B,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AAtBkB;;AAAA;;AAiBb;;AAAA;;AAGA;;AAAA;;;;;;;;;;sEDjBQ8B,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTrH,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+BiD;;AAA4B;;AAAM;;;;;;;;;;;;;;AAT3E;;AACoD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAChD;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAM;;AAAuB;;AAA0C;;AAC3E;;AACA;;AAAqE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjE;;AAAmB;;AAA0B;;AAAM;;AAAI;;AAC3D;;AACJ;;AACJ;;;;;;AAfkC;;AAKlB;;AAAA;;AAIE;;AAAA;;AAA8B;;AAAA;;;;QDvB3CoH,qB;AAEX,qCAAoBrI,uBAApB,EAAqE;AAAA;;AAAjD,aAAAA,uBAAA,GAAAA,uBAAA;AAKpB,aAAAO,QAAA,GAAiB,KAAKP,uBAAL,CAA6BsI,eAA7B,EAAjB;AAEA,aAAA7K,cAAA,GAAuB,KAAKuC,uBAAL,CAA6BvC,cAApD;AAaA,aAAA2I,UAAA,GAAsB,IAAtB;AApBwE;;;;mCAE7D,CACV;;;kCAMS9D,M,EAAM;AACZ,eAAKtC,uBAAL,CAA6BsI,eAA7B,GAA+CC,MAA/C,CAAsDjG,MAAtD,EAA6D,CAA7D;;AAEA,eAAKtC,uBAAL,CAA6BvC,cAA7B,CAA4C8K,MAA5C,CAAmD,CAAnD,EAAqD,CAArD;AACH;;;mCASU1C,M,EAAQC,M,EAAQ0C,K,EAAK;AAC3B,eAAKpC,UAAL,GAAkB,KAAlB;AACA,eAAKqC,WAAL,GAAmB5C,MAAM,CAAC6C,WAA1B;AACA,eAAKC,UAAL,GAAkB7C,MAAM,CAAC4C,WAAzB;AAEA,eAAK1I,uBAAL,CAA6BsI,eAA7B,GAA+CE,KAA/C,EAAsD,MAAtD,IAAgE,IAAhE;;AAEA,eAAKxI,uBAAL,CAA6BvC,cAA7B,CAA4CsF,IAA5C,CAAiD,KAAK/C,uBAAL,CAA6BsI,eAA7B,GAA+CE,KAA/C,CAAjD;AACJ;;;sCAEU;AACN,eAAKpC,UAAL,GAAkB,IAAlB;AACJ;;;;;;;uBApCUiC,qB,EAAqB,8J;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA,e;AAAA,a;AAAA,u1B;AAAA;AAAA;ACTlC;;AACI;;AACI;;AACI;;AAAI;;AAAa;;AACrB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAoB;;AAAwC;;AAChE;;AAEA;;AACI;;AAAoB;;AAA+C;;AACvE;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAgBJ;;AACJ;;AAMA;;AAAyD;AAAA,mBAAS,IAAA/B,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACI;;AACJ;;AACA;;AACA;;AAAqB;;AAAc;;AACvC;;;;AA1CwC;;AAAA;;AAIA;;AAAA;;AAO5B;;AAAA;;AAsBP;;AAAA;;AAGA;;AAAA;;AAEG;;AAAA;;AAGiB;;AAAA;;;;;;;;;sED7CZ+B,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTtH,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACS8C;;AACJ;;AAAS;;;;;;AAAS;;AAClB;;AAAa;;;;;;AAAS;;AACtB;;AAAY;;;;;;;;;;;;AAT1C;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAkB;;AACc;;AACI;;AACF;;AACtC;;AAAI;;AAAqB;;AACzB;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAC0B;;AAAG;;AAAqB;;AAAI;;AAClE;;AACJ;;AACJ;;AACJ;;;;;;AAXgB;;AAAA;;AAAyB;;AAAA;;AACc;;AAAA;;AACI;;AAAA;;AAE3C;;AAAA,gGAAA8D,GAAA;;AAGI;;AAAA;;;;;;AAfxB;;AAEI;;AAkBJ;;;;;;AAlBS;;AAAA;;;;QDOJ6D,mB;AAMX,mCAAmBtH,mBAAnB,EAAoEtB,uBAApE,EAAmH;AAAA;;AAAhG,aAAAsB,mBAAA,GAAAA,mBAAA;AAAiD,aAAAtB,uBAAA,GAAAA,uBAAA;AAJpE,aAAAoG,UAAA,GAAsB,IAAtB;AAEA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEwH;;;;mCAG7G,CACV;;;oCAIY;AAEP,eAAK2E,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAGG;AACN,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBA3BYwC,mB,EAAmB,sJ,EAAA,8J;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,ymB;AAAA;AAAA;ACVhC;;AACQ;;;;AAqBJ;;AAKA;;AAAyD;AAAA,mBAAS,IAAAtC,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AA/Bc;;AAAA;;AA0Bb;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDpBAsC,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT7H,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqDY;;;;;;AAEA;;;;QD9CC4H,gB;AAeX,gCAAmBvH,mBAAnB,EAAoEtB,uBAApE,EAAmH;AAAA;;AAAhG,aAAAsB,mBAAA,GAAAA,mBAAA;AAAiD,aAAAtB,uBAAA,GAAAA,uBAAA;AAZpE,aAAAoG,UAAA,GAAsB,IAAtB;AAUA,aAAAM,YAAA,GAAuB,CAAvB;AAgBA,aAAA3C,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAsBA,aAAAqF,MAAA,GAAiB,MAAjB;AAEA,aAAAC,SAAA,GAAqB,IAArB;AAtCwH;;;;qCAV9G;AACL,eAAKZ,UAAL,GAAkB,KAAlB;AACJ;;;sCAEU;AACN,eAAKA,UAAL,GAAkB,IAAlB;AACJ;;;mCAMU;AACP,eAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAE1C,gBAAK,KAAKmD,SAAL,CAAenD,CAAf,EAAkB,WAAlB,MAAmC,aAAxC,EAAuD;AAEnD,mBAAK8F,YAAL;AAEH;AAEL;AACL;;;8BAMKpE,M,EAAM;AAEV,eAAKtC,uBAAL,CAA6B5C,UAA7B,GAA0CkF,MAAM,CAAC2E,MAAP,CAActE,KAAxD,CAFU,CAIV;AAGD;;;+BAEMkD,M,EAAM;AAEX,eAAK7F,uBAAL,CAA6B5C,UAA7B,GAA0C,EAA1C;AAEA8J,iBAAO,CAACC,GAAR,CAAY,KAAKnH,uBAAL,CAA6B5C,UAAzC;AAGD;;;iCAOK;AACH,eAAK2J,MAAL,GAAc,MAAd;AAEA,eAAKC,SAAL,GAAiB,IAAjB;AACF;;;kCAEM;AACL,eAAKD,MAAL,GAAc,OAAd;AAEA,eAAKC,SAAL,GAAiB,KAAjB;AACF;;;;;;;uBAlEW6B,gB,EAAgB,sJ,EAAA,8J;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,w/B;AAAA;AAAA;ACV7B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAO;;AACf;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAiD;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAAtB,KAAA,QAAV;AAAuB,WAA/C;;AAAjD;;AACA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AACJ;;AACJ;;AAGA;;AAEI;;AACI;;AACI;;AACI;;AAAoB;;AAA0C;;AAClE;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqC;AAAA,mBAAS,IAAAG,MAAA,EAAT;AAAiB,WAAjB;;AACI;;AACjC;;AACJ;;AAAI;;AACZ;;AACA;;AACI;;AAAsC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AACG;;AACjC;;AACJ;;AAAI;;AACZ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAEA;;AAEJ;;AACJ;;AACJ;;AAOA;;AAAyD;AAAA,mBAAS,IAAArB,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AA5DiE;;AAAA;;AAczB;;AAAA;;AAWR;;AAAA;;AAMA;;AAAA;;AASL;;AAAA;;AAEE;;AAAA;;AAEC;;AAAA;;AAWzB;;AAAA;;AAGA;;AAAA;;;;;;;;;sED5DQuC,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT9H,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACYY;;AAEQ;;AAAI;;AAAO;;AACX;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACsB;;AAAG;;AAAqB;;AAAI;;AAAS;;AACvE;;;;;;;;;AANI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;;;AARhB;;AACI;;AAUI;;;;;;AAVA;;AAAA;;;;QDAH6H,oB;AAUX,oCAAoB9J,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA8K;AAAA;;AAA1J,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAMA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEiL;;;;mCAItK;AAAA;;AAET,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,kBAAI,CAACG,YAAL,GAAoBH,MAAM,CAAC,UAAD,CAA1B;AAEA2C,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACzC,YAAjB;AAED,WANyB,CAA1B;AAOD;;;oCAIY;AAEP,eAAK2B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAES;AACR,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBAvCQ0C,oB,EAAoB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,wT;AAAA;AAAA;ACV3B;;AACM;;AACQ;;AAA0E;;AAAI;;AAC9E;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AAChB;;AAEJ;;;;AAYE;;AAKN;;AAAyD;AAAA,mBAAS,IAAAxC,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AAtBc;;AAAA;;AAiBb;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDnBAwC,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT/H,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;AC2CM;;AAEE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAmB;;AACzB;;AAEA;;AACE;;AAAG;;AAA0B;;AAC/B;;AACF;;AACF;;AACF;;;;;;AAduB;;AAAA;;AAMX;;AAAA;;AAID;;AAAA;;;;QD5CJ8H,iB;AAWX,iCACU1H,SADV,EAEUtC,MAFV,EAGUiB,uBAHV,EAIUsB,mBAJV,EAIiD;AAAA;;AAHvC,aAAAD,SAAA,GAAAA,SAAA;AACA,aAAAtC,MAAA,GAAAA,MAAA;AACA,aAAAiB,uBAAA,GAAAA,uBAAA;AACA,aAAAsB,mBAAA,GAAAA,mBAAA;AARV,aAAAyC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEA,aAAAsH,QAAA,GAAmB,CAAnB;AA6BA,aAAAjH,QAAA,GAAqB,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAA0C,SAA1C,EAAoD,SAApD,EAA8D,SAA9D,EAAwE,SAAxE,EAAkF,SAAlF,EAA6F,SAA7F,CAArB;AAtBI;;;;mCAEO;AACT,eAAKkH,SAAL,GAAiB,KAAKjJ,uBAAL,CAA6B4B,qBAA7B,EAAjB;AAEA,eAAKE,cAAL,GAAsB,KAAKmH,SAAL,CAAezI,MAArC;;AAEA,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKqI,SAAL,CAAezI,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAC9C,iBAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2B,SAAL,CAAevD,MAAnC,EAA2C4B,CAAC,EAA5C,EAAgD;AAC9C,kBACE,KAAK2B,SAAL,CAAe3B,CAAf,EAAkB,UAAlB,EAA8BC,OAA9B,CAAsC,KAAK4G,SAAL,CAAerI,CAAf,EAAkB,MAAlB,CAAtC,IAAmE,CAAC,CADtE,EAEE;AACA,qBAAKoI,QAAL;AACD;;AAED,mBAAKC,SAAL,CAAerI,CAAf,EAAkB,aAAlB,IAAmC,KAAKoI,QAAxC;AACD;;AAED,iBAAKA,QAAL,GAAgB,CAAhB;AACD;AACF;;;uCAMc1G,M,EAAQ;AACrB,eAAKC,QAAL,GAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAhB;;AAEA,cAAIJ,MAAM,CAACK,KAAP,IAAgB,EAApB,EAAwB;AACtBL,kBAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAEAP,kBAAM,CAACQ,WAAP,GAAqB,+BAArB;AAEAR,kBAAM,CAACK,KAAP,GAAe,EAAf;AACD,WAND,MAQK;AACH,iBAAK3C,uBAAL,CAA6BnC,kBAA7B,CAAgDkF,IAAhD,CAAqD;AACnDpF,kBAAI,EAAE2E,MAAM,CAACK,KADsC;AAEnD7E,6BAAe,EAAE,KAAKiE,QAAL,CAAc,KAAKQ,QAAnB,CAFkC;AAGnD3E,yBAAW,EAAE;AAHsC,aAArD;;AAMA,iBAAKyD,SAAL,CAAe2B,IAAf,CACEV,MAAM,CAACK,KAAP,GAAe,8BADjB,EAEE,gBAFF,EAGE;AACEM,sBAAQ,EAAE;AADZ,aAHF;;AAQAX,kBAAM,CAACK,KAAP,GAAe,EAAf;AACD;AACF;;;;;;;uBAtEUoG,iB,EAAiB,wI,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,+nC;AAAA;AAAA;;;ACX9B;;AACE;;AACE;;AACE;;AAAI;;AAAe;;AACrB;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAmD;AAAA;AAAA;;AAAnD;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AACE;;AAA0C;AAAA;;AAAA;;AAAA,mBAAS,IAAAG,cAAA,MAAT;AAAoC,WAApC;;AAExC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAA4C;;AAClE;;AAEA;;AACE;;AACE;;;;AAiBF;;AACF;;AACF;;;;AAhD+D;;AAAA;;AAwBvC;;AAAA;;AAMhB;;AAAA;;;;;;;;;;sEDjCKH,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACThI,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACU8C;;AACJ;;AAAS;;;;;;AAAS;;AAClB;;AAAa;;;;;;AAAS;;AACtB;;AAAY;;;;;;;;;;;;AAV1C;;AAEI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAkB;;AACc;;AACI;;AACF;;AACtC;;AAAI;;AAAqB;;AACzB;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAC0B;;AAAG;;AAAqB;;AAAI;;AAClE;;AACJ;;AACJ;;AACJ;;;;;;AAXgB;;AAAA;;AAAyB;;AAAA;;AACc;;AAAA;;AACI;;AAAA;;AAE3C;;AAAA,gGAAA8D,GAAA;;AAGI;;AAAA;;;;;;AAhBxB;;AAEI;;AAmBJ;;;;;;;;AAlBQ;;AAAA;;;;QDSHoE,qB;AAUX,qCAAoBnK,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA8K;AAAA;;AAA1J,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAEA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAMiL;;;;mCAGtK;AAAA;;AAET,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,kBAAI,CAACI,YAAL,GAAoBJ,MAAM,CAAC,UAAD,CAA1B,CAFwE,CAI1E;AACC,WALyB,CAA1B;AAOD;;;oCAIY;AAEP,eAAK8B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAGG;AACN,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBAvCY+C,qB,EAAqB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,ymB;AAAA;AAAA;ACblC;;AACQ;;;;AAsBJ;;AAIJ;;AAAyD;AAAA,mBAAS,IAAA7C,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AA/BkB;;AAAA;;AA0BjB;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDjBI6C,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTpI,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEblC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+DY;;;;;;AAEA;;;;QDtDCmI,yB;AAgBX,yCAAoBpK,KAApB,EAAmDD,MAAnD,EAA2EuC,mBAA3E,EAA6HtB,uBAA7H,EAA8K;AAAA;;AAA1J,aAAAhB,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAuC,mBAAA,GAAAA,mBAAA;AAAkD,aAAAtB,uBAAA,GAAAA,uBAAA;AAd9H,aAAAoG,UAAA,GAAsB,IAAtB;AAgBC,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEA,aAAA2H,UAAA,GAAqB,CAArB;AAEA,aAAAC,OAAA,GAAkB,CAAlB;AAEA,aAAAC,UAAA,GAAqB,CAArB;AAkCA,aAAAxC,MAAA,GAAiB,MAAjB;AAEA,aAAAC,SAAA,GAAqB,IAArB;AA5CiL;;;;qCAZvK;AACL,eAAKZ,UAAL,GAAkB,KAAlB;AACJ;;;sCAEU;AACN,eAAKA,UAAL,GAAkB,IAAlB;AACJ;;;mCAgBU;AAAA;;AACT,eAAK9B,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,kBAAI,CAACI,YAAL,GAAoBJ,MAAM,CAAC,UAAD,CAA1B,CAFwE,CAI1E;AACC,WALyB,CAA1B;;AAQA,eAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAExC,gBAAK,KAAKmD,SAAL,CAAenD,CAAf,EAAkB,UAAlB,EAA8ByB,OAA9B,CAAsC,KAAKsC,YAA3C,IAA2D,CAAC,CAAjE,EAAmE;AAE/D,mBAAK0E,UAAL;;AAEA,kBAAI,KAAKtF,SAAL,CAAenD,CAAf,EAAkB,WAAlB,KAAkC,SAAtC,EAAgD;AAE9C,qBAAK0I,OAAL;AACD;;AAED,kBAAI,KAAKvF,SAAL,CAAenD,CAAf,EAAkB,WAAlB,KAAkC,aAAtC,EAAoD;AAElD,qBAAK2I,UAAL;AACD;AAEJ;AAEL;AAEL;;;iCAQK;AACH,eAAKxC,MAAL,GAAc,MAAd;AAEA,eAAKC,SAAL,GAAiB,IAAjB;AACF;;;kCAEM;AACL,eAAKD,MAAL,GAAc,OAAd;AAEA,eAAKC,SAAL,GAAiB,KAAjB;AACF;;;8BAIK1E,M,EAAM;AAEX,eAAKtC,uBAAL,CAA6B5C,UAA7B,GAA0CkF,MAAM,CAAC2E,MAAP,CAActE,KAAxD,CAFW,CAIX;AAGD;;;+BAEMkD,M,EAAM;AAEX,eAAK7F,uBAAL,CAA6B5C,UAA7B,GAA0C,EAA1C;AAEA8J,iBAAO,CAACC,GAAR,CAAY,KAAKnH,uBAAL,CAA6B5C,UAAzC;AAGD;;;;;;;uBA7FYgM,yB,EAAyB,+H,EAAA,uH,EAAA,sJ,EAAA,8J;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,e;AAAA,c;AAAA,sgC;AAAA;AAAA;ACXtC;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAgB;;AACxB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAiD;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAA7B,KAAA,QAAV;AAAuB,WAA/C,EAAwB,MAAxB,EAAwB;AAAA,mBAC7D,IAAAC,MAAA,QAD6D;AAC/C,WADuB;;AAAjD;;AAEA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAA6B;;AACrC;;AAEA;;AACI;;AAAI;;AAA6B;;AACrC;;AAEA;;AACI;;AAAI;;AAAmC;;AAC3C;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqC;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AACI;;AACjC;;AACJ;;AAAI;;AACZ;;AACA;;AACI;;AAAsC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AACG;;AACjC;;AACJ;;AAAI;;AACZ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAEA;;AACJ;;AACJ;;AACJ;;AAOA;;AAAyD;AAAA,mBAAS,IAAArB,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AA5EoB;;AAAA;;AAQ6C;;AAAA;;AAczC;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAYQ;;AAAA;;AAMA;;AAAA;;AASL;;AAAA;;AAEI;;AAAA;;AAEC;;AAAA;;AAU3B;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDnEQ8C,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTrI,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACUQ;;AAEQ;;AAAI;;AAAO;;AACX;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACsB;;AAAG;;AAAqB;;AAAI;;AAAS;;AACvE;;;;;;;;;AANI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;;;AARhB;;AACI;;AAUI;;;;;;;;AAVA;;AAAA;;;;QDECuI,sB;AAUX,sCAAoBxK,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA8K;AAAA;;AAA1J,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAMA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEiL;;;;mCAItK;AAAA;;AAET,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,kBAAI,CAACI,YAAL,GAAoBJ,MAAM,CAAC,UAAD,CAA1B,CAFwE,CAI1E;AACC,WALyB,CAA1B;AAOD;;;oCAIY;AAEP,eAAK8B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAES;AACR,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBAvCQoD,sB,EAAsB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,wT;AAAA;AAAA;ACZnC;;AACQ;;AACQ;;AAA0E;;AAAI;;AAC9E;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AAChB;;AAEJ;;;;AAYE;;AAKN;;AAAyD;AAAA,mBAAS,IAAAlD,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AAtBc;;AAAA;;AAiBb;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDjBIkD,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTzI,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACS8C;;AACJ;;AAAS;;;;;;AAAS;;AAClB;;AAAa;;;;;;AAAS;;AACtB;;AAAY;;;;;;;;;;;;AAT1C;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAkB;;AACc;;AACI;;AACF;;AACtC;;AAAI;;AAAqB;;AACzB;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAC0B;;AAAG;;AAAqB;;AAAI;;AAClE;;AACJ;;AACJ;;AACJ;;;;;;AAXgB;;AAAA;;AAAyB;;AAAA;;AACc;;AAAA;;AACI;;AAAA;;AAE3C;;AAAA,gGAAA8D,GAAA;;AAGI;;AAAA;;;;;;AAfxB;;AAEI;;AAkBJ;;;;;;;;AAlBS;;AAAA;;;;QDSJ0E,gB;AASX,gCAAoBzK,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA8K;AAAA;;AAA1J,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAEA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAMiL;;;;mCAGtK;AAAA;;AACT,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AACxE,mBAAI,CAACmF,OAAL,GAAenF,MAAM,CAAC,KAAD,CAArB;AAED,WAHyB,CAA1B;AAKD;;;oCAIY;AAEP,eAAK8B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAGG;AACN,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBAnCYqD,gB,EAAgB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,c;AAAA,a;AAAA,ymB;AAAA;AAAA;ACZ7B;;AACQ;;;;AAqBJ;;AAGA;;AAAyD;AAAA,mBAAS,IAAAnD,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AA7Bc;;AAAA;;AAwBb;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDhBAmD,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT1I,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2DoB;;;;;;AAEA;;;;QDnDP0I,oB;AAsBX,oCAAoB3K,KAApB,EAAmDD,MAAnD,EAA2EuC,mBAA3E,EAA6HtB,uBAA7H,EAA8K;AAAA;;AAA1J,aAAAhB,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAuC,mBAAA,GAAAA,mBAAA;AAAkD,aAAAtB,uBAAA,GAAAA,uBAAA;AApB5H,aAAAoG,UAAA,GAAsB,IAAtB;AAcD,aAAAwD,KAAA,GAAgB,CAAhB;AAEA,aAAAN,OAAA,GAAkB,CAAlB;AAEA,aAAAC,UAAA,GAAqB,CAArB;AAIA,aAAAxF,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AA4BA,aAAAqF,MAAA,GAAiB,MAAjB;AAEA,aAAAC,SAAA,GAAqB,IAArB;AAhCiL;;;;qCAlBvK;AACL,eAAKZ,UAAL,GAAkB,KAAlB;AACJ;;;sCAEU;AACN,eAAKA,UAAL,GAAkB,IAAlB;AACJ;;;mCAgBU;AAAA;;AACT,eAAK9B,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AACxE,mBAAI,CAACmF,OAAL,GAAenF,MAAM,CAAC,KAAD,CAArB;AAED,WAHyB,CAA1B;;AAKA,eAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAExC,gBAAK,KAAKmD,SAAL,CAAenD,CAAf,EAAkB,KAAlB,KAA4B,KAAK8I,OAAtC,EAA8C;AAE1C,mBAAKE,KAAL;;AAEA,kBAAI,KAAK7F,SAAL,CAAenD,CAAf,EAAkB,WAAlB,KAAkC,SAAtC,EAAgD;AAE9C,qBAAK0I,OAAL;AACD;;AAED,kBAAI,KAAKvF,SAAL,CAAenD,CAAf,EAAkB,WAAlB,KAAkC,aAAtC,EAAoD;AAElD,qBAAK2I,UAAL;AACD;AACJ;AAEL;AACL;;;iCAOK;AACH,eAAKxC,MAAL,GAAc,MAAd;AAEA,eAAKC,SAAL,GAAiB,IAAjB;AACF;;;kCAEM;AACL,eAAKD,MAAL,GAAc,OAAd;AAEA,eAAKC,SAAL,GAAiB,KAAjB;AACF;;;8BAIK1E,M,EAAM;AAEX,eAAKtC,uBAAL,CAA6B5C,UAA7B,GAA0CkF,MAAM,CAAC2E,MAAP,CAActE,KAAxD,CAFW,CAIX;AAGD;;;+BAEMkD,M,EAAM;AAEX,eAAK7F,uBAAL,CAA6B5C,UAA7B,GAA0C,EAA1C;AAEA8J,iBAAO,CAACC,GAAR,CAAY,KAAKnH,uBAAL,CAA6B5C,UAAzC;AAGD;;;;;;;uBAvFYuM,oB,EAAoB,+H,EAAA,uH,EAAA,sJ,EAAA,8J;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,c;AAAA,sgC;AAAA;AAAA;ACXjC;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAW;;AACnB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAiD;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAApC,KAAA,QAAV;AAAuB,WAA/C,EAAwB,MAAxB,EAAwB;AAAA,mBAAiC,IAAAC,MAAA,QAAjC;AAA+C,WAAvE;;AAAjD;;AACA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAwB;;AAChC;;AAEA;;AACI;;AAAI;;AAA6B;;AACrC;;AAEA;;AACI;;AAAI;;AAAmC;;AAC3C;;AAEJ;;AACJ;;AAEA;;AACY;;AACI;;AACI;;AACI;;AACI;;AAAqC;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AAAwD;;AACzF;;AACA;;AAAI;;AACZ;;AACA;;AACI;;AAAsC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAAyD;;AAC3F;;AACA;;AAAI;;AACZ;;AACJ;;AACJ;;AACJ;;AACR;;AAEJ;;AAEY;;AAEA;;AACZ;;AAEJ;;AACJ;;AAOA;;AAAyD;AAAA,mBAAS,IAAArB,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AA1EoB;;AAAA;;AAQ6C;;AAAA;;AAazC;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAWoE;;AAAA;;AAKE;;AAAA;;AASnE;;AAAA;;AAEO;;AAAA;;AAEC;;AAAA;;AAW9B;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDjEQqD,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT5I,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACUY;;AAEQ;;AAAI;;AAAO;;AACX;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACsB;;AAAG;;AAAqB;;AAAI;;AAAS;;AACvE;;;;;;;;;AANI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;;;AARhB;;AACI;;AAUI;;;;;;;;AAVA;;AAAA;;;;QDEH4I,iB;AAUX,iCAAoB7K,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA8K;AAAA;;AAA1J,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAMA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEiL;;;;mCAItK;AAAA;;AAET,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AACxE,mBAAI,CAACmF,OAAL,GAAenF,MAAM,CAAC,KAAD,CAArB;AAED,WAHyB,CAA1B;AAKD;;;oCAIY;AAEP,eAAK8B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAES;AACR,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBArCQyD,iB,EAAiB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,wT;AAAA;AAAA;ACZ9B;;AACY;;AACQ;;AAA0E;;AAAI;;AAC9E;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AAChB;;AAEJ;;;;AAYE;;AAKN;;AAAyD;AAAA,mBAAS,IAAAvD,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AAtBc;;AAAA;;AAiBb;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDjBAuD,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT9I,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACU8C;;AACJ;;AAAS;;;;;;AAAS;;AAClB;;AAAa;;;;;;AAAS;;AACtB;;AAAY;;;;;;;;;;;;AAV1C;;AAEI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAkB;;AACc;;AACI;;AACF;;AACtC;;AAAI;;AAAqB;;AACzB;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAC0B;;AAAG;;AAAqB;;AAAI;;AAClE;;AACJ;;AACJ;;AACJ;;;;;;AAXgB;;AAAA;;AAAyB;;AAAA;;AACc;;AAAA;;AACI;;AAAA;;AAE3C;;AAAA,gGAAA8D,GAAA;;AAGI;;AAAA;;;;;;AAhBxB;;AAEI;;AAmBJ;;;;;;;;AAlBQ;;AAAA;;;;QDQH+E,qB;AAUX,qCAAoB9K,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA8K;AAAA;;AAA1J,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAEA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAMiL;;;;mCAGtK;AAAA;;AAET,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,mBAAI,CAACG,YAAL,GAAoBH,MAAM,CAAC,UAAD,CAA1B;AAEA2C,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACzC,YAAjB;AAED,WANyB,CAA1B;AAOD;;;oCAIY;AAEP,eAAK2B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAGG;AACN,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBAvCY0D,qB,EAAqB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,ymB;AAAA;AAAA;ACZlC;;AACQ;;;;AAsBJ;;AAGA;;AAAyD;AAAA,mBAAS,IAAAxD,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AA9Bc;;AAAA;;AAyBb;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDjBAwD,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT/I,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqDY;;;;;;AAEA;;;;QD7CC8I,yB;AAgBX,yCAAoB/K,KAApB,EAAmDD,MAAnD,EAA2EuC,mBAA3E,EAA8HtB,uBAA9H,EAA+K;AAAA;;AAA3J,aAAAhB,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAuC,mBAAA,GAAAA,mBAAA;AAAmD,aAAAtB,uBAAA,GAAAA,uBAAA;AAd/H,aAAAoG,UAAA,GAAsB,IAAtB;AAgBC,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEA,aAAAsI,UAAA,GAAqB,CAArB;AA2BA,aAAAjD,MAAA,GAAiB,MAAjB;AAEA,aAAAC,SAAA,GAAqB,IAArB;AAjCkL;;;;qCAZxK;AACL,eAAKZ,UAAL,GAAkB,KAAlB;AACJ;;;sCAEU;AACN,eAAKA,UAAL,GAAkB,IAAlB;AACJ;;;mCAcU;AAAA;;AAET,eAAK9B,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,mBAAI,CAACG,YAAL,GAAoBH,MAAM,CAAC,UAAD,CAA1B;AAEA2C,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACzC,YAAjB;AAED,WANyB,CAA1B;;AASC,eAAK,IAAI9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmD,SAAL,CAAevD,MAAnC,EAA2CI,CAAC,EAA5C,EAAgD;AAEzC,gBAAK,KAAKmD,SAAL,CAAenD,CAAf,EAAkB,UAAlB,EAA8ByB,OAA9B,CAAsC,KAAKqC,YAA3C,IAA2D,CAAC,CAAjE,EAAmE;AAE/D,mBAAKsF,UAAL;AACH;AAEL,WAlBK,CAoBT;;AACD;;;iCAOK;AACH,eAAKjD,MAAL,GAAc,MAAd;AAEA,eAAKC,SAAL,GAAiB,IAAjB;AACF;;;kCAEM;AACL,eAAKD,MAAL,GAAc,OAAd;AAEA,eAAKC,SAAL,GAAiB,KAAjB;AACF;;;8BAIK1E,M,EAAM;AAEX,eAAKtC,uBAAL,CAA6B5C,UAA7B,GAA0CkF,MAAM,CAAC2E,MAAP,CAActE,KAAxD,CAFW,CAIX;AAGD;;;+BAEMkD,M,EAAM;AAEX,eAAK7F,uBAAL,CAA6B5C,UAA7B,GAA0C,EAA1C;AAEA8J,iBAAO,CAACC,GAAR,CAAY,KAAKnH,uBAAL,CAA6B5C,UAAzC;AAGD;;;;;;;uBAlFY2M,yB,EAAyB,+H,EAAA,uH,EAAA,sJ,EAAA,8J;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,e;AAAA,c;AAAA,ugC;AAAA;AAAA;ACXtC;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAgB;;AACxB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAiD;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBAAU,IAAAxC,KAAA,QAAV;AAAuB,WAA/C,EAAwB,MAAxB,EAAwB;AAAA,mBAC7D,IAAAC,MAAA,QAD6D;AAC/C,WADuB;;AAAjD;;AAEA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AAAoB;;AAAsD;;AAC9E;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqC;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AACI;;AACjC;;AACJ;;AAAI;;AACZ;;AACA;;AACI;;AAAsC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AACG;;AACjC;;AACJ;;AAAI;;AACZ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAEA;;AAEJ;;AACJ;;AACJ;;AAOA;;AAAyD;AAAA,mBAAS,IAAArB,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;;;AApEoB;;AAAA;;AAQ6C;;AAAA;;AAczB;;AAAA;;AAWR;;AAAA;;AAMA;;AAAA;;AASL;;AAAA;;AAEI;;AAAA;;AAEC;;AAAA;;AAW3B;;AAAA;;AAGA;;AAAA;;;;;;;;;sED3DQyD,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACThJ,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACYY;;AAEQ;;AAAI;;AAAO;;AACX;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACsB;;AAAG;;AAAqB;;AAAI;;AAAS;;AACvE;;;;;;;;;AANI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;;;AARhB;;AACI;;AAUI;;;;;;;;AAVA;;AAAA;;;;QDAHgJ,sB;AAUX,sCAAoBjL,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAAoIsB,mBAApI,EAA8K;AAAA;;AAA1J,aAAAtC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AARpI,aAAA8E,UAAA,GAAsB,IAAtB;AAMA,aAAArC,SAAA,GAAkB,KAAKzC,mBAAL,CAAyBI,YAAzB,EAAlB;AAEiL;;;;mCAItK;AAAA;;AAET,eAAK4C,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,mBAAI,CAACG,YAAL,GAAoBH,MAAM,CAAC,UAAD,CAA1B;AAEA2C,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACzC,YAAjB;AAED,WANyB,CAA1B;AAOD;;;oCAIY;AAEP,eAAK2B,UAAL,GAAkB,KAAKrG,uBAAL,CAA6B5C,UAA/C;AAED;;;qCAES;AACR,eAAKgJ,UAAL,GAAkB,KAAlB;AACH;;;sCAEU;AACP,eAAKA,UAAL,GAAkB,IAAlB;AACH;;;;;;;uBAvCQ6D,sB,EAAsB,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,wT;AAAA;AAAA;ACV7B;;AACM;;AACQ;;AAA0E;;AAAI;;AAC9E;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AAChB;;AAEJ;;;;AAYE;;AAKN;;AAAyD;AAAA,mBAAS,IAAA3D,WAAA,EAAT;AAAsB,WAAtB;;AACrD;;AAEA;;AACI;;AACJ;;;;AAtBc;;AAAA;;AAiBb;;AAAA;;AAGI;;AAAA;;;;;;;;;;sEDnBA2D,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTlJ,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaiJ,iB;AAUX,iCAAoB7I,SAApB,EAAoDrC,KAApD,EAAmFD,MAAnF,EAA2GiB,uBAA3G,EAAoKsB,mBAApK,EAA6M;AAAA;;AAAzL,aAAAD,SAAA,GAAAA,SAAA;AAAgC,aAAArC,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAyD,aAAAsB,mBAAA,GAAAA,mBAAA;AANpK,aAAA6I,UAAA,GAAkB,EAAlB;AAIA,aAAAC,WAAA,GAAmB,2CAAnB;AAsBA,aAAAC,IAAA,GAAY,WAAZ;AAuHA,aAAAC,QAAA,GAAoB,IAApB;AAEA,aAAAnK,QAAA,GAAiB,KAAKH,uBAAL,CAA6BI,cAA7B,EAAjB;AA7IgN;;;;mCAErM;AAAA;;AACT,eAAKkE,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,mBAAI,CAAC4F,UAAL,GAAkB,OAAI,CAACnK,uBAAL,CAA6BI,cAA7B,GAA8CmE,MAAM,CAAC,IAAD,CAApD,CAAlB;AAEA,mBAAI,CAACrH,EAAL,GAAUqH,MAAM,CAAC,IAAD,CAAhB,CAJwE,CAMxE;AAED,WARyB,CAA1B;AASD;;;qCAEYjC,M,EAAQuD,M,EAAQ;AAC3BvD,gBAAM,CAACiI,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AAEA3E,gBAAM,CAAC0E,KAAP,CAAaC,OAAb,GAAuB,cAAvB;AACD;;;oCAIWlI,M,EAAQuD,M,EAAQ4E,e,EAAiBC,W,EAAaC,e,EAAiBC,a,EAAe;AAExF,cAAIH,eAAe,CAAC9H,KAAhB,IAAyB,KAAKwH,UAAL,CAAgB,UAAhB,CAA7B,EAA0D;AAExD;AAEA,gBAAI,KAAKE,IAAL,CAAUQ,IAAV,CAAeH,WAAW,CAAC/H,KAA3B,CAAJ,EAAuC;AAErCiI,2BAAa,CAACL,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;;AAEA,kBAAIE,WAAW,CAAC/H,KAAZ,IAAqBgI,eAAe,CAAChI,KAAzC,EAAgD;AAE9C,qBAAK3C,uBAAL,CAA6BI,cAA7B,GAA8C,KAAKlD,EAAnD,EAAuD,UAAvD,IAAqEwN,WAAW,CAAC/H,KAAjF,CAF8C,CAI9C;;AAEAL,sBAAM,CAACiI,KAAP,CAAaC,OAAb,GAAuB,cAAvB;AAEA3E,sBAAM,CAAC0E,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AAEAC,+BAAe,CAAC9H,KAAhB,GAAwB,EAAxB;AAEA+H,2BAAW,CAAC/H,KAAZ,GAAoB,EAApB;AAEAgI,+BAAe,CAAChI,KAAhB,GAAwB,EAAxB;AAEAgI,+BAAe,CAAC/H,SAAhB,CAA0BkI,MAA1B,CAAiC,YAAjC;AAEAH,+BAAe,CAAC7H,WAAhB,GAA8B,kBAA9B;AAEA4H,2BAAW,CAAC9H,SAAZ,CAAsBkI,MAAtB,CAA6B,YAA7B;AAEAJ,2BAAW,CAAC5H,WAAZ,GAA0B,cAA1B;AAEA8H,6BAAa,CAACL,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;AAEAC,+BAAe,CAAC7H,SAAhB,CAA0BkI,MAA1B,CAAiC,YAAjC;AAEAL,+BAAe,CAAC3H,WAAhB,GAA8B,kBAA9B;;AAEA,qBAAKzB,SAAL,CAAe2B,IAAf,CAAoB,kBAAkB,KAAKmH,UAAL,CAAgB,MAAhB,CAAlB,GAA4C,mBAAhE,EAAqF,gBAArF,EAAuG;AACrGlH,0BAAQ,EAAE;AAD2F,iBAAvG;AAID,eAlCD,MAkCO;AACL0H,+BAAe,CAAC/H,SAAhB,CAA0BC,GAA1B,CAA8B,YAA9B;AACA8H,+BAAe,CAAC7H,WAAhB,GAA8B,2BAA9B;AACA6H,+BAAe,CAAChI,KAAhB,GAAwB,EAAxB;AACD;AAEF,aA5CD,MA4CO;AACL+H,yBAAW,CAAC9H,SAAZ,CAAsBC,GAAtB,CAA0B,YAA1B;AACA6H,yBAAW,CAAC/H,KAAZ,GAAoB,EAApB;AACAiI,2BAAa,CAACL,KAAd,CAAoBC,OAApB,GAA8B,cAA9B;AACD;AAEF,WAtDD,MAsDO;AAELC,2BAAe,CAAC7H,SAAhB,CAA0BC,GAA1B,CAA8B,YAA9B;AACA4H,2BAAe,CAAC3H,WAAhB,GAA8B,yBAA9B;AACA2H,2BAAe,CAAC9H,KAAhB,GAAwB,EAAxB;AACD;AACF;;;qCAEYoI,S,EAAWC,S,EAAWP,e,EAAiB;AAElDM,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAC,yBAAe,CAACQ,IAAhB,GAAuB,MAAvB;AACD;;;qCAEYF,S,EAAWC,S,EAAWP,e,EAAiB;AAClDM,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAC,yBAAe,CAACQ,IAAhB,GAAuB,UAAvB;AACD;;;qCAGYF,S,EAAWC,S,EAAWN,W,EAAa;AAE9CK,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAE,qBAAW,CAACO,IAAZ,GAAmB,MAAnB;AACD;;;qCAEYF,S,EAAWC,S,EAAWN,W,EAAa;AAC9CK,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAE,qBAAW,CAACO,IAAZ,GAAmB,UAAnB;AACD;;;qCAEYF,S,EAAWC,S,EAAWL,e,EAAiB;AAElDI,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAG,yBAAe,CAACM,IAAhB,GAAuB,MAAvB;AACD;;;qCAEYF,S,EAAWC,S,EAAWL,e,EAAiB;AAClDI,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAG,yBAAe,CAACM,IAAhB,GAAuB,UAAvB;AACD;;;wCAOepH,I,EAAMqH,M,EAAQC,O,EAASC,W,EAAaC,S,EAAWC,O,EAAS;AAGtE,eAAK,IAAI1K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,QAAL,CAAcK,MAAlC,EAA0CI,CAAC,EAA3C,EAA+C;AAC7C,gBAAI,KAAKT,QAAL,CAAcS,CAAd,EAAiB,QAAjB,KAA8B,KAAlC,EAAyC;AACvCsG,qBAAO,CAACC,GAAR,CAAY,KAAKhH,QAAL,CAAcS,CAAd,CAAZ;;AAEA,kBAAIsK,MAAM,CAACvI,KAAP,IAAgB,KAAKxC,QAAL,CAAcS,CAAd,EAAiB,IAAjB,CAApB,EAA4C;AAE1C,qBAAK0J,QAAL,GAAgB,KAAhB;AAEApD,uBAAO,CAACC,GAAR,CAAY,KAAKhH,QAAL,CAAcS,CAAd,EAAiB,IAAjB,CAAZ;AACD;;AAED,kBAAIsK,MAAM,CAACvI,KAAP,IAAgB,KAAKxC,QAAL,CAAc,KAAKjD,EAAnB,EAAuB,IAAvB,CAApB,EAAkD;AAEhD,qBAAKoN,QAAL,GAAgB,IAAhB;AAED;AACF;AACF;;AAED,cAAI,KAAKA,QAAL,IAAiB,IAArB,EAA2B;AAEzB,iBAAKtK,uBAAL,CAA6BI,cAA7B,GAA8C,KAAKlD,EAAnD,EAAuD,MAAvD,IAAiE2G,IAAI,CAAClB,KAAtE;AAEA,iBAAK3C,uBAAL,CAA6BI,cAA7B,GAA8C,KAAKlD,EAAnD,EAAuD,IAAvD,IAA+DgO,MAAM,CAACvI,KAAtE;AAEA,iBAAK3C,uBAAL,CAA6BI,cAA7B,GAA8C,KAAKlD,EAAnD,EAAuD,YAAvD,IAAuEiO,OAAO,CAACxI,KAA/E;AAEA,iBAAK3C,uBAAL,CAA6BI,cAA7B,GAA8C,KAAKlD,EAAnD,EAAuD,SAAvD,IAAoEkO,WAAW,CAACzI,KAAhF;AAEA,iBAAK3C,uBAAL,CAA6BI,cAA7B,GAA8C,KAAKlD,EAAnD,EAAuD,OAAvD,IAAkEmO,SAAS,CAAC1I,KAA5E;AAEA,iBAAK3C,uBAAL,CAA6BI,cAA7B,GAA8C,KAAKlD,EAAnD,EAAuD,KAAvD,IAAgEoO,OAAO,CAAC3I,KAAxE;AAEA,iBAAK5D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,KAAD,CAArB,EAA8B;AAAE6G,wBAAU,EAAE,KAAKjH;AAAnB,aAA9B,EAdyB,CAgBzB;;AAEA,iBAAKqC,SAAL,CAAe2B,IAAf,CAAoBa,IAAI,CAAClB,KAAL,GAAa,2BAAjC,EAA8D,gBAA9D,EAAgF;AAC9EM,sBAAQ,EAAE;AADoE,aAAhF;AAGD,WArBD,MAqBO;AACL2B,iBAAK,CAAC,0CAAD,CAAL;AAEA,iBAAK0F,QAAL,GAAgB,IAAhB;AACD;AAEF;;;;;;;uBA1MUJ,iB,EAAiB,wI,EAAA,+H,EAAA,uH,EAAA,8J,EAAA,sJ;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,kmD;AAAA;AAAA;;;ACf9B;;AACI;;AACJ;;AACA;;AAEA;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AAEA;;AAEI;;AACI;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AACJ;;AAEJ;;AAEA;;AAEI;;AACI;;AACJ;;AAEJ;;AAEA;;AACI;;AAAmC;;AAAgB;;AAEnD;;AACI;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAqB,YAAA,cAAT;AAA8C,WAA9C;;AAAgD;;AACxC;;AAEZ;;AACI;;AACI;;AACI;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,YAAA,qBAAT;AAAgE,WAAhE;;AAAkE;;AAAc;;AACpF;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,YAAA,qBAAT;AAAgE,WAAhE;;AAAkE;;AAC1E;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,YAAA,qBAAT;AAA4D,WAA5D;;AAA8D;;AAAc;;AAChF;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,YAAA,qBAAT;AAA4D,WAA5D;;AAA8D;;AACtE;;AACJ;;AACA;;AAAiE;;AAInD;;AACd;;AACI;;AAEA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,YAAA,qBAAT;AAAgE,WAAhE;;AAAkE;;AAAc;;AACpF;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,YAAA,qBAAT;AAAgE,WAAhE;;AAAkE;;AAC1E;;AACJ;;AACJ;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,WAAA,0CAAT;AAA2G,WAA3G;;AAA6G;;AACrG;;AAChB;;AACJ;;AACJ;;AAEA;;AACI;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAA5F,eAAA,0CAAT;AAAgF,WAAhF;;AAAkF;;AAC9E;;AAC3B;;AAEJ;;;;AA5GI;;AAAA;;AAQgD;;AAAA;;AAOF;;AAAA;;AAQgB;;AAAA;;AAQhB;;AAAA;;AAQF;;AAAA;;AAQI;;AAAA;;;;;;;;;sEDjCvCgE,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnJ,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACC6B;;AAAwD;;AAAQ;;;;;;AAAS;;AAC5C;;AAAY;;;;;;;;QDQzD8K,kB;AAMX,kCAAoB/M,KAApB,EAAmDD,MAAnD,EAA2EiB,uBAA3E,EAA4H;AAAA;;AAAxG,aAAAhB,KAAA,GAAAA,KAAA;AAA+B,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAiB,uBAAA,GAAAA,uBAAA;AAAoD;;;;mCAEpH;AAAA;;AAET,eAAKsE,kBAAL,GAA0B,KAAKtF,KAAL,CAAWuF,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAoB;AAExE,mBAAI,CAACyH,eAAL,GAAuB,OAAI,CAAChM,uBAAL,CAA6BI,cAA7B,GAA8CmE,MAAM,CAAC,IAAD,CAApD,CAAvB;AAED,WAJyB,CAA1B;AAMD;;;;;;;uBAhBUwH,kB,EAAkB,+H,EAAA,uH,EAAA,qK;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,c;AAAA,6N;AAAA;AAAA;ACV/B;;AACI;;AAAyB;;AAAyE;;AAEtG;;AACA;;AACA;;AACI;;AACI;;AACI;;AAAI;;AAA0B;;AAClC;;AAEA;;AACI;;AAAI;;AAAW;;AAAQ;;AAAuB;;AAAQ;;AAC1D;;AAEA;;AACI;;AAAI;;AAAW;;AAAQ;;AAA4B;;AAAQ;;AAC/D;;AAEA;;AACI;;AAAI;;AAAY;;AAAQ;;AAA2B;;AAAQ;;AAC/D;;AAEA;;AACI;;AAAI;;AAAW;;AAAQ;;AAAyB;;AAAQ;;AAC5D;;AACA;;AACI;;AAA2C;;AAAqB;;AACpE;;AACJ;;AACJ;;;;AA7BI;;AAAA;;AAAgC;;AAAA;;AAC5B;;AAAA;;AAMQ;;AAAA;;AAImB;;AAAA;;AAIA;;AAAA;;AAIC;;AAAA;;AAID;;AAAA;;AAGJ;;AAAA;;;;;;;;;sEDjBlBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACThL,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6DoC;;AAA6D;;AAC7D;;;;;;AACA;;AAA4D;;AAG1B;;;;;;AANtC;;AACI;;AAEA;;AAIJ;;;;;;;;AAN+B;;AAAA;;AAEA;;AAAA;;;;;;AAgB3B;;AAAoE;;AACnD;;;;;;AACjB;;AAAmE;;AAEzD;;;;;;AANd;;AAEI;;AAEA;;AAGJ;;;;;;;;AAL+B;;AAAA;;AAEA;;AAAA;;;;;;;;AA1D3C;;AAEI;;AAEI;;AACI;;AACI;;AAEI;AAAA;;AAAA;;AAAA;AAAA;;AAFJ;;AAGJ;;AAEA;;AAA+E;;AAEnE;;AAChB;;AAEA;;AAEI;;AACI;;AAEI;AAAA;;AAAA;;AAAA;AAAA;;AAFJ;;AAGJ;;AAEA;;AAAmF;;AAEvE;;AAEhB;;AAEA;;AACI;;AACI;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAhC;;AAGJ;;AAEA;;AAQJ;;AAEA;;AACI;;AACI;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAhC;;AAGJ;;AAEA;;AASJ;;AAsBA;;AACI;;AACI;;AAEI;AAAA;;AAAA;;AAAA;AAAA;;AAFJ;;AAGJ;;AAEA;;AAAiF;;AAErE;;AAChB;;AAEA;;AAEI;;AACI;;AAEwB;AAAA;;AAAA;;AAAA;AAAA;;AAFxB;;AAIJ;;AAEA;;AACwB;;AACZ;;AAEhB;;AAEA;;AAEI;;AACI;;AAEI;AAAA;;AAAA;;AAAA;AAAA;;AAFJ;;AAGJ;;AAEA;;AACwB;;AACZ;;AAEhB;;AAEA;;AACI;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAChE;;AACd;;AAEJ;;AAEJ;;;;;;;;;;;;;;;;;;;;;;AA9HoB;;AAAA;;AACA;;AAGD;;AAAA;;AASC;;AAAA;;AACA;;AAGD;;AAAA;;AAQ6B;;AAAA;;AAK/B;;AAAA;;AAc8B;;AAAA;;AAFC;;AAMhC;;AAAA;;AAiCI;;AAAA;;AACA;;AAGD;;AAAA;;AASC;;AAAA;;AACoB;;AAIrB;;AAAA;;AAUC;;AAAA;;AACA;;AAGD;;AAAA;;AAOY;;AAAA;;;;;;AAO/B;;AAEI;;AAAI;;AAAkC;;AAC1C;;;;;;;;;;;;AAaA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAI;;AAAc;;AAAiB;;AAAQ;;AAAQ;;AACvD;;AAEA;;AACI;;AAAiB;;AAAI;;AAAO;;AAAW;;AAAQ;;AAC/C;;AAAiB;;AAAK;;AAAO;;AAAY;;AAAQ;;AACjD;;AAAiB;;AAAW;;AAAO;;AAAiB;;AAAQ;;AAChE;;AAEA;;AACI;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE7B;;AAAG;;AAAqB;;AAAI;;AACpC;;AACJ;;AACJ;;AACJ;;;;;;AArBqB;;AAAA;;AAKD;;AAAA;;AAIwB;;AAAA;;AACC;;AAAA;;AACM;;AAAA;;AAI3B;;AAAA;;;;;;AArB5B;;AAEI;;AA2BJ;;;;;;AA3BS;;AAAA;;;;;;;;AAgCL;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAI;;AAAc;;AAAiB;;AAAY;;AAAQ;;AAC3D;;AAEA;;AACI;;AAAiB;;AAAI;;AAAO;;AAAW;;AAAQ;;AAC/C;;AAAiB;;AAAK;;AAAO;;AAAY;;AAAQ;;AACjD;;AAAiB;;AAAW;;AAAO;;AAAiB;;AAAQ;;AAChE;;AAEA;;AACI;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE7B;;AAAG;;AAAqB;;AAAI;;AACpC;;AACJ;;AACJ;;AACJ;;;;;;AArBqB;;AAAA;;AAKD;;AAAA;;AAIwB;;AAAA;;AACC;;AAAA;;AACM;;AAAA;;AAI3B;;AAAA;;;;;;AArB5B;;AAEI;;AA2BJ;;;;;;AA3BS;;AAAA;;;;QDrMZgL,a;AAQX;AAEA,6BAAoBjM,uBAApB,EAAqE;AAAA;;AAAjD,aAAAA,uBAAA,GAAAA,uBAAA;AARpB,aAAAoG,UAAA,GAAsB,IAAtB;AAmCA,aAAAC,UAAA,GAAqB,EAArB;AAyDA,aAAA6F,IAAA,GAAa,IAAIC,IAAJ,EAAb;AAEA,aAAAC,MAAA,GAAmB,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAnB;AAtFwE;;;;mCAE7D;AAET,eAAKC,KAAL,GAAa,KAAKrM,uBAAL,CAA6BI,cAA7B,EAAb,CAFS,CAIT;;AAEA,eAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKyL,KAAL,CAAW7L,MAA/B,EAAuCI,CAAC,EAAxC,EAA4C;AAE1C,gBAAI,KAAKyL,KAAL,CAAWzL,CAAX,EAAc,QAAd,KAA2B,IAA/B,EAAqC;AAEnC,mBAAK0L,UAAL,GAAkB,KAAKD,KAAL,CAAWzL,CAAX,CAAlB,CAFmC,CAInC;AAEA;AAEA;AAED;AAEF;AAGF;;;oCAIW,CAIX,C,CAFC;AAKF;AAEA;AAEA;AAGA;AAEA;AAEA;AAEA;AAGA;;;;mCAEW0B,M,EAAQ;AACjB,cAAI,KAAKgK,UAAL,CAAgB,IAAhB,KAAyB,aAAzB,IAA0C,KAAKA,UAAL,CAAgB,IAAhB,KAAyBhK,MAAvE,EAA+E;AAC7E,iBAAK8D,UAAL,GAAkB,KAAlB;AACD,WAFD,MAEO;AACLxB,iBAAK,CAAC,oCAAD,CAAL;AACD;AACF;;;sCAEa;AACZ,eAAKwB,UAAL,GAAkB,IAAlB;AACD;;;kCAwBS;AACR,eAAKpG,uBAAL,CAA6BI,cAA7B,GAA8C2C,IAA9C,CAAmD;AACjD/E,cAAE,EAAE,KAAKgC,uBAAL,CAA6BjC,YAA7B,CAA0CyC,MADG;AAEjDtD,cAAE,EAAE,KAAKgO,MAFwC;AAGjDvN,gBAAI,EAAE,KAAK4O,QAHsC;AAIjDtO,kBAAM,EAAE,KAJyC;AAKjDC,sBAAU,EAAE,eALqC;AAMjDC,oBAAQ,EAAE,KAAKqO,aANkC;AAOjDpO,eAAG,EAAE,KAAKkN,OAPuC;AAQjDjN,oBAAQ,EAAE,KAAK6N,IAAL,CAAUO,OAAV,KAAsB,GAAtB,GAA4B,KAAKL,MAAL,CAAY,KAAKF,IAAL,CAAUQ,QAAV,EAAZ,CAA5B,GAAgE,GAAhE,GAAsE,KAAKR,IAAL,CAAUS,WAAV,EAR/B;AASjDrO,mBAAO,EAAE,KAAKsO,YATmC;AAUjDrO,iBAAK,EAAE,KAAK8M;AAVqC,WAAnD;;AAcAnE,iBAAO,CAACC,GAAR,CAAY,KAAK+E,IAAL,CAAUO,OAAV,KAAsB,EAAtB,GAA2B,KAAKP,IAAL,CAAUQ,QAAV,EAA3B,GAAkD,EAAlD,GAAuD,KAAKR,IAAL,CAAUS,WAAV,EAAnE;AAGD;;;;;;;uBApHUV,a,EAAa,8J;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,c;AAAA,49F;AAAA;AAAA;ACR1B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAe;;AACvB;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAiD;AAAA;AAAA;;AAAjD;;AACA;;AACI;;AAA2E;;AAAM;;AACrF;;AACJ;;AAEJ;;AACA;;AAEI;;AAsIA;;AAKJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;;;AAgCA;;;;AA8BJ;;AAEA;;AAAyD;AAAA,mBAAS,IAAA3F,WAAA,EAAT;AAAsB,WAAtB;;AACzD;;AAEA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;AArOyE;;AAAA;;AAS5B;;AAAA;;AAsIpB;;AAAA;;AAcK;;AAAA;;AAgCA;;AAAA;;AAgCb;;AAAA;;AAGA;;AAAA;;;;;;;;;;sEDtOJ2F,a,EAAa;cALzB,uDAKyB;eALf;AACTlL,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAwBA,QAAM4L,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,gBAAU,EAAE,aAFd;AAGEC,eAAS,EAAE;AAHb,KADqB,EAOrB;AAAEF,UAAI,EAAE,aAAR;AAAuBG,eAAS,EAAE;AAAlC,KAPqB,EASrB;AACEH,UAAI,EAAE,OADR;AAEEG,eAAS,EAAE,qEAFb;AAGE5N,iBAAW,EAAE,CAAC,6EAAD,CAHf;AAIE6N,cAAQ,EAAE,CACR;AACEJ,YAAI,EAAE,qBADR;AAEEG,iBAAS,EAAE,8GAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OADQ,EAUR;AAAEH,YAAI,EAAE,WAAR;AAAqBG,iBAAS,EAAE;AAAhC,OAVQ,EAYR;AACEH,YAAI,EAAE,kBADR;AAEEG,iBAAS,EAAE,2GAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OAZQ,EAqBR;AACEH,YAAI,EAAE,kBADR;AAEEG,iBAAS,EAAE,gGAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OArBQ,EA8BR;AAAEH,YAAI,EAAE,aAAR;AAAuBG,iBAAS,EAAE;AAAlC,OA9BQ,EAgCR;AAAEH,YAAI,EAAE,cAAR;AAAwBG,iBAAS,EAAE;AAAnC,OAhCQ,EAkCR;AACEH,YAAI,EAAE,2BADR;AAEEG,iBAAS,EAAE,8GAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OAlCQ,EA2CR;AAAEH,YAAI,EAAE,iBAAR;AAA2BG,iBAAS,EAAE;AAAtC,OA3CQ,EA6CR;AACEH,YAAI,EAAE,2BADR;AAEEG,iBAAS,EAAE,+GAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OA7CQ,EAsDR;AAAEH,YAAI,EAAE,iBAAR;AAA2BG,iBAAS,EAAE;AAAtC,OAtDQ,EAwDR;AACEH,YAAI,EAAE,SADR;AAEEG,iBAAS,EAAE,kFAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OAxDQ,EAiER;AACEH,YAAI,EAAE,YADR;AAEEG,iBAAS,EAAE,yFAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OAjEQ,EA0ER;AACEH,YAAI,EAAE,MADR;AAEEG,iBAAS,EAAE,yEAFb;AAGEC,gBAAQ,EAAE,CACR;AAAEJ,cAAI,EAAE,KAAR;AAAeG,mBAAS,EAAE;AAA1B,SADQ,EAER;AAAEH,cAAI,EAAE,WAAR;AAAqBG,mBAAS,EAAE;AAAhC,SAFQ;AAHZ,OA1EQ,EAmFR;AAAEH,YAAI,EAAE,MAAR;AAAgBG,iBAAS,EAAE;AAA3B,OAnFQ;AAJZ,KATqB,EAoGrB;AAEA;AAAEH,UAAI,EAAE,IAAR;AAAcG,eAAS,EAAE;AAAzB,KAtGqB,CAAvB;;QA6GaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBM,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRrN,iBAAO,EAAE,CAAC,6DAAasN,OAAb,CAAqBP,MAArB,CAAD,CADD;AAER5P,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACrI7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaoQ,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,gBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACTzB;;;;;;;;;sEDSaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTtM,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiCasM,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,6EAAD,EAAY,yEAAZ,C;AAAyB,gBAP3B,CACP,uEADO,EAEP,oEAFO,EAGP,wEAHO,EAIP,+DAJO,EAKP,0DALO,CAO2B;;;;0HAGzBA,S,EAAS;AAAA,uBAhBlB,2DAgBkB,EAflB,qEAekB,EAdlB,qEAckB,EAblB,+FAakB;AAbG,kBAIrB,uEAJqB,EAKrB,oEALqB,EAMrB,wEANqB,EAOrB,+DAPqB,EAQrB,0DARqB;AAaH,O;AALP,K;;;;;sEAKFA,S,EAAS;cAlBrB,sDAkBqB;eAlBZ;AACRpM,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,qEAHY,EAIZ,+FAJY,CADN;AAORqM,yBAAe,EAAE,CAAC,wGAAD,CAPT;AAQR1N,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,wEAHO,EAIP,+DAJO,EAKP,0DALO,CARD;AAeR2N,mBAAS,EAAE,CAAC,6EAAD,EAAY,yEAAZ,CAfH;AAgBRC,mBAAS,EAAE,CAAC,2DAAD;AAhBH,S;AAkBY,Q;;;;;;;;;;;;;;;;;;ACjCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,c;AACX,8BACU5O,MADV,EAEUiB,uBAFV,EAGUlB,WAHV,EAGkC;AAAA;;AAFxB,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAiB,uBAAA,GAAAA,uBAAA;AACA,aAAAlB,WAAA,GAAAA,WAAA;AAGV,aAAAqB,QAAA,GAAiB,KAAKH,uBAAL,CAA6BI,cAA7B,EAAjB;AAwBA,aAAAwN,IAAA,GAAa,KAAK5N,uBAAL,CAA6BI,cAA7B,EAAb;AAEA,aAAAyN,UAAA,GAAsB,KAAtB;AAEA,aAAAC,cAAA,GAA0B,KAA1B;AA9BK;;;;mCAIM;AACT,cAAIC,IAAI,GAAG,IAAX;;AAEA,mBAASlN,MAAT,GAAkB;AAChB;AAEA,iBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmN,IAAI,CAAC5N,QAAL,CAAcK,MAAlC,EAA0CI,CAAC,EAA3C,EAA+C;AAC7C,kBAAImN,IAAI,CAAC5N,QAAL,CAAcS,CAAd,EAAiB,QAAjB,KAA8B,IAAlC,EAAwC;AACtCmN,oBAAI,CAAC/N,uBAAL,CAA6BI,cAA7B,GAA8CQ,CAA9C,EAAiD,QAAjD,IAA6D,KAA7D;AACD;AACF;;AAEDmN,gBAAI,CAACjP,WAAL,CAAiB+B,MAAjB;AACD;;AAEDA,gBAAM;AACP;;;iCAEQ;AACP+D,eAAK,CAAC,IAAD,CAAL;AACD;;;kCAQStC,M,EAAQuD,M,EAAQ;AAExB,cAAIvD,MAAM,CAACK,KAAP,IAAgB,EAApB,EAAwB;AAEtBL,kBAAM,CAACQ,WAAP,GAAqB,wBAArB;AAEAR,kBAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;;AAEA,gBAAIgD,MAAM,CAAClD,KAAP,IAAgB,EAApB,EAAwB;AAEtBkD,oBAAM,CAAC/C,WAAP,GAAqB,8BAArB;AAEA+C,oBAAM,CAACjD,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAED;;AAED,gBAAIgD,MAAM,CAAClD,KAAP,KAAiB,EAArB,EAAyB;AAEvBkD,oBAAM,CAAC/C,WAAP,GAAqB,8BAArB;AAEA+C,oBAAM,CAACjD,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAEAgD,oBAAM,CAAClD,KAAP,GAAe,EAAf;AAED;AACF,WAvBD,MAuBO;AAEL,iBAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgN,IAAL,CAAUpN,MAA9B,EAAsCI,CAAC,EAAvC,EAA2C;AAEzC,kBAAI0B,MAAM,CAACK,KAAP,IAAgB,KAAKiL,IAAL,CAAUhN,CAAV,EAAa,IAAb,CAApB,EAAwC;AAEtC,oBAAIiF,MAAM,CAAClD,KAAP,IAAgB,KAAKiL,IAAL,CAAUhN,CAAV,EAAa,UAAb,CAApB,EAA8C;AAE5C,uBAAKZ,uBAAL,CAA6BjC,YAA7B,CAA0C6C,CAA1C,EAA6C,QAA7C,IAAyD,IAAzD;AAEA,uBAAK9B,WAAL,CAAiBkP,KAAjB;AAEA,uBAAKjP,MAAL,CAAYK,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AAEA,uBAAK0O,cAAL,GAAsB,KAAtB;AAED,iBAVD,MAUO;AACL,uBAAKA,cAAL,GAAsB,IAAtB;AACD;;AAED,qBAAKD,UAAL,GAAkB,KAAlB;AAEA;AAED,eApBD,MAoBO;AAEL,qBAAKA,UAAL,GAAkB,IAAlB;AACD;AAEF;;AAED,gBAAI,KAAKA,UAAL,IAAmB,IAAvB,EAA6B;AAE3BvL,oBAAM,CAACQ,WAAP,GAAqB,2BAArB;AAEAR,oBAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAEAP,oBAAM,CAACK,KAAP,GAAe,EAAf;AAED;;AAED,gBAAI,KAAKmL,cAAL,IAAuB,IAA3B,EAAiC;AAE/BjI,oBAAM,CAAC/C,WAAP,GAAqB,iCAArB;AAEA+C,oBAAM,CAACjD,SAAP,CAAiBC,GAAjB,CAAqB,YAArB;AAEAgD,oBAAM,CAAClD,KAAP,GAAe,EAAf;AACD;AAEF;AAGF;;;6BAEIoI,S,EAAWC,S,EAAWiD,I,EAAM;AAE/BlD,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAyD,cAAI,CAAChD,IAAL,GAAY,UAAZ;;AAEA,cAAIgD,IAAI,CAACtL,KAAL,IAAc,EAAlB,EAAsB;AACpBoI,qBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAQ,qBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAyD,gBAAI,CAAChD,IAAL,GAAY,MAAZ;AACD,WAd8B,CAgB/B;;AACD;;;mCAEUF,S,EAAWC,S,EAAWiD,I,EAAM;AAErClD,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAyD,cAAI,CAAChD,IAAL,GAAY,MAAZ;AACD;;;mCAEUF,S,EAAWC,S,EAAWiD,I,EAAM;AACrClD,mBAAS,CAACR,KAAV,CAAgBC,OAAhB,GAA0B,QAA1B;AAEAQ,mBAAS,CAACT,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AAEAyD,cAAI,CAAChD,IAAL,GAAY,UAAZ;AACD;;;;;;;uBAvJU0C,c,EAAc,uH,EAAA,8J,EAAA,yI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,6yB;AAAA;AAAA;;;ACV3B;;AAAsB;AAAA,mBAAU,IAAA9M,MAAA,EAAV;AAAkB,WAAlB;;AACpB;;AACE;;AACE;;AAAI;;AAAkD;;AACxD;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAW;;AACjB;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AACE;;AAAuB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAqN,IAAA,qBAAT;AAAyC,WAAzC;;AAAvB;;AAEF;;AAEA;;AACE;;AACE;;AACE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,UAAA,qBAAT;AAA+C,WAA/C;;AAAiD;;AAAc;;AAEjE;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,UAAA,qBAAT;AAA+C,WAA/C;;AAAiD;;AAC1F;;AACF;;AACF;;AAEA;;AACE;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAC,SAAA,cAAT;AAA8B,WAA9B;;AACjB;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;sED/BaV,c,EAAc;cAL1B,uDAK0B;eALhB;AACT5M,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,QAAMqN,kBAAkB,GAAG,CACzB,4FADyB,EAEzB,wEAFyB,EAGzB,4EAHyB,EAIzB,qFAJyB,EAKzB,sEALyB,EAMzB,0EANyB,EAOzB,sEAPyB,EAQzB,wEARyB,EASzB,oEATyB,EAUzB,uEAVyB,EAWzB,qEAXyB,EAYzB,gFAZyB,EAazB,yEAbyB,EAczB,uEAdyB,EAezB,8EAfyB,CAA3B;;QAsBaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAHhB,CAACD,kBAAD,CAGgB,EArBzB,4FAqByB,EApBzB,wEAoByB,EAnBzB,4EAmByB,EAlBzB,qFAkByB,EAjBzB,sEAiByB,EAhBzB,0EAgByB,EAfzB,sEAeyB,EAdzB,wEAcyB,EAbzB,oEAayB,EAZzB,uEAYyB,EAXzB,qEAWyB,EAVzB,gFAUyB,EATzB,yEASyB,EARzB,uEAQyB,EAPzB,8EAOyB;;;;0HAAdC,c,EAAc;AAAA,kBArBzB,4FAqByB,EApBzB,wEAoByB,EAnBzB,4EAmByB,EAlBzB,qFAkByB,EAjBzB,sEAiByB,EAhBzB,0EAgByB,EAfzB,sEAeyB,EAdzB,wEAcyB,EAbzB,oEAayB,EAZzB,uEAYyB,EAXzB,qEAWyB,EAVzB,gFAUyB,EATzB,yEASyB,EARzB,uEAQyB,EAPzB,8EAOyB;AAPR,kBAdjB,4FAciB,EAbjB,wEAaiB,EAZjB,4EAYiB,EAXjB,qFAWiB,EAVjB,sEAUiB,EATjB,0EASiB,EARjB,sEAQiB,EAPjB,wEAOiB,EANjB,oEAMiB,EALjB,uEAKiB,EAJjB,qEAIiB,EAHjB,gFAGiB,EAFjB,yEAEiB,EADjB,uEACiB,EAAjB,8EAAiB;AAOQ,O;AAPR,K;;;;;sEAONA,c,EAAc;cAJ1B,sDAI0B;eAJjB;AACRzO,iBAAO,EAAE,CAACwO,kBAAD,CADD;AAERrR,iBAAO,EAAE,CAACqR,kBAAD;AAFD,S;AAIiB,Q;;;;;;;;;;;;;;;;;;ACxC3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaE,qB;AAEX,qCACUzP,MADV,EACwB;AAAA;;AAAd,aAAAA,MAAA,GAAAA,MAAA;AACL;;;;mCAEM,CACV;;;oCAEW;AAEV,eAAKA,MAAL,CAAYK,QAAZ,CAAqB,CAAC,cAAD,CAArB;AAED;;;;;;;uBAbUoP,qB,EAAqB,uH;AAAA,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA,yR;AAAA;AAAA;ACRlC;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAkC;AAAA,mBAAS,IAAAC,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAW;;AACvE;;AACJ;;;;;;;;sEDCaD,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTzN,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AERlC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyN,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI3H,OAAO,CAAC4H,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoftwareContentService {\n\n  constructor() { }\n\n  searchterm: string = '';\n\n\n  notification: {}[] = [\n    { message: 'Please! Install photoshop in System 32', sender: 'Viru Singh', seen: false },\n    { message: ' Nisi distinctio ducimus, accusantium sequi, at fugiat non beatae, iste quae velit nostrum veniam. Provident, reiciendis veniam! Sint!', sender: 'Roshan Jha', seen: false },\n    { message: 'Please! Install photoshop in System 32', sender: 'Viru Singh', seen: false },\n    { message: ' Nisi distinctio ducimus, accusantium sequi, at fugiat non beatae, iste quae velit nostrum veniam. Provident, reiciendis veniam! Sint!', sender: 'Roshan Jha', seen: false },\n    { message: 'Please! Install photoshop in System 32', sender: 'Viru Singh', seen: false },\n    { message: ' Nisi distinctio ducimus, accusantium sequi, at fugiat non beatae, iste quae velit nostrum veniam. Provident, reiciendis veniam! Sint!', sender: 'Roshan Jha', seen: false },\n    { message: 'Please! Install photoshop in System 32', sender: 'Viru Singh', seen: false },\n    { message: ' Nisi distinctio ducimus, accusantium sequi, at fugiat non beatae, iste quae velit nostrum veniam. Provident, reiciendis veniam! Sint!', sender: 'Roshan Jha', seen: false },\n    { message: 'Please! Install photoshop in System 32', sender: 'Viru Singh', seen: false },\n    { message: ' Nisi distinctio ducimus, accusantium sequi, at fugiat non beatae, iste quae velit nostrum veniam. Provident, reiciendis veniam! Sint!', sender: 'Roshan Jha', seen: false },\n    { message: 'Please! Install photoshop in System 32', sender: 'Viru Singh', seen: false },\n  ];\n\n  getNotification() {\n    return this.notification;\n  }\n\n\n  readedMessages: {}[] = [];\n\n  getreadedMessages() {\n\n    return this.readedMessages;\n\n  }\n\n\n  Labs: {}[] = [\n    {\n      Name: 'Student-Lab-1', totalSystem: 0,\n    },\n    {\n      Name: 'Student-Lab-2', totalSystem: 0,\n    },\n    {\n      Name: 'Student-Lab-3', totalSystem: 0,\n    },\n    {\n      Name: 'Teachers', totalSystem: 0,\n    },\n    {\n      Name: 'IT-Department', totalSystem: 0,\n    },\n    {\n      Name: 'Admin & Councellor', totalSystem: 0,\n    },\n    {\n      Name: 'Not In Use', totalSystem: 0,\n    },\n\n  ];\n\n\n\n\n\n  getLabs() {\n    return this.Labs;\n  }\n\n\n\n  softwareNameNcolor: {}[] = [\n\n    { Name: \"Photoshop\", backgroundColor: \"#46a34a\", totalSystem: 0 },\n\n    { Name: \"Illustrator\", backgroundColor: \"#e63b38\", totalSystem: 0 },\n\n    { Name: \"Corel Draw\", backgroundColor: \"#fb8d02\", totalSystem: 0 },\n\n    { Name: \"After Effect\", backgroundColor: \"#922aac\", totalSystem: 0 },\n\n    { Name: \"Angular\", backgroundColor: \"#00c1ed\", totalSystem: 0 },\n\n    { Name: \"AutoCad\", backgroundColor: \"#46a34a\", totalSystem: 0 },\n\n    { Name: \"Light Room\", backgroundColor: \"#e63b38\", totalSystem: 0 },\n\n    { Name: \"Maya\", backgroundColor: \"#00c1ed\", totalSystem: 0 },\n\n    { Name: \"Node.js\", backgroundColor: \"#fb8d02\", totalSystem: 0 },\n\n    { Name: \"Premiere\", backgroundColor: \"#922aac\", totalSystem: 0 },\n\n    { Name: \"Adobe XD\", backgroundColor: \"#e63b38\", totalSystem: 0 },\n\n    { Name: \"InDesign\", backgroundColor: \"#00c1ed\", totalSystem: 0 },\n\n  ];\n\n\n  getsoftwareNameNcolor() {\n    return this.softwareNameNcolor;\n  }\n\n\n\n\n  adminAccount: {}[] = [\n    { ID: 0, id: 'AD/RH/WM/01', Name: 'Ravi Bhaudhariya', active: false, profileImg: 'assets/06.jpg', password: '9911554411', job: 'Director', joinedIn: '20 May 2019', contact: '9818015894', email: 'contact@ravi.com' },\n    { ID: 1, id: 'AD/RH/WM/07', Name: 'John Doe', active: false, profileImg: 'assets/04.jpg', password: '9911554411', job: 'Councelor', joinedIn: '20 May 2019', contact: '9818015894', email: 'kumarroshanjha786@gmail.com' },\n    { ID: 2, id: 'AD/RH/WM/08', Name: 'Roshan Jha', active: false, profileImg: 'assets/01.jpg', password: '9911554411', job: 'HR Manager', joinedIn: '20 May 2019', contact: '9818015894', email: 'kumarroshanjha786@gmail.com' },\n    { ID: 3, id: 'AD/RH/WM/06', Name: 'Manish Sharma', active: false, profileImg: 'assets/03.jpg', password: '9911554411', job: 'Lab Assistant', joinedIn: '20 May 2019', contact: '9818015894', email: 'kumarroshanjha786@gmail.com' },\n  ]\n\n  goadminAccount() {\n    return this.adminAccount;\n  }\n\n  hardWare: {}[] = [\n    { Name: \"2GB\", totalSystem: 0, },\n\n    { Name: \"4GB\", totalSystem: 0, },\n\n    { Name: \"8GB\", totalSystem: 0, },\n\n    { Name: \"16GB\", totalSystem: 0, },\n\n    { Name: \"32GB\", totalSystem: 0, },\n\n    { Name: \"64GB\", totalSystem: 0, },\n\n    { Name: \"Optical Mouse\", totalSystem: 0, },\n\n    { Name: \"KeyBoard\", totalSystem: 0, },\n  ];\n\n  gethardWare() {\n    return this.hardWare;\n  }\n\n\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TotalSystemService {\n\n  constructor() { }\n\n  allSystem: {}[] = [\n    { \"id\": 0, \"Name\": \"System-1\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"Apple\", \"hardWare\": [\"16GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Mac OS\" },\n    { \"id\": 1, \"Name\": \"System-2\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"Apple\", \"hardWare\": [\"16GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Mac OS\" },\n    { \"id\": 2, \"Name\": \"System-3\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"2GB\", \"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 3, \"Name\": \"System-4\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"4GB\", \"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 4, \"Name\": \"System-5\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"AutoCad\", \"Light Room\", \"Maya\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"Apple\", \"hardWare\": [\"64GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Mac OS\" },\n    { \"id\": 5, \"Name\": \"System-6\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"AutoCad\", \"Light Room\", \"Maya\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"Apple\", \"hardWare\": [\"64GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Mac OS\" },\n    { \"id\": 6, \"Name\": \"System-7\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"Premiere\", \"InDesign\"], \"Condition\": \"Not Working\", \"Company\": \"Del\", \"hardWare\": [\"16GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 8\" },\n    { \"id\": 7, \"Name\": \"System-8\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Working\", \"Company\": \"Del\", \"hardWare\": [\"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 8, \"Name\": \"System-9\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Not Working\", \"Company\": \"Del\", \"hardWare\": [\"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 9, \"Name\": \"System-10\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Working\", \"Company\": \"Del\", \"hardWare\": [\"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 10, \"Name\": \"System-11\", \"Lab\": \"Student-Lab-1\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Working\", \"Company\": \"Del\", \"hardWare\": [\"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 11, \"Name\": \"System-12\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"After Effect\", \"AutoCad\", \"Light Room\", \"Maya\", \"Premiere\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 12, \"Name\": \"System-13\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"After Effect\", \"AutoCad\", \"Light Room\", \"Maya\", \"Premiere\"], \"Condition\": \"Not Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 13, \"Name\": \"System-14\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"After Effect\", \"AutoCad\", \"Light Room\", \"Maya\", \"Premiere\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"64GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 14, \"Name\": \"System-15\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"After Effect\", \"AutoCad\", \"Light Room\", \"Maya\", \"Premiere\"], \"Condition\": \"Not Working\", \"Company\": \"HP\", \"hardWare\": [\"64GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 15, \"Name\": \"System-16\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 16, \"Name\": \"System-17\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 17, \"Name\": \"System-18\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 18, \"Name\": \"System-19\", \"Lab\": \"Student-Lab-2\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Not Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 19, \"Name\": \"System-20\", \"Lab\": \"Student-Lab-3\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Working\", \"Company\": \"DEL\", \"hardWare\": [\"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 20, \"Name\": \"System-21\", \"Lab\": \"Student-Lab-3\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Working\", \"Company\": \"DEL\", \"hardWare\": [\"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 21, \"Name\": \"System-22\", \"Lab\": \"Student-Lab-3\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Not Working\", \"Company\": \"DEL\", \"hardWare\": [\"2GB\", \"4GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 22, \"Name\": \"System-23\", \"Lab\": \"Teachers\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Light Room\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"16GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 23, \"Name\": \"System-24\", \"Lab\": \"Teachers\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"AutoCad\", \"Light Room\", \"Maya\", \"Node.js\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 24, \"Name\": \"System-25\", \"Lab\": \"Teachers\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"AutoCad\", \"Light Room\", \"Maya\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"32GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 25, \"Name\": \"System-26\", \"Lab\": \"Teachers\", \"Software\": [\"Angular\", \"Node.js\", \"Adobe XD\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"8GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 26, \"Name\": \"System-27\", \"Lab\": \"Teachers\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Angular\", \"AutoCad\", \"Light Room\", \"Maya\", \"Node.js\", \"Premiere\", \"Adobe XD\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"Apple\", \"hardWare\": [\"64GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Mac OS\" },\n    { \"id\": 27, \"Name\": \"System-28\", \"Lab\": \"IT-Department\", \"Software\": [\"Photoshop\", \"Illustrator\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"16GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 8\" },\n    { \"id\": 28, \"Name\": \"System-29\", \"Lab\": \"IT-Department\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"Angular\", \"Node.js\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"16GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 29, \"Name\": \"System-30\", \"Lab\": \"IT-Department\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"HP\", \"hardWare\": [\"16GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 30, \"Name\": \"System-30\", \"Lab\": \"Admin & Councellor\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Premiere\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"Apple\", \"hardWare\": [\"64GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 31, \"Name\": \"System-31\", \"Lab\": \"Admin & Councellor\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\", \"After Effect\", \"Angular\", \"AutoCad\", \"Light Room\", \"Maya\", \"Node.js\", \"Premiere\", \"Adobe XD\", \"InDesign\"], \"Condition\": \"Working\", \"Company\": \"Apple\", \"hardWare\": [\"64GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 32, \"Name\": \"System-32\", \"Lab\": \"Not In Use\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\"], \"Condition\": \"Not In Use\", \"Company\": \"Del\", \"hardWare\": [\"2GB\", \"4GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 33, \"Name\": \"System-33\", \"Lab\": \"Not In Use\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\"], \"Condition\": \"Not In Use\", \"Company\": \"Del\", \"hardWare\": [\"2GB\", \"4GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" },\n    { \"id\": 34, \"Name\": \"System-34\", \"Lab\": \"Not In Use\", \"Software\": [\"Photoshop\", \"Illustrator\", \"Corel Draw\"], \"Condition\": \"Not In Use\", \"Company\": \"Del\", \"hardWare\": [\"2GB\", \"4GB\", \"Optical Mouse\", \"KeyBoard\"], \"os\": \"Windows 10\" }\n  ];\n\n  getAllSystem() {\n    return this.allSystem;\n  }\n\n  totalNumberOfLab: number;\n\n  gettotalNumberOfLab() {\n\n    return this.totalNumberOfLab;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n    constructor(private authService: AuthService, private router: Router ){}\n\n    canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean\n    {\n        return this.authService.isAuthenticated().then((authenticated: boolean) => {\n            if(authenticated){\n                return true;\n            }else{\n                this.router.navigate(['/']);\n            }\n        });        \n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean{\n        return this.canActivate(route, state);\n    }\n}\n","import { Injectable } from \"@angular/core\";\n@Injectable()\nexport class AuthService {\n\n    loggedIn: boolean = false;\n\n    isAuthenticated() {\n        const promise = new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve(this.loggedIn)\n            }, 800);\n        });\n\n        return promise;\n    }\n\n    login() {\n        this.loggedIn = true;\n    }\n\n    logout() {\n        this.loggedIn = false;\n    }\n}","import { HardwareComponent } from \"./hardware/hardware.component\";\nimport { DialogboxComponent } from \"./manage-computers/dialogbox/dialogbox.component\";\nimport { RepairsComponent } from \"./repairs/repairs.component\";\nimport { NotificationComponent } from \"./notification/notification.component\";\nimport { ManageLabsComponent } from \"./manage-labs/manage-labs.component\";\nimport { ManageComputersComponent } from \"./manage-computers/manage-computers.component\";\nimport { AdminComponent } from \"./admin.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { EditSystemComponent } from \"./manage-computers/edit-system/edit-system.component\";\nimport { SpecificLabComponent } from \"./specific-lab/specific-lab.component\";\nimport { SpecificSoftwareComponent } from \"./specific-software/specific-software.component\";\nimport { AuthGuard } from \"../Authentication/auth-guard.service\";\nimport { NotInUseComponent } from \"./not-in-use/not-in-use.component\";\nimport { SpecificHardwareComponent } from \"./specific-hardware/specific-hardware.component\";\nimport { PageNotFoundComponent } from \"../page-not-found/page-not-found.component\";\nimport { SoftwareComponent } from \"./software/software.component\";\nimport { UserComponent } from './user/user.component';\nimport { UserInfrmComponent } from './user/user-infrm/user-infrm.component';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\n\n\nconst adminRoutes: Routes = [\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(adminRoutes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit, DoCheck, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { SoftwareContentService } from '../All-Services/software-content.service';\nimport { AuthService } from '../Authentication/auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit, DoCheck {\n\n  messages: number;\n\n  readMessages: number;\n\n  messageNumber: number;\n\n  public innerWidth: any;\n\n  constructor(private router: Router, private _SoftwareContentService: SoftwareContentService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.innerWidth = window.innerWidth;\n\n    // console.log(this.innerWidth);\n\n    if (this.innerWidth <= 1199.98) {\n\n      this.modeIn = 'over';\n\n      this.openIn = false;\n    }\n\n    if (this.innerWidth > 1199.98) {\n\n      this.modeIn = 'side';\n\n      this.openIn = true;\n    }\n\n  }\n\n  ngDoCheck() {\n\n    this.messages = this._SoftwareContentService.notification.length;\n\n    this.readMessages = this._SoftwareContentService.readedMessages.length;\n\n    this.messageNumber = this.messages - this.readMessages;\n\n  }\n\n  modeIn: string = 'side';\n\n  openIn: Boolean = true;\n\n  navrct() {\n\n    this.openIn = !this.openIn;\n  }\n\n\n\n  @HostListener('window:resize', ['$event']) onResize(event) {\n\n    if (window.innerWidth <= 1199.98) {\n\n      this.modeIn = 'over';\n\n      this.openIn = false;\n    }\n\n    if (window.innerWidth > 1199.98) {\n\n      this.modeIn = 'side';\n\n      this.openIn = true;\n    }\n\n\n  }\n\n  // openNav: boolean = false;\n\n\n  // navrct() {\n  //   this.openNav = !this.openNav;\n  // }\n\n  // clsNav() {\n  //   this.openNav = !this.openNav;\n  // }\n\n\n  adminArr: {}[] = this._SoftwareContentService.goadminAccount();\n\n  logOut() {\n\n    for (let i = 0; i < this.adminArr.length; i++) {\n\n      if (this.adminArr[i]['active'] == true) {\n\n        this._SoftwareContentService.goadminAccount()[i]['active'] = false;\n\n      }\n\n    }\n\n    this.authService.logout();\n\n    this.router.navigate(['/login-admin']);\n\n  }\n\n\n}\n","<mat-sidenav-container>\n\n    <mat-sidenav [(mode)]=\"modeIn\" [(opened)]=\"openIn\">\n\n        <div class=\"logo extr1 w-100\">\n            <img src=\"assets/03.png\" class=\"h-100\" alt=\"\">\n        </div>\n        <div class=\"extr1 w-100 navHead\">\n            <h6>Lab Management Panel</h6>\n        </div>\n\n        <ng-container *ngFor=\"let admin of adminArr\">\n            <div *ngIf=\"admin.active\" class=\"userInfrm\">\n                <div class=\"row p-0\">\n                    <div class=\"col-12 p-0\">\n                        <div class=\"row\">\n                            <div class=\"col-3 p-0 d-flex justify-content-end align-items-center\">\n                                <div class=\"adminIcn\">\n                                    <img src=\"{{admin.profileImg}}\" class=\"w-100\" alt=\"\">\n                                </div>\n                            </div>\n                            <div\n                                class=\"col-9 p-0 px-2 adminName w-100 h-100 d-flex justify-content-start align-items-center\">\n                                <div class=\"dropdown w-auto h-auto\">\n                                    <button mat-button class=\"admin-btn dropdown-toggle\" type=\"button\"\n                                        id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                        aria-expanded=\"false\">\n                                        <i class=\"fas fa-circle mr-2\"></i> {{admin.Name}}\n                                    </button>\n                                    <div class=\"dropdown-menu p-0\" aria-labelledby=\"dropdownMenu2\">\n                                        <button [routerLink]=\"['user']\"\n                                            class=\"btn btn-light p-0 pl-3 d-flex justify-content-start align-items-center\">Manage\n                                            Profiles</button>\n                                        <button (click)=\"logOut()\"\n                                            class=\"btn btn-light p-0 pl-3 d-flex justify-content-start align-items-center\">Logout</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n\n        <div class=\"navigationBtnLink\">\n            <button mat-button [routerLink]=\"['dashboard']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\"><i class=\"material-icons\">\n                            dashboard\n                        </i></div>\n                    <div class=\"col-9 p-0 navName extr1\">DashBoard</div>\n                </div>\n            </button>\n\n            <button mat-button [routerLink]=\"['manage-labs']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\"><i class=\"material-icons\">\n                            account_balance_wallet\n                        </i></div>\n                    <div class=\"col-9 p-0 extr1 navName\">Manage Labs</div>\n                </div>\n            </button>\n\n            <button mat-button [routerLink]=\"['manage-computers']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\">\n                        <i class=\"material-icons\">\n                            video_label\n                        </i>\n                    </div>\n                    <div class=\"col-9 p-0 extr1 navName\">Manage System</div>\n                </div>\n            </button>\n\n            <button mat-button [routerLink]=\"['repairs']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\"><i class=\"material-icons\">\n                            build\n                        </i></div>\n                    <div class=\"col-9 p-0 extr1 navName\">Repairs</div>\n                </div>\n            </button>\n\n            <button mat-button [routerLink]=\"['not-in-use']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\">\n                        <i class=\"material-icons\">\n                            not_interested\n                        </i>\n                    </div>\n                    <div class=\"col-9 p-0 extr1 navName\">Not In Use</div>\n                </div>\n            </button>\n\n            <button mat-button [routerLink]=\"['manage-software']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\">\n                        <i class=\"far fa-window-restore\"></i>\n                    </div>\n                    <div class=\"col-9 p-0 extr1 navName\">Manage Software</div>\n                </div>\n            </button>\n\n            <button mat-button [routerLink]=\"['manage-hardware']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\">\n                        <i class=\"material-icons\">\n                            devices_other\n                        </i>\n                    </div>\n                    <div class=\"col-9 p-0 extr1 navName\">Manage Hardware</div>\n                </div>\n            </button>\n\n            <button mat-button [routerLink]=\"['notification']\" routerLinkActive=\"active\">\n                <div class=\"row\">\n                    <div class=\"col-3 p-0 extr1\">\n                        <i class=\"material-icons\">\n                            notifications_active\n                        </i>\n                    </div>\n                    <div class=\"col-9 p-0 extr1 navName\">Notification &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span\n                            matBadgePosition=\"below after\" matBadge=\"{{messageNumber}}\" matBadgeColor=\"warn\"></span>\n                    </div>\n                </div>\n            </button>\n        </div>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n\n<div class=\"navLink\" (click)=\"navrct()\">\n    <div class=\"extr1 w-100 h-100\">\n        <i class=\"material-icons\">\n            menu\n        </i>\n    </div>\n</div>","import { DialogboxComponent } from './manage-computers/dialogbox/dialogbox.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ManageComputersComponent } from './manage-computers/manage-computers.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { ManageLabsComponent } from './manage-labs/manage-labs.component';\nimport { RepairsComponent } from './repairs/repairs.component';\nimport { EditSystemComponent } from './manage-computers/edit-system/edit-system.component';\nimport { FilterPipe } from './filter.pipe';\nimport { SpecificLabComponent } from './specific-lab/specific-lab.component';\nimport { SpecificSoftwareComponent } from './specific-software/specific-software.component';\nimport { NotInUseComponent } from './not-in-use/not-in-use.component';\nimport { HardwareComponent } from './hardware/hardware.component';\nimport { SpecificHardwareComponent } from './specific-hardware/specific-hardware.component';\nimport { GridSoftwareComponent } from './specific-software/grid-software/grid-software.component';\nimport { TableSoftwareComponent } from './specific-software/table-software/table-software.component';\nimport { GridViewComponent } from './manage-computers/grid-view/grid-view.component';\nimport { TableViewComponent } from './manage-computers/table-view/table-view.component';\nimport { GridLabComponent } from './specific-lab/grid-lab/grid-lab.component';\nimport { TableLabComponent } from './specific-lab/table-lab/table-lab.component';\nimport { GridRepairComponent } from './repairs/grid-repair/grid-repair.component';\nimport { TableRepairComponent } from './repairs/table-repair/table-repair.component';\nimport { GridNotComponent } from './not-in-use/grid-not/grid-not.component';\nimport { TableNotComponent } from './not-in-use/table-not/table-not.component';\nimport { GridHardwareComponent } from './specific-hardware/grid-hardware/grid-hardware.component';\nimport { TableHardwareComponent } from './specific-hardware/table-hardware/table-hardware.component';\nimport { SoftwareComponent } from './software/software.component';\nimport { UserComponent } from './user/user.component';\nimport { UserInfrmComponent } from './user/user-infrm/user-infrm.component';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    BrowserModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    DashboardComponent,\n    ManageComputersComponent,\n    NotificationComponent,\n    ManageLabsComponent,\n    RepairsComponent,\n    DialogboxComponent,\n    EditSystemComponent,\n    FilterPipe,\n    SpecificLabComponent,\n    SpecificSoftwareComponent,\n    NotInUseComponent,\n    HardwareComponent,\n    SpecificHardwareComponent,\n    GridSoftwareComponent,\n    TableSoftwareComponent,\n    GridViewComponent,\n    TableViewComponent,\n    GridLabComponent,\n    TableLabComponent,\n    GridRepairComponent,\n    TableRepairComponent,\n    GridNotComponent,\n    TableNotComponent,\n    GridHardwareComponent,\n    TableHardwareComponent,\n    SoftwareComponent,\n    UserComponent,\n    UserInfrmComponent,\n    UserEditComponent,\n  ]\n})\nexport class AdminModule { }","import {TotalSystemService} from '../../All-Services/total-system.service';\nimport {SoftwareContentService} from '../../All-Services/software-content.service';\nimport { Component, OnInit, DoCheck } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, DoCheck {\n\n  searchTerm: string;\n\n  softNo: number = 0;\n\n  constructor(private _snackBar: MatSnackBar, private _SoftwareContentService: SoftwareContentService, public _TotalSystemService: TotalSystemService, private router: Router) { }\n\n  repairsLength = 0;\n\n  repairs: {}[] = this._TotalSystemService.getAllSystem();\n\n  extrRepairLength: number;  \n\n  items: {}[] = this._SoftwareContentService.getsoftwareNameNcolor();\n\n  allSystems: {}[] = this._TotalSystemService.getAllSystem();\n\n  softwareLength = 1;\n\n  bgColors: string[] = ['#46a34a','#e63b38','#fb8d02','#922aac', '#00c1ed','#46a34a','#e63b38','#fb8d02','#922aac', '#00c1ed'];\n\n  randomNo: number;\n\n  ngOnInit() {\n\n    for (let i = 0; i < this.repairs.length; i++) {\n    \n       if ( this.repairs[i]['Condition'] === 'Not Working') {\n           this.repairsLength++;\n       }    \n  }\n\n   this.extrRepairLength = this.repairsLength;\n\n//    computer.Software.indexOf(softwareName) > -1\n   \n    for (let i = 0; i < this.items.length; i++) {\n        \n      for (let j = 0; j < this.allSystems.length; j++) {\n        \n        if ( this.allSystems[j]['Software'].indexOf(this.items[i]['Name']) > -1) {           \n\n            this.items[i]['totalSystem'] =  this.softwareLength++;            \n        }    \n    } \n\n       this.softwareLength = 1;\n\n    }\n\n  }\n\n  addSoftware(param1){\n\n    this.randomNo = Math.floor(Math.random() * 10);\n\n      if (param1.value == ''){\n\n           param1.classList.add('your-class');\n\n             param1.placeholder = '* Enter a valid Software Name';\n\n                param1.value = ''; \n          \n      }\n\n      else{\n          \n            this._SoftwareContentService.softwareNameNcolor.push(\n            {\n                Name: param1.value, backgroundColor: this.bgColors[this.randomNo], totalSystem: 0,\n            }\n            );\n\n            this._snackBar.open(param1.value+' has been added to Softwares', 'Successfully !', {\n              duration: 2000,\n            });\n\n            param1.value = ''; \n\n      }\n\n\n  }\n\n\n\nlabNumber = this._SoftwareContentService.getLabs().length;\n\nsystemNo: number = this._TotalSystemService.allSystem.length;\n\n messages: number;\n\n  readMessages: number;\n\n  messageNumber: number;\n\nngDoCheck(){\n\n      this.messages = this._SoftwareContentService.notification.length;\n\n      this.readMessages = this._SoftwareContentService.readedMessages.length;\n      \n      this.messageNumber = this.messages - this.readMessages;\n\n}\n\n\n\n\ngotoRepair(){\n  this.router.navigate(['admin/repairs']);\n}\n\ngotoMngLab(){\n  this.router.navigate(['admin/manage-labs']);\n}\n\ngotoMngSystm(){\n  this.router.navigate(['admin/manage-computers']);\n}\n\ngotoNotification(){\n  this.router.navigate(['admin/notification']);\n}\n\n}\n","<div class=\"full-body\">\n    <div class=\"contentheading\">\n        <div class=\"row\">\n            <div class=\"col-10 extr1 heading1\">\n                <h6>DashBoard / <small>Control Panel</small></h6>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container nav2\">\n        <div class=\"row\">\n            <div class=\"mb-4 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12\">\n                <div class=\"toRepair  p-3\" (click)=\"gotoRepair()\">\n                    <div class=\"row\">\n                        <div class=\"col-10 p-0\">\n                            <div class=\"row\">\n                                <div class=\"col-12 p-0\">\n                                    <h2>{{extrRepairLength}}</h2>\n                                </div>\n                                <div class=\"col-12 p-0\">\n                                    <h5>Repairs</h5>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-2 extr1 p-0\">\n                            <i class=\"material-icons\">\n                                build\n                            </i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mb-4 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12\">\n                <div class=\"managelabs  p-3\" (click)=\"gotoMngLab()\">\n                    <div class=\"row\">\n                        <div class=\"col-10 p-0\">\n                            <div class=\"row\">\n                                <div class=\"col-12 p-0\">\n                                    <h2>{{labNumber}}</h2>\n                                </div>\n                                <div class=\"col-12 p-0\">\n                                    <h5>Manage Labs</h5>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-2 extr1 p-0\">\n                            <i class=\"material-icons\">\n                                account_balance_wallet\n                            </i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mb-4 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12\">\n                <div class=\"managesystems  p-3\" (click)=\"gotoMngSystm()\">\n                    <div class=\"row\">\n                        <div class=\"col-10 p-0\">\n                            <div class=\"row\">\n                                <div class=\"col-12 p-0\">\n                                    <h2>{{systemNo}}</h2>\n                                </div>\n                                <div class=\"col-12 p-0\">\n                                    <h5>Manage Systems</h5>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-2 extr1 p-0\">\n                            <i class=\"material-icons\">\n                                video_label\n                            </i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mb-4 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12\">\n                <div class=\"notification  p-3\" (click)=\"gotoNotification()\">\n                    <div class=\"row\">\n                        <div class=\"col-10 p-0\">\n                            <div class=\"row\">\n                                <div class=\"col-12 p-0\">\n                                    <h2>{{messageNumber}}</h2>\n                                </div>\n                                <div class=\"col-12 p-0\">\n                                    <h5>Notifications</h5>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-2 extr1 p-0\">\n                            <i class=\"material-icons\">\n                                notifications_active\n                            </i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"softwareManage container\">\n\n        <div class=\"searchheading container\">\n            <div class=\"row extr1\">\n                <mat-tab-group mat-align-tabs=\"center\" class=\"w-100\">\n                    <mat-tab label=\"Search Software\">\n                        <div class=\"input-group w-100 h-auto my-3\">\n                            <input type=\"search\" placeholder=\"Search Software\" [(ngModel)]=\"searchTerm\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-outline-secondary\" type=\"button\"\n                                    id=\"button-addon2\">Search</button>\n                            </div>\n                        </div>\n\n                    </mat-tab>\n                    <mat-tab label=\"Add Software\">\n                        <div class=\"input-group w-100 h-auto my-3\">\n                            <input type=\"search\" placeholder=\"Software Name\" #softwareName>\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-outline-secondary\" (click)=\"addSoftware(softwareName)\"\n                                    type=\"button\" id=\"button-addon2\">Add</button>\n                            </div>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </div>\n        </div>\n\n\n        <div class=\"row\">\n            <div *ngFor=\"let item of items | filter : searchTerm;\"\n                class=\"mb-4 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12\">\n\n\n                <div class=\"softwareContent extr1\" [routerLink]=\"[item.Name]\"\n                    [style.background-color]=\"item.backgroundColor\">\n                    <h5>\n                        <h5 class=\"extr1 m-1\">{{item.Name}}</h5>\n                        <small class=\"extr1\">Total System: {{item.totalSystem}}</small>\n                    </h5>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], searchText: string): any[] {\n    if(!items) return [];\n    if(!searchText) return items;\nsearchText = searchText.toLowerCase();\nreturn items.filter( it => {\n      return it.Name.toLowerCase().includes(searchText);\n    });\n   }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { TotalSystemService } from \"../../All-Services/total-system.service\";\nimport { SoftwareContentService } from \"../../All-Services/software-content.service\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: \"app-hardware\",\n  templateUrl: \"./hardware.component.html\",\n  styleUrls: [\"./hardware.component.css\"]\n})\nexport class HardwareComponent implements OnInit {\n  searchTerm: string;\n\n  hardwares: {}[];\n\n  hardwareLength;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  hrdwrePC: number = 0;\n\n  constructor(\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    private _SoftwareContentService: SoftwareContentService,\n    private _TotalSystemService: TotalSystemService\n  ) {}\n\n  ngOnInit() {\n    this.hardwares = this._SoftwareContentService.gethardWare();\n\n    this.hardwareLength = this.hardwares.length;\n\n    for (let i = 0; i < this.hardwares.length; i++) {\n      for (let j = 0; j < this.computers.length; j++) {\n        if (\n          this.computers[j][\"hardWare\"].indexOf(this.hardwares[i][\"Name\"]) > -1\n        ) {\n          this.hrdwrePC++;\n        }\n\n        this.hardwares[i][\"totalSystem\"] = this.hrdwrePC;\n      }\n\n      this.hrdwrePC = 0;\n    }\n  }\n\n  addNewhardware(param1) {\n    if (param1.value == \"\") {\n      param1.classList.add(\"your-class\");\n\n      param1.placeholder = \"* Enter a valid Lab Name\";\n\n      param1.value = \"\";\n    } else {\n      this._SoftwareContentService.gethardWare().push({\n        Name: param1.value,\n        totalSystem: 0\n      });\n\n      this._snackBar.open(\n        param1.value + \" has been added to Hardwares\",\n        \"Successfully !\",\n        {\n          duration: 2000\n        }\n      );\n\n      param1.value = \"\";\n    }\n  }\n\n  //   goToLab(){\n\n  //     this.router.navigate(['/']);\n  //   }\n}\n","<div class=\"contentheading\">\n    <div class=\"row\">\n        <div class=\"col-9 extr1 heading1\">\n            <h6>Manage Hardware</h6>\n        </div>\n    </div>\n</div>\n\n<div class=\"full-body\">\n    <div class=\"searchheading container\">\n        <div class=\"row extr1\">\n            <mat-tab-group mat-align-tabs=\"center\" class=\"w-100\">\n                <mat-tab label=\"Search Hardware\">\n                    <div class=\"input-group w-100 my-3\">\n                        <input type=\"search\" placeholder=\"Search Hardware\" [(ngModel)]=\"searchTerm\">\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\n                        </div>\n                    </div>\n\n                </mat-tab>\n                <mat-tab label=\"Add Hardware\">\n                    <div class=\"input-group w-100 my-3\">\n                        <input type=\"search\" placeholder=\"Add Hardware\" #addhardware>\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"addNewhardware(addhardware)\"\n                                type=\"button\" id=\"button-addon2\">Add</button>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </div>\n\n    <div class=\"summary w-100 pl-5 mb-4\">\n        <h6 class=\"smmryH6\">Total No. of Hardware: {{hardwareLength}}</h6>\n    </div>\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\"\n                *ngFor=\"let hardware of hardwares | filter : searchTerm; let i = index\">\n                <div class=\"labName\" [routerLink]=\"[hardware.Name]\">\n                    <div class=\"row\">\n                        <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 extr2\">\n                            <i class=\"material-icons\">\n                                devices_other\n                            </i>\n                        </div>\n                        <div class=\"col-xl-8 col-lg-8 col-md-8 col-sm-7 col-7 extr3\">\n                            <h6>{{hardware.Name}}</h6>\n                        </div>\n\n                        <div class=\"pcIn col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2\">\n                            <p>{{hardware.totalSystem}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { TotalSystemService } from '../../../All-Services/total-system.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dialogbox',\n  templateUrl: './dialogbox.component.html',\n  styleUrls: ['./dialogbox.component.css']\n})\nexport class DialogboxComponent implements OnInit {\n\n  public systemInformation: any;\n\n  paramsSubscription: Subscription;\n\n  softwareName: [];\n\n  hardwareName: [];\n\n  constructor(private route: ActivatedRoute, private router: Router, private _TotalSystemService: TotalSystemService) { }\n\n  ngOnInit() {\n\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n      this.systemInformation = this._TotalSystemService.getAllSystem()[params['id']];\n\n      this.softwareName = this._TotalSystemService.getAllSystem()[params['id']]['Software'];\n\n      this.hardwareName = this._TotalSystemService.getAllSystem()[params['id']]['hardWare'];\n    });\n\n  }\n\n  //  ngOnDestroy() {\n  //   this.paramsSubscription.unsubscribe();\n  // }\n\n  open() {\n    alert(this.systemInformation);\n  }\n\n\n\n\n}\n","<h3>\r\n    {{systemInformation.Name}}\r\n</h3>\r\n<hr>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"extr3 w-100\">\r\n            <h5>Status: <small *ngIf=\"systemInformation.Condition === 'Working'\" id=\"cnd1\">(Working)</small> <small\r\n                    *ngIf=\"systemInformation.Condition === 'Not Working'\" id=\"cnd2\">(Not Working)</small> <small\r\n                    *ngIf=\"systemInformation.Condition === 'Not In Use'\" id=\"cnd3\">(Not In Use)</small></h5>\r\n        </div>\r\n\r\n        <div class=\"extr3 w-100\">\r\n            <h5>Lab: <small> {{systemInformation.Lab}}</small></h5>\r\n        </div>\r\n\r\n        <div class=\"extr3 w-100\">\r\n            <h5>Softwares: <small *ngFor=\"let item of softwareName\">{{item}},&nbsp;</small></h5>\r\n        </div>\r\n\r\n        <div class=\"extr3 w-100\">\r\n            <h5>Company: <small> {{systemInformation.Company}}</small></h5>\r\n        </div>\r\n\r\n        <div class=\"extr3 w-100\">\r\n            <h5>Operating System: <small> {{systemInformation.os}}</small></h5>\r\n        </div>\r\n\r\n        <div class=\"extr3 w-100\">\r\n            <h5>Hardwares: <small *ngFor=\"let hrdwr of hardwareName\">{{hrdwr}},&nbsp;</small></h5>\r\n        </div>\r\n\r\n        <div class=\"extr1 w-100 mt-3\">\r\n            <button mat-button [routerLink]=\"['edit']\">Edit System Information</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { TotalSystemService } from '../../../All-Services/total-system.service';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../../All-Services/software-content.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\nexport interface Labsintrfc {\n  Name: string;\n}\n\nexport interface Food {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-edit-system',\n  templateUrl: './edit-system.component.html',\n  styleUrls: ['./edit-system.component.css']\n})\nexport class EditSystemComponent implements OnInit {\n\n  system: { Name: string, Lab: string, Software: string[], Condition: string, Company: string, hardWare: string[], os: string, } = { Name: '', Lab: '', Software: [], Condition: '', Company: '', hardWare: [], os: '' };\n\n  id: number;\n\n  softwareNames: string[];\n\n  hardWareNames: string[];\n\n  paramsSubscription: Subscription;\n\n  constructor(private _snackBar: MatSnackBar, private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService: TotalSystemService) { }\n\n  ngOnInit() {\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.id = params['id'];\n\n      this.system = {\n        Name: this._TotalSystemService.getAllSystem()[params['id']]['Name'],\n        Lab: this._TotalSystemService.getAllSystem()[params['id']]['Lab'],\n        Software: this._TotalSystemService.getAllSystem()[params['id']]['Software'],\n        Condition: this._TotalSystemService.getAllSystem()[params['id']]['Condition'],\n        Company: this._TotalSystemService.getAllSystem()[params['id']]['Company'],\n        hardWare: this._TotalSystemService.getAllSystem()[params['id']]['hardWare'],\n        os: this._TotalSystemService.getAllSystem()[params['id']]['os'],\n      };\n\n      this.softwareNames = this._TotalSystemService.getAllSystem()[params['id']]['Software'];\n\n      this.hardWareNames = this._TotalSystemService.getAllSystem()[params['id']]['hardWare'];\n    });\n  }\n\n  condition: Food[] = [\n    { value: 'Working', viewValue: 'Steak' },\n    { value: 'Not Working', viewValue: 'Pizza' },\n    { value: 'Not In Use', viewValue: 'Tacos' }\n  ];\n\n  conditiontwo: Food[] = [\n    { value: 'Windows 10', viewValue: 'Steak' },\n    { value: 'Windows 8', viewValue: 'Pizza' },\n    { value: 'Mac OS', viewValue: 'Tacos' },\n    { value: 'Linux', viewValue: 'Tacos' }\n  ];\n\n  Labs: {}[] = this._SoftwareContentService.Labs;\n\n\n\n  toppings = new FormControl();\n\n  toppingsTwo = new FormControl();\n\n  toppingList: {}[] = this._SoftwareContentService.getsoftwareNameNcolor();\n\n  toppingListTwo: {}[] = this._SoftwareContentService.gethardWare();\n\n\n\n  editSystemInfrm(param1, param2, param3, param4, param5) {\n\n    this._TotalSystemService.allSystem[this.id]['Name'] = param1;\n\n    this._TotalSystemService.allSystem[this.id]['Lab'] = param3;\n\n    this._TotalSystemService.allSystem[this.id]['Software'] = this.softwareNames;\n\n    this._TotalSystemService.allSystem[this.id]['Condition'] = param2;\n\n    this._TotalSystemService.allSystem[this.id]['Company'] = param4;\n\n    this._TotalSystemService.allSystem[this.id]['hardWare'] = this.hardWareNames;\n\n    this._TotalSystemService.allSystem[this.id]['os'] = param5;\n\n    this.router.navigate(['../'], { relativeTo: this.route });\n\n    // console.log(this._TotalSystemService.allSystem); \n\n    this._snackBar.open(param1 + ' has been Updated', 'Successfully !', {\n      duration: 2000,\n    });\n\n  }\n\n\n}\n","<h3>\n    {{system.Name}}\n</h3>\n<hr>\n\n<div class=\"p-3 mb-3 row\">\n\n    <div class=\"col-12 extr11\">\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"System Name\" value=\"{{system.Name}}\" #name>\n        </mat-form-field>\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field>\n            <mat-label>Select Status</mat-label>\n            <mat-select #status [value]=system.Condition>\n                <mat-option *ngFor=\"let status of condition\" value=\"{{status.value}}\">\n                    {{status.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field>\n            <mat-label>Select Lab</mat-label>\n            <mat-select #lab [value]=system.Lab>\n                <mat-option *ngFor=\"let Lab of Labs\" value=\"{{Lab.Name}}\">\n                    {{Lab.Name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Company Name\" value=\"{{system.Company}}\" #company>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field>\n            <mat-label>Select Operating System</mat-label>\n            <mat-select #oprtSystem [value]=\"system.os\">\n                <mat-option *ngFor=\"let status of conditiontwo\" value=\"{{status.value}}\">\n                    {{status.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field>\n            <mat-label>Software Names</mat-label>\n            <mat-select [formControl]=\"toppings\" multiple [(ngModel)]=\"softwareNames\">\n                <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping.Name\">{{topping.Name}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field>\n            <mat-label>Hardware Names</mat-label>\n            <mat-select [formControl]=\"toppingsTwo\" multiple [(ngModel)]=\"hardWareNames\">\n                <mat-option *ngFor=\"let topping of toppingListTwo\" [value]=\"topping.Name\">{{topping.Name}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr1 extr11\">\n        <button mat-button\n            (click)=\"editSystemInfrm(name.value, status.value, lab.value, company.value, oprtSystem.value)\">Update\n            System Information!</button>\n    </div>\n\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../../All-Services/software-content.service';\nimport { TotalSystemService } from '../../../All-Services/total-system.service';\n\nexport interface Labsintrfc {\n  Name: string;\n}\n\nexport interface Food {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-grid-view',\n  templateUrl: './grid-view.component.html',\n  styleUrls: ['./grid-view.component.css']\n})\nexport class GridViewComponent implements OnInit, DoCheck {\n\n  condition1: boolean = true;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  constructor(public _TotalSystemService: TotalSystemService, private _SoftwareContentService: SoftwareContentService, ) { }\n\n\n  ngOnInit() {\n  }\n\n  searchTerm: string;\n\n  ngDoCheck() {\n\n    this.searchTerm = this._SoftwareContentService.searchterm;\n\n  }\n\n  openDialog() {\n    this.condition1 = false;\n  }\n\n  closeDialog() {\n    this.condition1 = true;\n  }\n\n\n}\n","<div class=\"row\">\n\n    <div *ngFor=\"let computer of computers | filter : searchTerm; let i = index\"\n        class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n        <div class=\"system mt-4\">\n            <div class=\"systemImg\">\n                <img src=\"assets/02.png\" alt=\"\">\n            </div>\n            <div class=\"systemInfrm p-3\">\n                <h5>{{computer.Name}} <small *ngIf=\"computer.Condition === 'Working'\" id=\"cnd1\">(Working)</small> <small\n                        *ngIf=\"computer.Condition === 'Not Working'\" id=\"cnd2\">(Not Working)</small> <small\n                        *ngIf=\"computer.Condition === 'Not In Use'\" id=\"cnd3\">(Not In Use)</small></h5>\n                <h6>Lab: {{computer.Lab}}</h6>\n                <div class=\"extr1 mt-2\">\n                    <button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\" [routerLink]=\"[computer.id]\">\n                        <a>View Full Information</a></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n</div>\n\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n    <router-outlet></router-outlet>\n</div>","import { TotalSystemService } from '../../All-Services/total-system.service';\nimport { Component, OnInit, DoCheck } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../All-Services/software-content.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport interface Labsintrfc {\n  Name: string;\n}\n\nexport interface Food {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-manage-computers',\n  templateUrl: './manage-computers.component.html',\n  styleUrls: ['./manage-computers.component.css']\n})\n\n\nexport class ManageComputersComponent implements OnInit, DoCheck {\n\n  condition1: boolean = true;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  totalPc: number = this.computers.length;\n\n  workingPc: number = 0;\n\n  NotWorkingPc: number = 0;\n\n  NotingUsePc: number = 0;\n\n  constructor(private _snackBar: MatSnackBar, public _TotalSystemService: TotalSystemService, private _SoftwareContentService: SoftwareContentService, ) { }\n\n  ngOnInit() {\n\n    for (let i = 0; i < this.computers.length; i++) {\n\n      if (this.computers[i]['Condition'] === 'Working') {\n\n        this.workingPc++;\n\n      }\n    }\n\n\n    for (let i = 0; i < this.computers.length; i++) {\n\n      if (this.computers[i]['Condition'] === 'Not Working') {\n\n        this.NotWorkingPc++;\n\n      }\n\n    }\n\n    for (let i = 0; i < this.computers.length; i++) {\n\n      if (this.computers[i]['Condition'] === 'Not In Use') {\n\n        this.NotingUsePc++;\n\n      }\n\n    }\n\n  }\n\n\n  ngDoCheck() {\n\n  }\n\n  openDialog() {\n    this.condition1 = false;\n  }\n\n\n  closeDialog() {\n    this.condition1 = true;\n  }\n\n\n  searchTerm: string;\n\n  onKey(param1) {\n\n    this._SoftwareContentService.searchterm = param1.target.value;\n\n    // console.log(this._SoftwareContentService.searchterm);\n\n\n  };\n\n  onBlue(param2) {\n\n    this._SoftwareContentService.searchterm = '';\n\n    console.log(this._SoftwareContentService.searchterm);\n\n\n  };\n\n\n  // tslint:disable-next-line: member-ordering\n  newName: '';\n\n  newStatus: any = '';\n\n  newLab: string = '';\n\n  newCompany: '';\n\n  newOs: any = '';\n\n  // tslint:disable-next-line: member-ordering\n  condition: Food[] = [\n    { value: 'Working', viewValue: 'Steak' },\n    { value: 'Not Working', viewValue: 'Pizza' },\n    { value: 'Not In Use', viewValue: 'Tacos' }\n  ];\n\n  conditiontwo: Food[] = [\n    { value: 'Windows 10', viewValue: 'Steak' },\n    { value: 'Windows 8', viewValue: 'Pizza' },\n    { value: 'Mac OS', viewValue: 'Tacos' },\n    { value: 'Linux', viewValue: 'Tacos' }\n  ];\n\n  Labs: {}[] = this._SoftwareContentService.Labs;\n\n\n  layout: string = 'grid';\n\n  isSpecial: boolean = true;\n\n\n  gridOn() {\n    this.layout = 'grid';\n\n    this.isSpecial = true;\n  }\n\n  tableOn() {\n    this.layout = 'table';\n\n    this.isSpecial = false;\n  }\n\n\n\n  toppings = new FormControl();\n\n  toppingList: {}[] = this._SoftwareContentService.getsoftwareNameNcolor();\n\n  toppingListTwo: {}[] = this._SoftwareContentService.gethardWare();\n\n\n  softwareNames: [];\n\n  hardwareNames: [];\n\n  addSystem() {\n\n    this._TotalSystemService.getAllSystem().push({\n      id: this._TotalSystemService.allSystem.length,\n      Name: this.newName,\n      Lab: this.newLab,\n      Software: this.softwareNames,\n      Condition: this.newStatus,\n      Company: this.newCompany,\n      hardWare: this.hardwareNames,\n      os: this.newOs,\n    });\n\n    this._snackBar.open(this.newName + ' has been added to Systems', 'Successfully !', {\n      duration: 2000,\n    });\n\n    // this.newName = '';\n\n    // this.newStatus = '';\n\n    // this.newLab = '';\n\n    // this.newCompany = '';\n\n    // this.newOs = '';\n\n  }\n\n\n\n}","<div class=\"full-body\">\n    <div class=\"contentheading\">\n        <div class=\"row\">\n            <div class=\"col-9 extr1 heading1\">\n                <h6>Manage System</h6>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"searchheading container\">\n        <div class=\"row extr1\">\n            <mat-tab-group mat-align-tabs=\"center\" class=\"w-100\">\n                <mat-tab label=\"Search System\">\n\n                    <div class=\"input-group my-3 h-auto\">\n                        <input class=\"form-control srchInp p-2 h-auto outline-none p-2 border-none\"\n                            aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" type=\"search\"\n                            placeholder=\"Search System\" [(ngModel)]=\"searchTerm\" (keyup)=\"onKey($event)\"\n                            (blur)=\"onBlue($event)\">\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary p-2 h-auto\" type=\"button\">Search</button>\n                        </div>\n                    </div>\n\n                </mat-tab>\n                <mat-tab label=\"Add System\">\n                    <div class=\"input-group w-100 my-3\">\n                        <form #userform=\"ngForm\">\n\n                            <div class=\"p-3 mb-3 row\">\n\n                                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n                                    <mat-form-field class=\"example-full-width\">\n                                        <input required matInput placeholder=\"System Name\"\n                                            [class.is-invalid]=\"systemName.invalid && systemName.touched\"\n                                            name=\"SystemName\" [(ngModel)]=\"newName\" #systemName=\"ngModel\">\n                                    </mat-form-field>\n\n                                    <small [class.d-none]=\"systemName.valid || systemName.untouched\"\n                                        class=\"text-danger\">Name is Required</small>\n                                </div>\n\n                                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                    <mat-form-field>\n                                        <mat-label>Select Status</mat-label>\n                                        <mat-select required [(ngModel)]=\"newStatus\"\n                                            [class.is-invalid]=\"PcStatus.invalid && PcStatus.touched\" name=\"PcStatus\"\n                                            #PcStatus=\"ngModel\">\n                                            <mat-option *ngFor=\"let status of condition\" [value]=\"status.value\">\n                                                {{status.value}}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n\n                                    <small [class.d-none]=\"PcStatus.valid || PcStatus.untouched\"\n                                        class=\"text-danger\">Select\n                                        Status</small>\n\n                                </div>\n\n                                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                    <mat-form-field>\n                                        <mat-label>Select Lab</mat-label>\n                                        <mat-select required [(ngModel)]=\"newLab\" name=\"labName\"\n                                            [class.is-invalid]=\"labName.invalid && labName.touched\" #labName=\"ngModel\">\n                                            <mat-option *ngFor=\"let Lab of Labs\" [value]=\"Lab.Name\">\n                                                {{Lab.Name}}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n\n                                    <small [class.d-none]=\"labName.valid || labName.untouched\"\n                                        class=\"text-danger\">Select\n                                        Lab</small>\n\n                                </div>\n\n                                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                    <mat-form-field class=\"example-full-width\">\n                                        <input required matInput placeholder=\"Company Name\"\n                                            [class.is-invalid]=\"companyName.invalid && companyName.touched\"\n                                            name=\"companyName\" [(ngModel)]=\"newCompany\" #companyName=\"ngModel\">\n                                    </mat-form-field>\n\n                                    <small [class.d-none]=\"companyName.valid || companyName.untouched\"\n                                        class=\"text-danger\">Company Name is Required</small>\n\n                                </div>\n\n                                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                    <mat-form-field>\n                                        <mat-label>Hardware Names</mat-label>\n                                        <mat-select required [formControl]=\"toppings\" name=\"hrdwrName\" multiple\n                                            [(ngModel)]=\"hardwareNames\">\n                                            <mat-option *ngFor=\"let topping of toppingListTwo\" [value]=\"topping.Name\">\n                                                {{topping.Name}}</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n\n                                </div>\n\n                                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                    <mat-form-field>\n                                        <mat-label>Software Names</mat-label>\n                                        <mat-select required [formControl]=\"toppings\" name=\"softwareName\" multiple\n                                            [(ngModel)]=\"softwareNames\">\n                                            <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping.Name\">\n                                                {{topping.Name}}</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n\n                                </div>\n\n                                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                    <mat-form-field>\n                                        <mat-label>Select Operating System</mat-label>\n                                        <mat-select required [(ngModel)]=\"newOs\" name=\"osName\"\n                                            [class.is-invalid]=\"osName.invalid && osName.touched\" #osName=\"ngModel\">\n                                            <mat-option *ngFor=\"let os of conditiontwo\" [value]=\"os.value\">\n                                                {{os.value}}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n\n                                    <small [class.d-none]=\"osName.valid || osName.untouched\" class=\"text-danger\">Select\n                                        Operating System</small>\n\n                                </div>\n\n                                <div class=\"col-12 extr1 extr11\">\n                                    <button mat-button [disabled]=\"userform.form.invalid\" (click)=\"addSystem()\">Add New\n                                        System</button>\n                                </div>\n\n                            </div>\n\n                        </form>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </div>\n\n\n    <div class=\"allSystem container\">\n        <div class=\"summary w-100\">\n            <div class=\"row\">\n                <div class=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12 mb-2 extr1\">\n                    <h6>Total Systems: {{totalPc}}</h6>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12 mb-2 extr1\">\n                    <h6>Working Systems: {{workingPc}}</h6>\n                </div>\n\n\n                <div class=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12 mb-2 extr1\">\n                    <h6>Not-Working Systems: {{NotWorkingPc}}</h6>\n                </div>\n\n                <div class=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12 mb-2 extr1\">\n                    <h6>Not-In-Use Systems: {{NotingUsePc}}</h6>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"layout w-100 my-3\">\n            <div class=\"row justify-content-end\">\n                <div class=\"w-100 h-100 col-xl-4 col-lg-4 col-md-6 col-sm-12 col-12\">\n                    <div class=\"row\">\n                        <div class=\"col-6 justify-content-center align-items-center\">\n                            <button title=\"Grid View\" mat-button (click)=\"gridOn()\"\n                                [ngClass]=\"isSpecial ? 'active': ''\"><i class=\"material-icons\">\n                                    grid_on\n                                </i></button>\n                        </div>\n                        <div class=\"col-6 justify-content-center align-items-center\">\n                            <button title=\"Table View\" mat-button (click)=\"tableOn()\"\n                                [ngClass]=\"isSpecial ? '': 'active'\"><i class=\"material-icons\">\n                                    grid_off\n                                </i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"extr1\" [ngSwitch]=\"layout\">\n\n            <app-grid-view *ngSwitchCase=\"'grid'\" class=\"w-100 h-100\"></app-grid-view>\n\n            <app-table-view *ngSwitchCase=\"'table'\" class=\"w-100 h-100\"></app-table-view>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../../All-Services/software-content.service';\nimport { TotalSystemService } from '../../../All-Services/total-system.service';\n\n@Component({\n  selector: 'app-table-view',\n  templateUrl: './table-view.component.html',\n  styleUrls: ['./table-view.component.css']\n})\nexport class TableViewComponent implements OnInit, DoCheck {\n\n  condition1: boolean = true;\n\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  constructor(public _TotalSystemService: TotalSystemService, private _SoftwareContentService: SoftwareContentService, ) { }\n\n\n  ngOnInit() {\n  }\n\n  searchTerm: string;\n\n  ngDoCheck() {\n\n    this.searchTerm = this._SoftwareContentService.searchterm;\n\n  }\n\n  openDialog() {\n    this.condition1 = false;\n  }\n\n  closeDialog() {\n    this.condition1 = true;\n  }\n\n}\n","<table class=\"mat-elevation-z8 w-100 h-100 mt-3\" id=\"t01\">\n  <tr>\n    <th style=\"width: 10%;\" class=\"align-items-center justify-content-center\">S.no</th>\n    <th>Name</th>\n    <th>Status</th>\n    <th>Lab</th>\n    <th>Edit</th>\n  </tr>\n\n  <tr *ngFor=\"let computer of computers | filter : searchTerm; let i = index\">\n    <td>{{i+1}}</td>\n    <td>{{computer.Name}} </td>\n    <td>{{computer.Condition}} </td>\n    <td>{{computer.Lab}}</td>\n    <td><button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\" [routerLink]=\"[computer.id]\"> <a>View Full\n          Information</a></button></td>\n  </tr>\n</table>\n\n\n\n\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n</div>\n\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { TotalSystemService } from '../../All-Services/total-system.service';\nimport { SoftwareContentService } from '../../All-Services/software-content.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-manage-labs',\n  templateUrl: './manage-labs.component.html',\n  styleUrls: ['./manage-labs.component.css']\n})\nexport class ManageLabsComponent implements OnInit, DoCheck {\n\n  searchTerm: string;\n\n  Labs: {}[];\n\n  labLength;\n\n  pcInLabs: number = 0;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  allsystems: {}[];\n\n  constructor(private _snackBar: MatSnackBar, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService: TotalSystemService) { }\n\n  ngOnInit() {\n\n    this.Labs = this._SoftwareContentService.getLabs();\n\n    this.allsystems = this._TotalSystemService.getAllSystem();\n\n    this.labLength = this.Labs.length;\n\n    for (let i = 0; i < this.Labs.length; i++) {\n\n      for (let j = 0; j < this.computers.length; j++) {\n\n        if (this.computers[j]['Lab'] == this.Labs[i]['Name']) {\n\n          this.pcInLabs++;\n        }\n\n        this.Labs[i]['totalSystem'] = this.pcInLabs;\n      }\n\n      this.pcInLabs = 0;\n\n    }\n\n  }\n\n\n  ngDoCheck() {\n\n    this.Labs = this._SoftwareContentService.getLabs();\n\n    this.labLength = this.Labs.length;\n\n    this.allsystems = this._TotalSystemService.getAllSystem();\n  }\n\n\n  addNewLab(param1) {\n\n\n    if (param1.value == '') {\n\n      param1.classList.add('your-class');\n\n      param1.placeholder = '* Enter a valid Lab Name';\n\n      param1.value = '';\n\n    }\n\n    else {\n\n      this._SoftwareContentService.getLabs().push({\n\n        Name: param1.value, totalSystem: 0,\n\n      });\n\n      this._snackBar.open(param1.value + ' has been added', 'Successfully !', {\n        duration: 2000,\n      });\n\n      param1.value = '';\n\n    }\n\n  }\n\n\n  goToLab() {\n\n    // this.router.navigate(['/']);\n  }\n\n\n}\n","<div class=\"contentheading\">\n    <div class=\"row\">\n        <div class=\"col-9 extr1 heading1\">\n            <h6>Manage Labs</h6>\n        </div>\n    </div>\n</div>\n\n<div class=\"full-body\">\n    <div class=\"searchheading container\">\n        <div class=\"row extr1\">\n            <mat-tab-group mat-align-tabs=\"center\" class=\"w-100\">\n                <mat-tab label=\"Search Lab\">\n                    <div class=\"input-group w-100 my-3\">\n                        <input type=\"search\" placeholder=\"Search Lab\" [(ngModel)]=\"searchTerm\">\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\n                        </div>\n                    </div>\n\n                </mat-tab>\n                <mat-tab label=\"Add Lab\">\n                    <div class=\"input-group w-100 my-3\">\n                        <input type=\"search\" placeholder=\"Add System\" #addLab>\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"addNewLab(addLab)\" type=\"button\"\n                                id=\"button-addon2\">Add</button>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"summary w-100 pl-5 mb-4\">\n            <h6 class=\"smmryH6\">Total No. of Labs: {{labLength}}</h6>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\"\n                *ngFor=\"let lab of Labs | filter : searchTerm; let i = index\">\n                <div class=\"labName\" (click)=\"goToLab()\" [routerLink]=\"[lab.Name]\">\n                    <div class=\"row\">\n                        <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 extr2\">\n                            <i class=\"material-icons\">computer</i>\n                        </div>\n                        <div class=\"col-xl-8 col-lg-8 col-md-8 col-sm-7 col-7 extr3\">\n                            <h6>{{lab.Name}}</h6>\n                        </div>\n                        <div class=\"extr2 pcIn col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2\">\n                            <p>{{lab.totalSystem}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../../All-Services/software-content.service';\nimport { TotalSystemService } from '../../../All-Services/total-system.service';\n\n\n@Component({\n  selector: 'app-grid-not',\n  templateUrl: './grid-not.component.html',\n  styleUrls: ['./grid-not.component.css']\n})\nexport class GridNotComponent implements OnInit {\n\n  condition1: boolean = true;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  constructor(public _TotalSystemService: TotalSystemService, private _SoftwareContentService: SoftwareContentService, ) { }\n\n\n  ngOnInit() {\n  }\n\n  searchTerm: string;\n\n  ngDoCheck() {\n\n    this.searchTerm = this._SoftwareContentService.searchterm;\n\n  }\n\n\n  openDialog() {\n    this.condition1 = false;\n  }\n\n  closeDialog() {\n    this.condition1 = true;\n  }\n\n\n}\n","<div class=\"row\">\n    <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\"\n        class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n        <div *ngIf=\"computer.Condition === 'Not In Use'\" class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n            <div class=\"system mt-4\">\n                <div class=\"systemImg\">\n                    <img src=\"assets/02.png\" alt=\"\">\n                </div>\n                <div class=\"systemInfrm p-3\">\n                    <h5>{{computer.Name}} <small *ngIf=\"computer.Condition === 'Working'\" id=\"cnd1\">(Working)</small>\n                        <small *ngIf=\"computer.Condition === 'Not Working'\" id=\"cnd2\">(Not Working)</small> <small\n                            *ngIf=\"computer.Condition === 'Not In Use'\" id=\"cnd3\">(Not In Use)</small></h5>\n                    <h6>Lab: {{computer.Lab}}</h6>\n                    <div class=\"extr1 mt-2\">\n                        <button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                            [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n\n\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n</div>\n\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n    <router-outlet></router-outlet>\n</div>","import { TotalSystemService } from '../../All-Services/total-system.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../All-Services/software-content.service';\n\n\n@Component({\n  selector: 'app-not-in-use',\n  templateUrl: './not-in-use.component.html',\n  styleUrls: ['./not-in-use.component.css']\n})\nexport class NotInUseComponent implements OnInit {\n\n\n  condition1: boolean = true;\n\n  openDialog() {\n    this.condition1 = false;\n  }\n\n  closeDialog() {\n    this.condition1 = true;\n  }\n\n  NotWorkingPc: number = 0;\n\n\n  constructor(public _TotalSystemService: TotalSystemService, private _SoftwareContentService: SoftwareContentService, ) { }\n\n  ngOnInit() {\n    for (let i = 0; i < this.computers.length; i++) {\n\n      if (this.computers[i]['Condition'] === 'Not In Use') {\n\n        this.NotWorkingPc++;\n\n      }\n\n    }\n  }\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  searchTerm: string;\n\n  onKey(param1) {\n\n    this._SoftwareContentService.searchterm = param1.target.value;\n\n    // console.log(this._SoftwareContentService.searchterm);\n\n\n  };\n\n  onBlue(param2) {\n\n    this._SoftwareContentService.searchterm = '';\n\n    console.log(this._SoftwareContentService.searchterm);\n\n\n  }\n\n  layout: string = 'grid';\n\n  isSpecial: boolean = true;\n\n\n  gridOn() {\n    this.layout = 'grid';\n\n    this.isSpecial = true;\n  }\n\n  tableOn() {\n    this.layout = 'table';\n\n    this.isSpecial = false;\n  }\n\n\n}\n","<div class=\"full-body\">\r\n    <div class=\"contentheading\">\r\n        <div class=\"row\">\r\n            <div class=\"col-9 extr1 heading1\">\r\n                <h6>Not In Use</h6>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"searchheading container\">\r\n        <div class=\"row extr1\">\r\n            <div class=\"input-group w-100 my-3\">\r\n                <input type=\"search\" placeholder=\"Search System\" [(ngModel)]=\"searchTerm\" (keyup)=\"onKey($event)\"\r\n                    (blur)=\"onBlue($event)\">\r\n                <div class=\"input-group-append\">\r\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"allSystem container mt-4\">\r\n        <div class=\"summary w-100 mb-2\">\r\n            <div class=\"row\">\r\n                <div class=\" col-12 mb-2 extr2\">\r\n                    <h6 class=\"smmryH6\">Total Systems Not in Use: {{NotWorkingPc}}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"layout w-100 my-3\">\r\n            <div class=\"row justify-content-end\">\r\n                <div class=\"w-100 h-100 col-xl-4 col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 justify-content-center align-items-center\">\r\n                            <button title=\"Grid View\" mat-button (click)=\"gridOn()\"\r\n                                [ngClass]=\"isSpecial ? 'active': ''\"><i class=\"material-icons\">\r\n                                    grid_on\r\n                                </i></button>\r\n                        </div>\r\n                        <div class=\"col-6 justify-content-center align-items-center\">\r\n                            <button title=\"Table View\" mat-button (click)=\"tableOn()\"\r\n                                [ngClass]=\"isSpecial ? '': 'active'\"><i class=\"material-icons\">\r\n                                    grid_off\r\n                                </i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"extr1\" [ngSwitch]=\"layout\">\r\n\r\n            <app-grid-not *ngSwitchCase=\"'grid'\" class=\"w-100 h-100\"></app-grid-not>\r\n\r\n            <app-table-not *ngSwitchCase=\"'table'\" class=\"w-100 h-100\"></app-table-not>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\r\n</div>\r\n\r\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../../All-Services/software-content.service';\nimport { TotalSystemService } from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-table-not',\n  templateUrl: './table-not.component.html',\n  styleUrls: ['./table-not.component.css']\n})\nexport class TableNotComponent implements OnInit {\n\n  condition1: boolean = true;\n\n  softwareName: string;\n\n  paramsSubscription: Subscription;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService: TotalSystemService) { }\n\n\n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.softwareName = params['software'];\n\n      console.log(this.softwareName);\n\n    });\n  }\n\n  searchTerm: string;\n\n  ngDoCheck() {\n\n    this.searchTerm = this._SoftwareContentService.searchterm;\n\n  }\n\n  openDialog() {\n    this.condition1 = false;\n  }\n\n  closeDialog() {\n    this.condition1 = true;\n  }\n\n\n}\n","<table class=\"mat-elevation-z8 w-100 h-100 mt-3\" id=\"t01\">\n    <tr>\n        <th style=\"width: 10%;\" class=\"align-items-center justify-content-center\">S.no</th>\n        <th>Name</th>\n        <th>Status</th>\n        <th>Lab</th>\n        <th>Edit</th>\n    </tr>\n\n    <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\">\n        <tr *ngIf=\"computer.Condition === 'Not In Use'\">\n\n            <td>{{i+1}}</td>\n            <td>{{computer.Name}} </td>\n            <td>{{computer.Condition}} </td>\n            <td>{{computer.Lab}}</td>\n            <td><button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\" [routerLink]=\"[computer.id]\">\n                    <a>View Full Information</a></button></td>\n        </tr>\n\n    </ng-container>\n</table>\n\n\n\n\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n</div>\n\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n    <router-outlet></router-outlet>\n</div>","import {SoftwareContentService} from '../../All-Services/software-content.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n\n  constructor(private _SoftwareContentService: SoftwareContentService) { }\n\n  ngOnInit() {\n  }\n\n  messages: {}[] = this._SoftwareContentService.getNotification();\n\n  readedMessages: {}[] = this._SoftwareContentService.readedMessages;\n\n  deleteMsg(param1){\n      this._SoftwareContentService.getNotification().splice(param1,1);\n\n      this._SoftwareContentService.readedMessages.splice(0,1);\n  }\n\n\ntextMessage: '';\n\nsenderName: '';\n  \n  condition1: boolean = true;\n  \n  openDialog(param2, param3, index){       \n       this.condition1 = false;\n       this.textMessage = param2.textContent;\n       this.senderName = param3.textContent;\n\n       this._SoftwareContentService.getNotification()[index]['seen'] = true;\n\n       this._SoftwareContentService.readedMessages.push(this._SoftwareContentService.getNotification()[index]);              \n  }\n\n  closeDialog(){\n       this.condition1 = true;\n  }\n\n\n}\n","<div class=\"contentheading\">\n    <div class=\"row\">\n        <div class=\"col-9 extr1 heading1\">\n            <h6>Notifications</h6>\n        </div>\n    </div>\n</div>\n\n<div class=\"full-body\">\n    <div class=\"container py-3\">\n        <div class=\"totalNotification  w-100\">\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 my-2 extr1\">\n                    <h6 class=\"smmryH6\">Total Notifications: {{messages.length}}</h6>\n                </div>\n\n                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 my-2 extr1\">\n                    <h6 class=\"smmryH6\">Readed Notifications: {{readedMessages.length}}</h6>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"container pt-3 w-100\">\n        <div class=\"messageBox mt-2 mb-2\" [ngStyle]=\"{'background-color': message.seen? 'transparent' : 'white'}\"\n            *ngFor=\"let message of messages; let i = index\" (click)=\"openDialog(rkj,rkj2,i)\">\n            <div class=\"row w-100 h-100\">\n                <div class=\"messageDemo col-xl-8 col-lg-8 col-md-7 col-sm-7 col-0\">\n                    <span #rkj>\n                        {{message.message}}\n                    </span>\n                </div>\n                <div class=\"senderName col-xl-3 col-lg-3 col-md-4 col-sm-4 col-10\" #rkj2>\n                    <span>By: {{message.sender}} <small *ngIf=\"message.seen\">(Seen)</small></span>\n                </div>\n                <div class=\"selectMessage col-xl-1 col-lg-1 col-md-1 col-sm-1 col-2\" (click)=\"deleteMsg(i)\">\n                    <button mat-button><i class=\"material-icons\">delete</i></button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n</div>\n\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n    <p>\n        {{textMessage}}\n    </p>\n    <hr>\n    <address class=\"m-0\">{{senderName}}</address>\n</div>","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\n\n@Component({\n  selector: 'app-grid-repair',\n  templateUrl: './grid-repair.component.html',\n  styleUrls: ['./grid-repair.component.css']\n})\nexport class GridRepairComponent implements OnInit {\n\n  condition1: boolean = true;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  constructor(public _TotalSystemService: TotalSystemService, private _SoftwareContentService: SoftwareContentService,) {}\n\n\n  ngOnInit() {\n  }\n\n  searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n\n\nopenDialog(){       \n    this.condition1 = false;\n}\n\ncloseDialog(){\n    this.condition1 = true;\n}\n\n}\n","<div class=\"row\">\n        <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\"\n            class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n            <div *ngIf=\"computer.Condition === 'Not Working'\" class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n                <div class=\"system mt-4\">\n                    <div class=\"systemImg\">\n                        <img src=\"assets/02.png\" alt=\"\">\n                    </div>\n                    <div class=\"systemInfrm p-3\">\n                        <h5>{{computer.Name}} <small *ngIf=\"computer.Condition === 'Working'\"\n                                id=\"cnd1\">(Working)</small> <small *ngIf=\"computer.Condition === 'Not Working'\"\n                                id=\"cnd2\">(Not Working)</small> <small *ngIf=\"computer.Condition === 'Not In Use'\"\n                                id=\"cnd3\">(Not In Use)</small></h5>\n                        <h6>Lab: {{computer.Lab}}</h6>\n                        <div class=\"extr1 mt-2\">\n                            <button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                                [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n\n\n\n\n    <div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n        </div>\n        \n        <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n            <router-outlet></router-outlet>\n        </div>","import {TotalSystemService} from '../../All-Services/total-system.service';\nimport { Component, OnInit } from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../All-Services/software-content.service';\n\n@Component({\n  selector: 'app-repairs',\n  templateUrl: './repairs.component.html',\n  styleUrls: ['./repairs.component.css']\n})\nexport class RepairsComponent implements OnInit {\n  \n\n  condition1: boolean = true;\n  \n  openDialog(){       \n       this.condition1 = false;\n  }\n\n  closeDialog(){\n       this.condition1 = true;\n  }\n\n  NotWorkingPc: number = 0;\n\n  constructor(public _TotalSystemService: TotalSystemService, private _SoftwareContentService: SoftwareContentService,) {}\n\n  ngOnInit() {\n      for (let i = 0; i < this.computers.length; i++) {\n    \n            if ( this.computers[i]['Condition'] === 'Not Working') {\n\n                this.NotWorkingPc++;\n                \n            }\n\n       } \n  }\n  \n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  searchTerm: string;\n\n  onKey(param1){\n\n    this._SoftwareContentService.searchterm = param1.target.value;\n\n    // console.log(this._SoftwareContentService.searchterm);\n    \n    \n  };\n\n  onBlue(param2){\n        \n    this._SoftwareContentService.searchterm = '';\n\n    console.log(this._SoftwareContentService.searchterm);\n\n\n  }\n\n  layout: string = 'grid'; \n\n  isSpecial: boolean = true;\n\n\n  gridOn(){\n     this.layout = 'grid';\n\n     this.isSpecial = true;\n  }\n\n  tableOn(){\n    this.layout = 'table';\n\n    this.isSpecial = false;\n }\n\n\n}\n","<div class=\"full-body\">\r\n    <div class=\"contentheading\">\r\n        <div class=\"row\">\r\n            <div class=\"col-9 extr1 heading1\">\r\n                <h6>Repairs</h6>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"searchheading container\">\r\n        <div class=\"row extr1\">\r\n            <div class=\"input-group w-100 my-3\">\r\n                <input type=\"search\" placeholder=\"Search System\" [(ngModel)]=\"searchTerm\" (keyup)=\"onKey($event)\">\r\n                <div class=\"input-group-append\">\r\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"allSystem container mt-4\">\r\n\r\n        <div class=\"summary w-100 mb-2\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 mb-2\">\r\n                    <h6 class=\"smmryH6\">Total Systems in Repairs: {{NotWorkingPc}}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"layout w-100 my-3\">\r\n            <div class=\"row justify-content-end\">\r\n                <div class=\"w-100 h-100 col-xl-4 col-lg-4 col-md-6 col-sm-12 col-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 justify-content-center align-items-center\">\r\n                            <button title=\"Grid View\" mat-button (click)=\"gridOn()\"\r\n                                [ngClass]=\"isSpecial ? 'active': ''\"><i class=\"material-icons\">\r\n                                    grid_on\r\n                                </i></button>\r\n                        </div>\r\n                        <div class=\"col-6 justify-content-center align-items-center\">\r\n                            <button title=\"Table View\" mat-button (click)=\"tableOn()\"\r\n                                [ngClass]=\"isSpecial ? '': 'active'\"><i class=\"material-icons\">\r\n                                    grid_off\r\n                                </i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"extr1\" [ngSwitch]=\"layout\">\r\n\r\n            <app-grid-repair *ngSwitchCase=\"'grid'\" class=\"w-100 h-100\"></app-grid-repair>\r\n\r\n            <app-table-repair *ngSwitchCase=\"'table'\" class=\"w-100 h-100\"></app-table-repair>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\r\n</div>\r\n\r\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-table-repair',\n  templateUrl: './table-repair.component.html',\n  styleUrls: ['./table-repair.component.css']\n})\nexport class TableRepairComponent implements OnInit {\n  \n  condition1: boolean = true;\n  \n  softwareName: string;\n  \n  paramsSubscription: Subscription;\n    \n  computers: {}[] = this._TotalSystemService.getAllSystem();\n  \n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService : TotalSystemService) { }\n  \n  \n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.softwareName = params['software'];\n\n      console.log(this.softwareName);\n\n    });\n  }\n\n      searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n      \n      openDialog(){       \n        this.condition1 = false;\n    }\n\n    closeDialog(){\n        this.condition1 = true;\n    }\n\n}\n","\n      \n      <table class=\"mat-elevation-z8 w-100 h-100 mt-3\" id=\"t01\"> \n            <tr>\n                    <th style=\"width: 10%;\" class=\"align-items-center justify-content-center\">S.no</th>\n                    <th>Name</th>\n                    <th>Status</th>\n                    <th>Lab</th>\n                    <th>Edit</th>\n            </tr>\n    \n        <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\">\n            <tr *ngIf=\"computer.Condition === 'Not Working'\">\n                \n                    <td>{{i+1}}</td>\n                    <td>{{computer.Name}} </td> \n                    <td>{{computer.Condition}} </td>\n                    <td>{{computer.Lab}}</td>\n                    <td><button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                        [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button></td>\n                    </tr>\n\n                </ng-container>\n          </table>\n    \n    \n    \n          \n    <div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n        </div>\n        \n        <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n            <router-outlet></router-outlet>\n        </div>\n          ","import { Component, OnInit } from \"@angular/core\";\nimport { TotalSystemService } from \"../../All-Services/total-system.service\";\nimport { SoftwareContentService } from \"../../All-Services/software-content.service\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: \"app-software\",\n  templateUrl: \"./software.component.html\",\n  styleUrls: [\"./software.component.css\"]\n})\nexport class SoftwareComponent implements OnInit {\n  searchTerm: string;\n\n  softwares: {}[];\n\n  softwareLength;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  sftwrePC: number = 0;\n\n  constructor(\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    private _SoftwareContentService: SoftwareContentService,\n    private _TotalSystemService: TotalSystemService\n  ) {}\n\n  ngOnInit() {\n    this.softwares = this._SoftwareContentService.getsoftwareNameNcolor();\n\n    this.softwareLength = this.softwares.length;\n\n    for (let i = 0; i < this.softwares.length; i++) {\n      for (let j = 0; j < this.computers.length; j++) {\n        if (\n          this.computers[j][\"Software\"].indexOf(this.softwares[i][\"Name\"]) > -1\n        ) {\n          this.sftwrePC++;\n        }\n\n        this.softwares[i][\"totalSystem\"] = this.sftwrePC;\n      }\n\n      this.sftwrePC = 0;\n    }\n  }\n\n  bgColors: string[] = ['#46a34a','#e63b38','#fb8d02','#922aac', '#00c1ed','#46a34a','#e63b38','#fb8d02','#922aac', '#00c1ed'];\n\n  randomNo: number;\n\n  addNewsoftware(param1) {\n    this.randomNo = Math.floor(Math.random() * 10);\n\n    if (param1.value == \"\") {\n      param1.classList.add(\"your-class\");\n\n      param1.placeholder = \"* Enter a valid Software Name\";\n\n      param1.value = \"\";\n    } \n    \n    else {\n      this._SoftwareContentService.softwareNameNcolor.push({\n        Name: param1.value,\n        backgroundColor: this.bgColors[this.randomNo],\n        totalSystem: 0\n      });\n\n      this._snackBar.open(\n        param1.value + \" has been added to Softwares\",\n        \"Successfully !\",\n        {\n          duration: 2000\n        }\n      );\n\n      param1.value = \"\";\n    }\n  }\n\n  //   goToLab(){\n\n  //     this.router.navigate(['/']);\n  //   }\n}\n","<div class=\"contentheading\">\n  <div class=\"row\">\n    <div class=\"col-9 extr1 heading1\">\n      <h6>Manage Software</h6>\n    </div>\n  </div>\n</div>\n\n<div class=\"full-body\">\n  <div class=\"searchheading container\">\n    <div class=\"row extr1\">\n      <mat-tab-group mat-align-tabs=\"center\" class=\"w-100\">\n        <mat-tab label=\"Search Software\">\n          <div class=\"input-group w-100 my-3\">\n            <input type=\"search\" placeholder=\"Search Software\" [(ngModel)]=\"searchTerm\" />\n            <div class=\"input-group-append\">\n              <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">\n                Search\n              </button>\n            </div>\n          </div>\n        </mat-tab>\n        <mat-tab label=\"Add Software\">\n          <div class=\"input-group w-100 my-3\">\n            <input type=\"search\" placeholder=\"Add Hardware\" #addsoftware />\n            <div class=\"input-group-append\">\n              <button class=\"btn btn-outline-secondary\" (click)=\"addNewsoftware(addsoftware)\" type=\"button\"\n                id=\"button-addon2\">\n                Add\n              </button>\n            </div>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n  </div>\n\n  <div class=\"summary w-100 pl-5 mb-4\">\n    <h6 class=\"smmryH6\">Total No. of Softwares: {{ softwareLength }}</h6>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\"\n        *ngFor=\"let software of softwares | filter: searchTerm; let i = index\">\n        <div class=\"labName\" [routerLink]=\"[software.Name]\">\n          <div class=\"row\">\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 extr2\">\n              <i class=\"far fa-window-restore\"></i>\n            </div>\n            <div class=\"col-xl-8 col-lg-8 col-md-8 col-sm-7 col-7 extr3\">\n              <h6>{{ software.Name }}</h6>\n            </div>\n\n            <div class=\"extr2 pcIn col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2\">\n              <p>{{ software.totalSystem }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-grid-hardware',\n  templateUrl: './grid-hardware.component.html',\n  styleUrls: ['./grid-hardware.component.css']\n})\nexport class GridHardwareComponent implements OnInit {\n\n  condition1: boolean = true;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();  \n  \n  hardwareName: string;\n  \n  paramsSubscription: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService : TotalSystemService) { }\n\n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.hardwareName = params['hardware'];\n\n    //   console.log(this.hardwareName);\n    });\n  \n  }\n\n  searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n\n\nopenDialog(){       \n    this.condition1 = false;\n}\n\ncloseDialog(){\n    this.condition1 = true;\n}\n}\n","<div class=\"row\">\n        <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\"\n            class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n            <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\"\n                *ngIf=\"computer.hardWare.indexOf(hardwareName) > -1\">\n                <div class=\"system mt-4\">\n                    <div class=\"systemImg\">\n                        <img src=\"assets/02.png\" alt=\"\">\n                    </div>\n                    <div class=\"systemInfrm p-3\">\n                        <h5>{{computer.Name}} <small *ngIf=\"computer.Condition === 'Working'\"\n                                id=\"cnd1\">(Working)</small> <small *ngIf=\"computer.Condition === 'Not Working'\"\n                                id=\"cnd2\">(Not Working)</small> <small *ngIf=\"computer.Condition === 'Not In Use'\"\n                                id=\"cnd3\">(Not In Use)</small></h5>\n                        <h6>Lab: {{computer.Lab}}</h6>\n                        <div class=\"extr1 mt-2\">\n                            <button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                                [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n\n\n    \n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n    </div>\n    \n    <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n        <router-outlet></router-outlet>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {TotalSystemService} from '../../All-Services/total-system.service';\nimport {SoftwareContentService} from '../../All-Services/software-content.service';\n\n@Component({\n  selector: 'app-specific-hardware',\n  templateUrl: './specific-hardware.component.html',\n  styleUrls: ['./specific-hardware.component.css']\n})\nexport class SpecificHardwareComponent implements OnInit {\n\n condition1: boolean = true;\n  \n  openDialog(){       \n       this.condition1 = false;\n  }\n\n  closeDialog(){\n       this.condition1 = true;\n  }\n  \n  hardwareName: string;\n  \n  paramsSubscription: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router, private _TotalSystemService : TotalSystemService, private _SoftwareContentService: SoftwareContentService) { }\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  hardwarePc: number = 0;\n\n  wrkngPc: number = 0;\n\n  notWrkngPc: number = 0;\n  \n  ngOnInit() {\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.hardwareName = params['hardware'];\n\n    //   console.log(this.hardwareName);\n    });\n\n    \n    for (let i = 0; i < this.computers.length; i++) {\n    \n            if ( this.computers[i]['hardWare'].indexOf(this.hardwareName) > -1){\n\n                this.hardwarePc++;\n                \n                if( this.computers[i]['Condition'] == 'Working'){\n                    \n                  this.wrkngPc++;\n                }\n\n                if( this.computers[i]['Condition'] == 'Not Working'){\n                    \n                  this.notWrkngPc++;                  \n                }\n\n            }\n\n       } \n\n  }\n\n\n  layout: string = 'grid'; \n\n  isSpecial: boolean = true;\n\n\n  gridOn(){\n     this.layout = 'grid';\n\n     this.isSpecial = true;\n  }\n\n  tableOn(){\n    this.layout = 'table';\n\n    this.isSpecial = false;\n }\n\n searchTerm: string;\n\n onKey(param1){\n\n  this._SoftwareContentService.searchterm = param1.target.value;\n\n  // console.log(this._SoftwareContentService.searchterm);\n  \n  \n};\n\nonBlue(param2){\n      \n  this._SoftwareContentService.searchterm = '';\n\n  console.log(this._SoftwareContentService.searchterm);\n\n\n}\n  \n\n\n}\n","<div class=\"full-body\">\r\n    <div class=\"contentheading\">\r\n        <div class=\"row\">\r\n            <div class=\"col-9 extr1 heading1\">\r\n                <h6>{{hardwareName}}</h6>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"searchheading container\">\r\n        <div class=\"row extr1\">\r\n            <div class=\"input-group p-3 mb-3\">\r\n                <input type=\"search\" placeholder=\"Search System\" [(ngModel)]=\"searchTerm\" (keyup)=\"onKey($event)\"\r\n                    (blur)=\"onBlue($event)\">\r\n                <div class=\"input-group-append\">\r\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"allSystem container mt-4\">\r\n        <div class=\"summary w-100 mb-2\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 mb-2 extr1 smmry\">\r\n                    <h6>Total Systems: {{hardwarePc}}</h6>\r\n                </div>\r\n\r\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 mb-2 extr1 smmry\">\r\n                    <h6>Working Systems : {{wrkngPc}}</h6>\r\n                </div>\r\n\r\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 mb-2 extr1 smmry\">\r\n                    <h6>Not Working Systems: {{notWrkngPc}}</h6>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"layout w-100 mb-2 mt-4\">\r\n            <div class=\"row justify-content-end\">\r\n                <div class=\"w-100 h-100 col-4\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 justify-content-center align-self-center\">\r\n                            <button title=\"Grid View\" mat-button (click)=\"gridOn()\"\r\n                                [ngClass]=\"isSpecial ? 'active': ''\"><i class=\"material-icons\">\r\n                                    grid_on\r\n                                </i></button>\r\n                        </div>\r\n                        <div class=\"col-6 justify-content-center align-self-center\">\r\n                            <button title=\"Table View\" mat-button (click)=\"tableOn()\"\r\n                                [ngClass]=\"isSpecial ? '': 'active'\"><i class=\"material-icons\">\r\n                                    grid_off\r\n                                </i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"extr1\" [ngSwitch]=\"layout\">\r\n\r\n            <app-grid-hardware *ngSwitchCase=\"'grid'\" class=\"w-100 h-100\"></app-grid-hardware>\r\n\r\n            <app-table-hardware *ngSwitchCase=\"'table'\" class=\"w-100 h-100\"></app-table-hardware>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\r\n</div>\r\n\r\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-table-hardware',\n  templateUrl: './table-hardware.component.html',\n  styleUrls: ['./table-hardware.component.css']\n})\nexport class TableHardwareComponent implements OnInit {\n \n  condition1: boolean = true;\n  \n  hardwareName: string;\n  \n  paramsSubscription: Subscription;\n    \n  computers: {}[] = this._TotalSystemService.getAllSystem();\n  \n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService : TotalSystemService) { }\n  \n  \n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.hardwareName = params['hardware'];\n\n    //   console.log(this.hardwareName);\n    });\n\n  }\n\n      searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n      \n      openDialog(){       \n        this.condition1 = false;\n    }\n\n    closeDialog(){\n        this.condition1 = true;\n    }\n\n}\n","<table class=\"mat-elevation-z8 w-100 h-100 mt-3\" id=\"t01\"> \n        <tr>\n                <th style=\"width: 10%;\" class=\"align-items-center justify-content-center\">S.no</th>\n                <th>Name</th>\n                <th>Status</th>\n                <th>Lab</th>\n                <th>Edit</th>\n        </tr>\n\n    <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\">\n        <tr *ngIf=\"computer.hardWare.indexOf(hardwareName) > -1\">\n            \n                <td>{{i+1}}</td>\n                <td>{{computer.Name}} </td> \n                <td>{{computer.Condition}} </td>\n                <td>{{computer.Lab}}</td>\n                <td><button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                    [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button></td>\n                </tr>\n\n            </ng-container>\n      </table>\n\n\n\n      \n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n    </div>\n    \n    <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n        <router-outlet></router-outlet>\n    </div>\n      ","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-grid-lab',\n  templateUrl: './grid-lab.component.html',\n  styleUrls: ['./grid-lab.component.css']\n})\nexport class GridLabComponent implements OnInit, DoCheck {\n  condition1: boolean = true;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n  \n  labName: any;\n  \n  paramsSubscription: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService : TotalSystemService) { }\n\n\n  ngOnInit() {\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n      this.labName = params['lab'];\n      \n    });\n  \n  }\n\n  searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n\n\nopenDialog(){       \n    this.condition1 = false;\n}\n\ncloseDialog(){\n    this.condition1 = true;\n}\n\n}\n","<div class=\"row\">\n        <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\"\n            class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n            <div *ngIf=\"computer.Lab == labName\" class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n                <div class=\"system mt-4\">\n                    <div class=\"systemImg\">\n                        <img src=\"assets/02.png\" alt=\"\">\n                    </div>\n                    <div class=\"systemInfrm p-3\">\n                        <h5>{{computer.Name}} <small *ngIf=\"computer.Condition === 'Working'\"\n                                id=\"cnd1\">(Working)</small> <small *ngIf=\"computer.Condition === 'Not Working'\"\n                                id=\"cnd2\">(Not Working)</small> <small *ngIf=\"computer.Condition === 'Not In Use'\"\n                                id=\"cnd3\">(Not In Use)</small></h5>\n                        <h6>Lab: {{computer.Lab}}</h6>\n                        <div class=\"extr1 mt-2\">\n                            <button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                                [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n\n\n    <div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n        </div>\n        \n        <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n            <router-outlet></router-outlet>\n        </div>","import {TotalSystemService} from '../../All-Services/total-system.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {SoftwareContentService} from '../../All-Services/software-content.service';\n\n@Component({\n  selector: 'app-specific-lab',\n  templateUrl: './specific-lab.component.html',\n  styleUrls: ['./specific-lab.component.css']\n})\nexport class SpecificLabComponent implements OnInit {\n\n   condition1: boolean = true;\n  \n  openDialog(){       \n       this.condition1 = false;\n  }\n\n  closeDialog(){\n       this.condition1 = true;\n  }\n  \n  labName: any;\n  \n  paramsSubscription: Subscription;\n\n  labPc: number = 0;\n\n  wrkngPc: number = 0;\n\n  notWrkngPc: number = 0;\n\n  constructor(private route: ActivatedRoute, private router: Router, private _TotalSystemService : TotalSystemService, private _SoftwareContentService: SoftwareContentService) { }\n  \n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  ngOnInit() {\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n      this.labName = params['lab']\n      \n    });\n\n    for (let i = 0; i < this.computers.length; i++) {\n    \n            if ( this.computers[i]['Lab'] == this.labName){\n\n                this.labPc++;\n\n                if( this.computers[i]['Condition'] == 'Working'){\n                    \n                  this.wrkngPc++;\n                }\n\n                if( this.computers[i]['Condition'] == 'Not Working'){\n                    \n                  this.notWrkngPc++;                  \n                }\n            }\n\n       } \n  }\n\n  layout: string = 'grid'; \n\n  isSpecial: boolean = true;\n\n\n  gridOn(){\n     this.layout = 'grid';\n\n     this.isSpecial = true;\n  }\n\n  tableOn(){\n    this.layout = 'table';\n\n    this.isSpecial = false;\n }\n\n searchTerm: string;\n\n onKey(param1){\n\n  this._SoftwareContentService.searchterm = param1.target.value;\n\n  // console.log(this._SoftwareContentService.searchterm);\n  \n  \n};\n\nonBlue(param2){\n      \n  this._SoftwareContentService.searchterm = '';\n\n  console.log(this._SoftwareContentService.searchterm);\n\n\n}\n\n\n}\n","<div class=\"full-body\">\n    <div class=\"contentheading\">\n        <div class=\"row\">\n            <div class=\"col-9 extr1 heading1\">\n                <h6>{{labName}}</h6>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"searchheading container\">\n        <div class=\"row extr1\">\n            <div class=\"input-group p-3 mb-3\">\n                <input type=\"search\" placeholder=\"Search System\" [(ngModel)]=\"searchTerm\" (keyup)=\"onKey($event)\" (blur)=\"onBlue($event)\">\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"allSystem container mt-4\">\n        <div class=\"summary w-100 mb-2\">\n            <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 mb-2 extr1 smmry\">\n                    <h6>Total Systems: {{labPc}}</h6>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 mb-2 extr1 smmry\">\n                    <h6>Working Systems : {{wrkngPc}}</h6>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-12 mb-2 extr1 smmry\">\n                    <h6>Not Working Systems: {{notWrkngPc}}</h6>\n                </div>\n\n            </div>\n        </div>\n    \n        <div class=\"layout w-100 mb-2 mt-4\">\n                    <div class=\"row justify-content-end\">\n                        <div class=\"w-100 h-100 col-4\">\n                            <div class=\"row\">\n                                <div class=\"col-6 justify-content-center align-self-center\">\n                                    <button title=\"Grid View\" mat-button (click)=\"gridOn()\" [ngClass]=\"isSpecial ? 'active': ''\"><i class=\"material-icons\">\n                                        grid_on\n                                        </i></button>\n                                </div>\n                                <div class=\"col-6 justify-content-center align-self-center\">\n                                    <button title=\"Table View\" mat-button (click)=\"tableOn()\" [ngClass]=\"isSpecial ? '': 'active'\"><i class=\"material-icons\">\n                                        grid_off\n                                        </i></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        \n        <div class=\"extr1\" [ngSwitch]=\"layout\">\n        \n                    <app-grid-lab *ngSwitchCase=\"'grid'\" class=\"w-100 h-100\"></app-grid-lab>\n        \n                    <app-table-lab *ngSwitchCase=\"'table'\" class=\"w-100 h-100\"></app-table-lab>                \n        </div>\n        \n    </div>\n</div>\n\n\n\n\n\n\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n</div>\n\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-table-lab',\n  templateUrl: './table-lab.component.html',\n  styleUrls: ['./table-lab.component.css']\n})\nexport class TableLabComponent implements OnInit, DoCheck {\n\n  condition1: boolean = true;\n  \n  labName: any;\n    \n  paramsSubscription: Subscription;\n    \n  computers: {}[] = this._TotalSystemService.getAllSystem();\n  \n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService : TotalSystemService) { }\n  \n  \n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n      this.labName = params['lab']\n      \n    });\n\n  }\n\n      searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n      \n      openDialog(){       \n        this.condition1 = false;\n    }\n\n    closeDialog(){\n        this.condition1 = true;\n    }\n\n}\n","<table class=\"mat-elevation-z8 w-100 h-100 mt-3\" id=\"t01\"> \n            <tr>\n                    <th style=\"width: 10%;\" class=\"align-items-center justify-content-center\">S.no</th>\n                    <th>Name</th>\n                    <th>Status</th>\n                    <th>Lab</th>\n                    <th>Edit</th>\n            </tr>\n    \n        <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\">\n            <tr *ngIf=\"computer.Lab == labName\">\n                \n                    <td>{{i+1}}</td>\n                    <td>{{computer.Name}} </td> \n                    <td>{{computer.Condition}} </td>\n                    <td>{{computer.Lab}}</td>\n                    <td><button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                        [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button></td>\n                    </tr>\n\n                </ng-container>\n          </table>\n    \n    \n    \n          \n    <div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n        </div>\n        \n        <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n            <router-outlet></router-outlet>\n        </div>\n          ","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-grid-software',\n  templateUrl: './grid-software.component.html',\n  styleUrls: ['./grid-software.component.css']\n})\nexport class GridSoftwareComponent implements OnInit, DoCheck {  \n\n  condition1: boolean = true;\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n  \n  softwareName: string;\n  \n  paramsSubscription: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService : TotalSystemService) { }\n\n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.softwareName = params['software'];\n\n      console.log(this.softwareName);\n\n    });\n  }\n\n  searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n\n\nopenDialog(){       \n    this.condition1 = false;\n}\n\ncloseDialog(){\n    this.condition1 = true;\n}\n\n\n}\n","<div class=\"row\">\n        <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\"\n            class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\">\n            <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12\"\n                *ngIf=\"computer.Software.indexOf(softwareName) > -1\">\n                <div class=\"system mt-4\">\n                    <div class=\"systemImg\">\n                        <img src=\"assets/02.png\" alt=\"\">\n                    </div>\n                    <div class=\"systemInfrm p-3\">\n                        <h5>{{computer.Name}} <small *ngIf=\"computer.Condition === 'Working'\"\n                                id=\"cnd1\">(Working)</small> <small *ngIf=\"computer.Condition === 'Not Working'\"\n                                id=\"cnd2\">(Not Working)</small> <small *ngIf=\"computer.Condition === 'Not In Use'\"\n                                id=\"cnd3\">(Not In Use)</small></h5>\n                        <h6>Lab: {{computer.Lab}}</h6>\n                        <div class=\"extr1 mt-2\">\n                            <button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                                [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n\n\n    <div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n        </div>\n        \n        <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n            <router-outlet></router-outlet>\n        </div>","import {TotalSystemService} from '../../All-Services/total-system.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {SoftwareContentService} from '../../All-Services/software-content.service';\n\n@Component({\n  selector: 'app-specific-software',\n  templateUrl: './specific-software.component.html',\n  styleUrls: ['./specific-software.component.css']\n})\nexport class SpecificSoftwareComponent implements OnInit {\n\n condition1: boolean = true;\n  \n  openDialog(){       \n       this.condition1 = false;\n  }\n\n  closeDialog(){\n       this.condition1 = true;\n  }\n  \n  softwareName: string;\n  \n  paramsSubscription: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router, private _TotalSystemService : TotalSystemService,  private _SoftwareContentService: SoftwareContentService) { }\n\n  computers: {}[] = this._TotalSystemService.getAllSystem();\n\n  softwarePc: number = 0;\n\n  extrRepairLength;\n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.softwareName = params['software'];\n\n      console.log(this.softwareName);\n\n    });\n\n\n     for (let i = 0; i < this.computers.length; i++) {\n    \n            if ( this.computers[i]['Software'].indexOf(this.softwareName) > -1){\n\n                this.softwarePc++;                \n            }\n\n       } \n\n    //    this.extrRepairLength = this.softwarePc;\n  }\n\n  layout: string = 'grid'; \n\n  isSpecial: boolean = true;\n\n\n  gridOn(){\n     this.layout = 'grid';\n\n     this.isSpecial = true;\n  }\n\n  tableOn(){\n    this.layout = 'table';\n\n    this.isSpecial = false;\n }\n\n searchTerm: string;\n\n onKey(param1){\n\n  this._SoftwareContentService.searchterm = param1.target.value;\n\n  // console.log(this._SoftwareContentService.searchterm);\n  \n  \n};\n\nonBlue(param2){\n      \n  this._SoftwareContentService.searchterm = '';\n\n  console.log(this._SoftwareContentService.searchterm);\n\n\n}\n  \n\n\n}\n","<div class=\"full-body\">\n    <div class=\"contentheading\">\n        <div class=\"row\">\n            <div class=\"col-9 extr1 heading1\">\n                <h6>{{softwareName}}</h6>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"searchheading container\">\n        <div class=\"row extr1\">\n            <div class=\"input-group p-3 mb-3\">\n                <input type=\"search\" placeholder=\"Search System\" [(ngModel)]=\"searchTerm\" (keyup)=\"onKey($event)\"\n                    (blur)=\"onBlue($event)\">\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"allSystem container mt-4\">\n        <div class=\"summary w-100 mb-2\">\n            <div class=\"row\">\n                <div class=\"col-12 mb-2 extr2\">\n                    <h6 class=\"smmryH6\">Total Systems having {{softwareName}} : {{softwarePc}}</h6>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"layout w-100 my-3\">\n            <div class=\"row justify-content-end\">\n                <div class=\"w-100 h-100 col-xl-4 col-lg-4 col-md-6 col-sm-12 col-12\">\n                    <div class=\"row\">\n                        <div class=\"col-6 justify-content-center align-items-center\">\n                            <button title=\"Grid View\" mat-button (click)=\"gridOn()\"\n                                [ngClass]=\"isSpecial ? 'active': ''\"><i class=\"material-icons\">\n                                    grid_on\n                                </i></button>\n                        </div>\n                        <div class=\"col-6 justify-content-center align-items-center\">\n                            <button title=\"Table View\" mat-button (click)=\"tableOn()\"\n                                [ngClass]=\"isSpecial ? '': 'active'\"><i class=\"material-icons\">\n                                    grid_off\n                                </i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"extr1\" [ngSwitch]=\"layout\">\n\n            <app-grid-software *ngSwitchCase=\"'grid'\" class=\"w-100 h-100\"></app-grid-software>\n\n            <app-table-software *ngSwitchCase=\"'table'\" class=\"w-100 h-100\"></app-table-software>\n\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n<div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n</div>\n\n<div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit, DoCheck} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {SoftwareContentService} from '../../../All-Services/software-content.service';\nimport {TotalSystemService} from '../../../All-Services/total-system.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-table-software',\n  templateUrl: './table-software.component.html',\n  styleUrls: ['./table-software.component.css']\n})\nexport class TableSoftwareComponent implements OnInit, DoCheck {\n  \n  condition1: boolean = true;\n  \n  softwareName: string;\n  \n  paramsSubscription: Subscription;\n    \n  computers: {}[] = this._TotalSystemService.getAllSystem();\n  \n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService : TotalSystemService) { }\n  \n  \n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.softwareName = params['software'];\n\n      console.log(this.softwareName);\n\n    });\n  }\n\n      searchTerm: string;\n\n      ngDoCheck(){\n\n        this.searchTerm = this._SoftwareContentService.searchterm;\n        \n      }\n      \n      openDialog(){       \n        this.condition1 = false;\n    }\n\n    closeDialog(){\n        this.condition1 = true;\n    }\n\n}\n","\n      \n      <table class=\"mat-elevation-z8 w-100 h-100 mt-3\" id=\"t01\"> \n            <tr>\n                    <th style=\"width: 10%;\" class=\"align-items-center justify-content-center\">S.no</th>\n                    <th>Name</th>\n                    <th>Status</th>\n                    <th>Lab</th>\n                    <th>Edit</th>\n            </tr>\n    \n        <ng-container *ngFor=\"let computer of computers | filter : searchTerm; let i = index\">\n            <tr *ngIf=\"computer.Software.indexOf(softwareName) > -1\">\n                \n                    <td>{{i+1}}</td>\n                    <td>{{computer.Name}} </td> \n                    <td>{{computer.Condition}} </td>\n                    <td>{{computer.Lab}}</td>\n                    <td><button (click)=\"openDialog()\" mat-raised-button class=\"w-100 btn1\"\n                        [routerLink]=\"[computer.id]\"> <a>View Full Information</a></button></td>\n                    </tr>\n\n                </ng-container>\n          </table>\n    \n    \n    \n          \n    <div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n        </div>\n        \n        <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n            <router-outlet></router-outlet>\n        </div>\n          ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { TotalSystemService } from '../../../All-Services/total-system.service';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { SoftwareContentService } from '../../../All-Services/software-content.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  paramsSubscription: Subscription;\n\n  Activeuser: any = {};\n\n  id: number;\n\n  regPassowrd: any = /^\\b[A-Z0-9._%()-]+@[A-Z]+\\.[A-Z]{2,3}\\b$/i;\n\n  constructor(private _snackBar: MatSnackBar, private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService, private _TotalSystemService: TotalSystemService) { }\n\n  ngOnInit() {\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.Activeuser = this._SoftwareContentService.goadminAccount()[params['id']];\n\n      this.id = params['id'];\n\n      // console.log(this.Activeuser);\n\n    });\n  }\n\n  resetPasswrd(param1, param2) {\n    param1.style.display = 'none';\n\n    param2.style.display = 'inline-block';\n  }\n\n  reg3: any = /[A-B0-9]/g;\n\n  setPassword(param1, param2, CurrentPassword, NewPassword, ConfirmPassword, errorPassword) {\n\n    if (CurrentPassword.value == this.Activeuser['password']) {\n\n      // reg3.test(d.value))\n\n      if (this.reg3.test(NewPassword.value)) {\n\n        errorPassword.style.display = 'none';\n\n        if (NewPassword.value == ConfirmPassword.value) {\n\n          this._SoftwareContentService.goadminAccount()[this.id]['password'] = NewPassword.value;\n\n          // console.log(this._SoftwareContentService.goadminAccount());\n\n          param1.style.display = 'inline-block';\n\n          param2.style.display = 'none';\n\n          CurrentPassword.value = '';\n\n          NewPassword.value = '';\n\n          ConfirmPassword.value = '';\n\n          ConfirmPassword.classList.remove('your-class');\n\n          ConfirmPassword.placeholder = 'Confirm Password';\n\n          NewPassword.classList.remove('your-class');\n\n          NewPassword.placeholder = 'New Password';\n\n          errorPassword.style.display = 'none';\n\n          CurrentPassword.classList.remove('your-class');\n\n          CurrentPassword.placeholder = 'Current Password';\n\n          this._snackBar.open('Password for ' + this.Activeuser['Name'] + ' has been Updated', 'Successfully !', {\n            duration: 2000,\n          });\n\n        } else {\n          ConfirmPassword.classList.add('your-class');\n          ConfirmPassword.placeholder = '* Password Does not Match';\n          ConfirmPassword.value = '';\n        }\n\n      } else {\n        NewPassword.classList.add('your-class');\n        NewPassword.value = '';\n        errorPassword.style.display = 'inline-block';\n      }\n\n    } else {\n\n      CurrentPassword.classList.add('your-class');\n      CurrentPassword.placeholder = '* Password is Incorrect';\n      CurrentPassword.value = '';\n    }\n  }\n\n  shwpasswrd_1(shwPsswrd, hdePsswrd, CurrentPassword) {\n\n    shwPsswrd.style.display = \"none\";\n\n    hdePsswrd.style.display = \"inline\";\n\n    CurrentPassword.type = \"text\";\n  }\n\n  hdepasswrd_1(shwPsswrd, hdePsswrd, CurrentPassword) {\n    shwPsswrd.style.display = \"inline\";\n\n    hdePsswrd.style.display = \"none\";\n\n    CurrentPassword.type = \"password\";\n  }\n\n\n  shwpasswrd_2(shwPsswrd, hdePsswrd, NewPassword) {\n\n    shwPsswrd.style.display = \"none\";\n\n    hdePsswrd.style.display = \"inline\";\n\n    NewPassword.type = \"text\";\n  }\n\n  hdepasswrd_2(shwPsswrd, hdePsswrd, NewPassword) {\n    shwPsswrd.style.display = \"inline\";\n\n    hdePsswrd.style.display = \"none\";\n\n    NewPassword.type = \"password\";\n  }\n\n  shwpasswrd_3(shwPsswrd, hdePsswrd, ConfirmPassword) {\n\n    shwPsswrd.style.display = \"none\";\n\n    hdePsswrd.style.display = \"inline\";\n\n    ConfirmPassword.type = \"text\";\n  }\n\n  hdepasswrd_3(shwPsswrd, hdePsswrd, ConfirmPassword) {\n    shwPsswrd.style.display = \"inline\";\n\n    hdePsswrd.style.display = \"none\";\n\n    ConfirmPassword.type = \"password\";\n  }\n\n\n  idChange: Boolean = true;\n\n  adminArr: {}[] = this._SoftwareContentService.goadminAccount();\n\n  editSystemInfrm(name, userId, userImg, userContact, userEmail, userJob) {\n\n\n    for (let i = 0; i < this.adminArr.length; i++) {\n      if (this.adminArr[i][\"active\"] == false) {\n        console.log(this.adminArr[i]);\n\n        if (userId.value == this.adminArr[i]['id']) {\n\n          this.idChange = false;\n\n          console.log(this.adminArr[i]['id']);\n        }\n\n        if (userId.value == this.adminArr[this.id]['id']) {\n\n          this.idChange = true;\n\n        }\n      }\n    }\n\n    if (this.idChange == true) {\n\n      this._SoftwareContentService.goadminAccount()[this.id]['Name'] = name.value;\n\n      this._SoftwareContentService.goadminAccount()[this.id]['id'] = userId.value;\n\n      this._SoftwareContentService.goadminAccount()[this.id]['profileImg'] = userImg.value;\n\n      this._SoftwareContentService.goadminAccount()[this.id]['contact'] = userContact.value;\n\n      this._SoftwareContentService.goadminAccount()[this.id]['email'] = userEmail.value;\n\n      this._SoftwareContentService.goadminAccount()[this.id]['job'] = userJob.value;\n\n      this.router.navigate(['../'], { relativeTo: this.route });\n\n      // console.log(this._TotalSystemService.allSystem); \n\n      this._snackBar.open(name.value + ' profile has been Updated', 'Successfully !', {\n        duration: 2000,\n      });\n    } else {\n      alert('Sorry! You cannot change your id to this');\n\n      this.idChange = true;\n    }\n\n  }\n\n}\n","<h3>\n    {{Activeuser.Name}}\n</h3>\n<hr>\n\n<div class=\"p-3 mb-3 row\">\n\n    <div class=\"col-12 extr11\">\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"User Name\" value=\"{{Activeuser.Name}}\" #name>\n        </mat-form-field>\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"User ID\" value=\"{{Activeuser.id}}\" #userId>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"User Img Url\" type=\"url\" value=\"{{Activeuser.profileImg}}\" #userImg>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Contact\" value=\"{{Activeuser.contact}}\" #userContact>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Email\" value=\"{{Activeuser.email}}\" #userEmail>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"col-12 extr11\">\n\n        <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Job Title\" value=\"{{Activeuser.job}}\" #userJob>\n        </mat-form-field>\n\n    </div>\n\n    <div class=\"w-100 pt-3 extr11 chnge_psswrd col-12 border-top position-relative\">\n        <p class=\"px-2 position-absolute\"> Change Password </p>\n\n        <button #resetPassword type=\"button\" class=\"btn btn-sm btn-info\"\n            (click)=\"resetPasswrd(resetPassword, resetFrm)\">Click on this button to Reset Your\n            Password</button>\n\n        <div class=\"resetFrm w-100 p-2\" #resetFrm>\n            <form>\n                <div class=\"w-100 inpt_fld position-relative\">\n                    <input type=\"password\" name=\"Current Password\" placeholder=\"Current Password\" #CurrentPassword>\n                    <span class=\"icn_psswrd position-absolute h-100 d-flex justify-content-center align-items-center\">\n                        <i class=\"material-icons\" #shwPsswrd_1\n                            (click)=\"shwpasswrd_1(shwPsswrd_1, hdePsswrd_1, CurrentPassword)\">remove_red_eye</i>\n                        <i class=\"fas fa-eye-slash\" style=\"display: none;\" #hdePsswrd_1\n                            (click)=\"hdepasswrd_1(shwPsswrd_1, hdePsswrd_1, CurrentPassword)\"></i>\n                    </span>\n                </div>\n                <div class=\"w-100 inpt_fld position-relative\">\n                    <input type=\"password\" name=\"New Password\" placeholder=\"New Password\" #NewPassword>\n                    <span class=\"icn_psswrd position-absolute h-100 d-flex justify-content-center align-items-center\">\n                        <i class=\"material-icons\" #shwPsswrd_2\n                            (click)=\"shwpasswrd_2(shwPsswrd_2, hdePsswrd_2, NewPassword)\">remove_red_eye</i>\n                        <i class=\"fas fa-eye-slash\" style=\"display: none;\" #hdePsswrd_2\n                            (click)=\"hdepasswrd_2(shwPsswrd_2, hdePsswrd_2, NewPassword)\"></i>\n                    </span>\n                </div>\n                <small #errorPassword style=\"display: none;\" class=\"text-danger\">Must contain at least one number one\n                    uppercase\n                    lowercase letter, and at\n                    least 8 or more\n                    characters</small>\n                <div class=\"w-100 inpt_fld position-relative\">\n                    <input type=\"password\" name=\"Confirm New Password\" placeholder=\"Confirm New Password\"\n                        #ConfirmPassword>\n                    <span class=\"icn_psswrd position-absolute h-100 d-flex justify-content-center align-items-center\">\n                        <i class=\"material-icons\" #shwPsswrd_3\n                            (click)=\"shwpasswrd_3(shwPsswrd_3, hdePsswrd_3, ConfirmPassword)\">remove_red_eye</i>\n                        <i class=\"fas fa-eye-slash\" style=\"display: none;\" #hdePsswrd_3\n                            (click)=\"hdepasswrd_3(shwPsswrd_3, hdePsswrd_3, ConfirmPassword)\"></i>\n                    </span>\n                </div>\n            </form>\n            <div class=\"w-100\">\n                <button type=\"button\" class=\"btn btn-sm btn-info\"\n                    (click)=\"setPassword(resetPassword, resetFrm, CurrentPassword, NewPassword, ConfirmPassword, errorPassword)\">Save\n                    Password</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-12 extr11\">\n        <button mat-button (click)=\"editSystemInfrm(name, userId, userImg, userContact, userEmail, userJob)\">Update\n            System Information!</button>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { SoftwareContentService } from 'src/app/All-Services/software-content.service';\n\n@Component({\n  selector: 'app-user-infrm',\n  templateUrl: './user-infrm.component.html',\n  styleUrls: ['./user-infrm.component.css']\n})\nexport class UserInfrmComponent implements OnInit {\n\n  paramsSubscription: Subscription;\n\n  public userInformation: any;\n\n  constructor(private route: ActivatedRoute, private router: Router, private _SoftwareContentService: SoftwareContentService) { }\n\n  ngOnInit() {\n\n    this.paramsSubscription = this.route.params.subscribe((params: Params) => {\n\n      this.userInformation = this._SoftwareContentService.goadminAccount()[params['id']];\n\n    });\n\n  }\n\n}\n","<h5>\n    {{userInformation.Name}} <small *ngIf=\"userInformation.active == true\" id=\"cnd1\">(Active)</small> <small\n        *ngIf=\"userInformation.active == false\" id=\"cnd3\">(Not Active)</small>\n</h5>\n<hr>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"extr3 w-100\">\n            <h6>ID: {{userInformation.id}}</h6>\n        </div>\n\n        <div class=\"extr3 w-100\">\n            <h6>Job Title: <small> {{userInformation.job}}</small></h6>\n        </div>\n\n        <div class=\"extr3 w-100\">\n            <h6>Joined At: <small> {{userInformation.joinedIn}}</small></h6>\n        </div>\n\n        <div class=\"extr3 w-100\">\n            <h6>Contact No: <small> {{userInformation.contact}}</small></h6>\n        </div>\n\n        <div class=\"extr3 w-100\">\n            <h6>E-Mail Id: <small> {{userInformation.email}}</small></h6>\n        </div>\n        <div class=\"extr1 w-100 mt-3\">\n            <button mat-button [routerLink]=\"['edit']\">Edit User Information</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { SoftwareContentService } from '../../All-Services/software-content.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit, DoCheck {\n\n  condition1: boolean = true;\n\n  users: {}[];\n\n  public activeUser: any;\n\n  // activeJob: string;\n\n  constructor(private _SoftwareContentService: SoftwareContentService) { }\n\n  ngOnInit() {\n\n    this.users = this._SoftwareContentService.goadminAccount();\n\n    // console.log(this.users);\n\n    for (let i = 0; i < this.users.length; i++) {\n\n      if (this.users[i]['active'] == true) {\n\n        this.activeUser = this.users[i];\n\n        // this.activeJob = this.users[i]['ID'];\n\n        // console.log(this.activeJob);\n\n        // console.log(this.activeUser);\n\n      }\n\n    }\n\n\n  }\n\n  searchTerm: string = '';\n\n  ngDoCheck() {\n\n    // this.searchTerm = this._SoftwareContentService.searchterm;\n\n  }\n\n\n  // onKey(param1) {\n\n  //   this._SoftwareContentService.searchterm = param1.target.value;\n\n  //   // console.log(this._SoftwareContentService.searchterm);\n\n\n  // };\n\n  // onBlue(param2) {\n\n  //   this._SoftwareContentService.searchterm = '';\n\n  //   // console.log(this._SoftwareContentService.searchterm);\n\n\n  // };\n\n  openDialog(param1) {\n    if (this.activeUser['id'] == 'AD/RH/WM/01' || this.activeUser['id'] == param1) {\n      this.condition1 = false;\n    } else {\n      alert('Sorry You cannot View This Profile');\n    }\n  }\n\n  closeDialog() {\n    this.condition1 = true;\n  }\n\n\n\n  userId: '';\n\n  userName: '';\n\n  user_password: '';\n\n  user_confirmpassword: '';\n\n  userProfile: '';\n\n  userJob: '';\n\n  user_contact: '';\n\n  userEmail: '';\n\n  date: Date = new Date();\n\n  months: string[] = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  addUser() {\n    this._SoftwareContentService.goadminAccount().push({\n      ID: this._SoftwareContentService.adminAccount.length,\n      id: this.userId,\n      Name: this.userName,\n      active: false,\n      profileImg: 'assets/06.jpg',\n      password: this.user_password,\n      job: this.userJob,\n      joinedIn: this.date.getDate() + ' ' + this.months[this.date.getMonth()] + ' ' + this.date.getFullYear(),\n      contact: this.user_contact,\n      email: this.userEmail,\n    });\n\n\n    console.log(this.date.getDate() + '' + this.date.getMonth() + '' + this.date.getFullYear());\n\n\n  }\n\n}\n","<div class=\"full-body\">\n    <div class=\"contentheading\">\n        <div class=\"row\">\n            <div class=\"col-9 extr1 heading1\">\n                <h6>Manage Profiles</h6>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"searchheading container\">\n        <div class=\"row extr1\">\n            <mat-tab-group mat-align-tabs=\"center\" class=\"w-100\">\n                <mat-tab label=\"Search User\">\n                    <div class=\"input-group p-3 mb-3\">\n                        <input type=\"search\" placeholder=\"Search System\" [(ngModel)]=\"searchTerm\">\n                        <div class=\"input-group-append\">\n                            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Search</button>\n                        </div>\n                    </div>\n\n                </mat-tab>\n                <mat-tab label=\"Add User\">\n\n                    <form #userform=\"ngForm\" *ngIf=\"activeUser.ID == 0\">\n\n                        <div class=\"p-3 mb-3 row\">\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input required matInput placeholder=\"User ID\"\n                                        [class.is-invalid]=\"user_id.invalid && user_id.touched\" name=\"user_id\"\n                                        [(ngModel)]=\"userId\" #user_id=\"ngModel\">\n                                </mat-form-field>\n\n                                <small [class.d-none]=\"user_id.valid || user_id.untouched\" class=\"text-danger\">User ID\n                                    is\n                                    Required</small>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input required matInput placeholder=\"User Name\"\n                                        [class.is-invalid]=\"user_name.invalid && user_name.touched\" name=\"user_name\"\n                                        [(ngModel)]=\"userName\" #user_name=\"ngModel\">\n                                </mat-form-field>\n\n                                <small [class.d-none]=\"user_name.valid || user_name.untouched\" class=\"text-danger\">User\n                                    Name is\n                                    Required</small>\n\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input matInput type=\"password\" [(ngModel)]=\"user_password\" name=\"password\"\n                                        placeholder=\"Password\" required #password=\"ngModel\"\n                                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" />\n                                </mat-form-field>\n\n                                <div *ngIf=\"password.invalid && (userform.submitted || password.touched)\">\n                                    <small class=\"text-danger\" *ngIf=\"password.errors.required\"> Password is required.\n                                    </small>\n                                    <small class=\"text-danger\" *ngIf=\"password.errors.pattern\"> Must contain at least\n                                        one number and one\n                                        uppercase and lowercase letter, and\n                                        at least 8 or more characters.</small>\n                                </div>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input matInput type=\"password\" [(ngModel)]=\"user_confirmpassword\"\n                                        name=\"confirmpassword\" placeholder=\"Confirm Password\" required\n                                        #confirmpassword=\"ngModel\" pattern=\"{{ password.value }}\" />\n                                </mat-form-field>\n\n                                <div\n                                    *ngIf=\" confirmpassword.invalid && (userform.submitted || confirmpassword.touched)\">\n                                    <small class=\"text-danger\" *ngIf=\"confirmpassword.errors.required\"> Confirm password\n                                        is required. </small>\n                                    <small class=\"text-danger\" *ngIf=\"confirmpassword.errors.pattern\"> Password &\n                                        Confirm Password does not\n                                        match.</small>\n                                </div>\n\n                            </div>\n\n                            <!-- <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input type=\"url\" required matInput placeholder=\"Profile Picture\"\n                                        [class.is-invalid]=\"user_profile.invalid && user_profile.touched\"\n                                        name=\"user_profile\" [(ngModel)]=\"userProfile\" #user_profile=\"ngModel\">\n                                </mat-form-field>\n                                <div *ngIf=\" user_profile.invalid && (userform.submitted || user_profile.touched)\">\n                                    <small class=\"text-danger\" *ngIf=\"user_profile.errors.required\">Profile Picture\n                                        is required. </small>\n\n                                    <small [class.d-none]=\"user_profile.valid || user_profile.untouched\"\n                                        class=\"text-danger\"> is\n                                        Required</small>\n                                    <small class=\"text-danger\" *ngIf=\"user_profile.errors.pattern\">Enter a Valid\n                                        Url</small>\n                                </div>\n\n                            </div> -->\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input required matInput placeholder=\"Job Title\"\n                                        [class.is-invalid]=\"user_job.invalid && user_job.touched\" name=\"user_job\"\n                                        [(ngModel)]=\"userJob\" #user_job=\"ngModel\">\n                                </mat-form-field>\n\n                                <small [class.d-none]=\"user_job.valid || user_job.untouched\" class=\"text-danger\">Job\n                                    Title is\n                                    Required</small>\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input type=\"number\" required matInput placeholder=\"Contact No.\"\n                                        [class.is-invalid]=\"usereContact.invalid && usereContact.touched\"\n                                        name=\"usereContact\" [(ngModel)]=\"user_contact\" #usereContact=\"ngModel\"\n                                        pattern=\"\">\n                                </mat-form-field>\n\n                                <small [class.d-none]=\"usereContact.valid || usereContact.untouched\"\n                                    class=\"text-danger\">Contact is\n                                    Required</small>\n\n                            </div>\n\n                            <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 extr11\">\n\n                                <mat-form-field class=\"example-full-width w-100\">\n                                    <input type=\"email\" required matInput placeholder=\"Email-ID\"\n                                        [class.is-invalid]=\"user_email.invalid && user_email.touched\" name=\"user_email\"\n                                        [(ngModel)]=\"userEmail\" #user_email=\"ngModel\">\n                                </mat-form-field>\n\n                                <small [class.d-none]=\"user_email.valid || user_email.untouched\"\n                                    class=\"text-danger\">Email-ID is\n                                    Required</small>\n\n                            </div>\n\n                            <div class=\"col-12 extr1 extr11\">\n                                <button mat-button [disabled]=\"userform.form.invalid\" (click)=\"addUser()\">Add New\n                                    System</button>\n                            </div>\n\n                        </div>\n\n                    </form>\n                    <div *ngIf=\"activeUser.ID !== 0\"\n                        class=\"container w-100 notAllowwed mb-3 d-flex justify-content-center align-items-center\">\n                        <h4>Sorry! Only Director can Add Users</h4>\n                    </div>\n\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </div>\n\n\n    <div class=\"allSystem container mt-4\">\n        <div class=\"container p-0\">\n            <div class=\"row\">\n                <ng-container *ngFor=\"let user of users | filter : searchTerm; let i = index\">\n\n                    <div *ngIf=\"user.active == true\" class=\"p-0 col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 mb-5\">\n                        <div class=\"bg-light border border-light profile rounded w-100 h-auto\">\n                            <div class=\"profile_pic_bx  position-relative\">\n                                <div class=\"profil_pic  position-absolute rounded-circle\">\n                                    <img src=\"{{user.profileImg}}\" class=\"w-100\" alt=\"\">\n                                </div>\n                            </div>\n                            <div class=\"user_infrmtn row w-100 h-auto\">\n                                <div class=\"w-100 extr1\">\n                                    <h5>{{user.Name}} <small id=\"cnd1\">(Active)</small></h5>\n                                </div>\n\n                                <div class=\"w-100 px-3\">\n                                    <h6 class=\"my-2\">ID: <small>{{user.id}}</small></h6>\n                                    <h6 class=\"my-2\">Job: <small>{{user.job}}</small></h6>\n                                    <h6 class=\"my-2\">Joined at: <small>{{user.joinedIn}}</small></h6>\n                                </div>\n\n                                <div class=\"w-100 p-3\">\n                                    <button [routerLink]=\"[user.ID]\" (click)=\"openDialog(user.id)\" mat-raised-button\n                                        class=\"w-100 btn1\">\n                                        <a>View Full Information</a></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </ng-container>\n\n\n                <ng-container *ngFor=\"let user of users | filter : searchTerm; let i = index\">\n\n                    <div *ngIf=\"user.active == false\" class=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 mb-5\">\n                        <div class=\"bg-light border border-light profile rounded w-100 h-auto\">\n                            <div class=\"profile_pic_bx  position-relative\">\n                                <div class=\"profil_pic  position-absolute rounded-circle\">\n                                    <img src=\"{{user.profileImg}}\" class=\"w-100\" alt=\"\">\n                                </div>\n                            </div>\n                            <div class=\"user_infrmtn row w-100 h-auto\">\n                                <div class=\"w-100 extr1\">\n                                    <h5>{{user.Name}} <small id=\"cnd3\">(Not Active)</small></h5>\n                                </div>\n\n                                <div class=\"w-100 px-3\">\n                                    <h6 class=\"my-2\">ID: <small>{{user.id}}</small></h6>\n                                    <h6 class=\"my-2\">Job: <small>{{user.job}}</small></h6>\n                                    <h6 class=\"my-2\">Joined at: <small>{{user.joinedIn}}</small></h6>\n                                </div>\n\n                                <div class=\"w-100 p-3\">\n                                    <button [routerLink]=\"[user.ID]\" (click)=\"openDialog(user.id)\" mat-raised-button\n                                        class=\"w-100 btn1\">\n                                        <a>View Full Information</a></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </ng-container>\n            </div>\n\n            <div [ngClass]=\"condition1 ? 'dialogBox' : 'dialogBox2'\" (click)=\"closeDialog()\">\n            </div>\n\n            <div [ngClass]=\"condition1 ? 'dialogContent' : 'dialogContent2'\" class=\"p-4\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>","import { ManageComputersComponent } from './admin/manage-computers/manage-computers.component';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { SpecificSoftwareComponent } from './admin/specific-software/specific-software.component';\nimport { DialogboxComponent } from './admin/manage-computers/dialogbox/dialogbox.component';\nimport { EditSystemComponent } from './admin/manage-computers/edit-system/edit-system.component';\nimport { SpecificLabComponent } from './admin/specific-lab/specific-lab.component';\nimport { ManageLabsComponent } from './admin/manage-labs/manage-labs.component';\nimport { NotificationComponent } from './admin/notification/notification.component';\nimport { SoftwareComponent } from './admin/software/software.component';\nimport { SpecificHardwareComponent } from './admin/specific-hardware/specific-hardware.component';\nimport { HardwareComponent } from './admin/hardware/hardware.component';\nimport { RepairsComponent } from './admin/repairs/repairs.component';\nimport { NotInUseComponent } from './admin/not-in-use/not-in-use.component';\nimport { UserComponent } from './admin/user/user.component';\nimport { UserInfrmComponent } from './admin/user/user-infrm/user-infrm.component';\nimport { UserEditComponent } from './admin/user/user-edit/user-edit.component';\nimport { AuthGuard } from './Authentication/auth-guard.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login-admin',\n    pathMatch: 'full'\n  },\n\n  { path: 'login-admin', component: LoginComponent },\n\n  {\n    path: \"admin\",\n    component: AdminComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"dashboard/:software\",\n        component: SpecificSoftwareComponent,\n        children: [\n          { path: \":id\", component: DialogboxComponent },\n          { path: \":id/:edit\", component: EditSystemComponent }\n        ]\n      },\n\n      { path: \"dashboard\", component: DashboardComponent },\n\n      {\n        path: \"manage-computers\",\n        component: ManageComputersComponent,\n        children: [\n          { path: \":id\", component: DialogboxComponent },\n          { path: \":id/:edit\", component: EditSystemComponent }\n        ]\n      },\n\n      {\n        path: \"manage-labs/:lab\",\n        component: SpecificLabComponent,\n        children: [\n          { path: \":id\", component: DialogboxComponent },\n          { path: \":id/:edit\", component: EditSystemComponent }\n        ]\n      },\n\n      { path: \"manage-labs\", component: ManageLabsComponent },\n\n      { path: \"notification\", component: NotificationComponent },\n\n      {\n        path: \"manage-software/:software\",\n        component: SpecificSoftwareComponent,\n        children: [\n          { path: \":id\", component: DialogboxComponent },\n          { path: \":id/:edit\", component: EditSystemComponent }\n        ]\n      },\n\n      { path: \"manage-software\", component: SoftwareComponent },\n\n      {\n        path: \"manage-hardware/:hardware\",\n        component: SpecificHardwareComponent,\n        children: [\n          { path: \":id\", component: DialogboxComponent },\n          { path: \":id/:edit\", component: EditSystemComponent }\n        ]\n      },\n\n      { path: \"manage-hardware\", component: HardwareComponent },\n\n      {\n        path: \"repairs\",\n        component: RepairsComponent,\n        children: [\n          { path: \":id\", component: DialogboxComponent },\n          { path: \":id/:edit\", component: EditSystemComponent }\n        ]\n      },\n\n      {\n        path: \"not-in-use\",\n        component: NotInUseComponent,\n        children: [\n          { path: \":id\", component: DialogboxComponent },\n          { path: \":id/:edit\", component: EditSystemComponent }\n        ]\n      },\n\n      {\n        path: \"user\",\n        component: UserComponent,\n        children: [\n          { path: \":id\", component: UserInfrmComponent },\n          { path: \":id/:edit\", component: UserEditComponent }\n        ]\n      },\n\n      { path: \"user\", component: UserComponent },\n    ]\n  },\n\n  // { path: '**', component: PageNotFoundComponent },\n\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Lab-Management';\n}\n","<router-outlet></router-outlet>","import { DialogboxComponent } from './admin/manage-computers/dialogbox/dialogbox.component';\nimport { AdminModule } from './admin/admin.module';\nimport { MaterialModule } from './material/material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './Authentication/auth-guard.service';\nimport { AuthService } from './Authentication/auth.service';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    LoginComponent,\n    PageNotFoundComponent,\n  ],\n  entryComponents: [DialogboxComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    AdminModule,\n    FormsModule\n  ],\n  providers: [AuthGuard, AuthService,],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { SoftwareContentService } from \"../All-Services/software-content.service\";\nimport { AuthService } from \"../Authentication/auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private _SoftwareContentService: SoftwareContentService,\n    private authService: AuthService\n  ) { }\n\n  adminArr: {}[] = this._SoftwareContentService.goadminAccount();\n\n  ngOnInit() {\n    let self = this;\n\n    function logout() {\n      // alert('Logout Run');\n\n      for (let i = 0; i < self.adminArr.length; i++) {\n        if (self.adminArr[i][\"active\"] == true) {\n          self._SoftwareContentService.goadminAccount()[i][\"active\"] = false;\n        }\n      }\n\n      self.authService.logout();\n    }\n\n    logout();\n  }\n\n  logout() {\n    alert(true);\n  }\n\n  idNo: {}[] = this._SoftwareContentService.goadminAccount();\n\n  errorIn_id: boolean = false;\n\n  errorIn_psswrd: boolean = false;\n\n  goToAdmin(param1, param2) {\n\n    if (param1.value == \"\") {\n\n      param1.placeholder = \"* Please enter your ID\";\n\n      param1.classList.add('your-class');\n\n      if (param2.value == \"\") {\n\n        param2.placeholder = '* Please enter your Password';\n\n        param2.classList.add('your-class');\n\n      }\n\n      if (param2.value !== \"\") {\n\n        param2.placeholder = '* Please enter your ID first';\n\n        param2.classList.add('your-class');\n\n        param2.value = \"\";\n\n      }\n    } else {\n\n      for (let i = 0; i < this.idNo.length; i++) {\n\n        if (param1.value == this.idNo[i]['id']) {\n\n          if (param2.value == this.idNo[i]['password']) {\n\n            this._SoftwareContentService.adminAccount[i]['active'] = true;\n\n            this.authService.login();\n\n            this.router.navigate(['/admin/dashboard']);\n\n            this.errorIn_psswrd = false;\n\n          } else {\n            this.errorIn_psswrd = true;\n          }\n\n          this.errorIn_id = false;\n\n          break;\n\n        } else {\n\n          this.errorIn_id = true;\n        }\n\n      }\n\n      if (this.errorIn_id == true) {\n\n        param1.placeholder = \"* Please enter correct ID\";\n\n        param1.classList.add('your-class');\n\n        param1.value = \"\";\n\n      }\n\n      if (this.errorIn_psswrd == true) {\n\n        param2.placeholder = '* Please enter correct password';\n\n        param2.classList.add('your-class');\n\n        param2.value = \"\";\n      }\n\n    }\n\n\n  }\n\n  extr(shwPsswrd, hdePsswrd, inp2) {\n\n    shwPsswrd.style.display = \"inline\";\n\n    hdePsswrd.style.display = \"none\";\n\n    inp2.type = \"password\";\n\n    if (inp2.value == \"\") {\n      shwPsswrd.style.display = \"none\";\n\n      hdePsswrd.style.display = \"inline\";\n\n      inp2.type = \"text\";\n    }\n\n    // alert('r4eue');\n  }\n\n  shwpasswrd(shwPsswrd, hdePsswrd, inp2) {\n\n    shwPsswrd.style.display = \"none\";\n\n    hdePsswrd.style.display = \"inline\";\n\n    inp2.type = \"text\";\n  }\n\n  hdepasswrd(shwPsswrd, hdePsswrd, inp2) {\n    shwPsswrd.style.display = \"inline\";\n\n    hdePsswrd.style.display = \"none\";\n\n    inp2.type = \"password\";\n  }\n}\n","<div class=\"formPage\" (onload)=\"logout()\">\n  <div class=\"formExtr1\">\n    <div class=\"mt-3 px-3 headingforUsername w-100 h-auto d-flex justify-content-center align-items-center\">\n      <h5>Use Username: AD/RH/WM/01 and Password: 9911554411</h5>\n    </div>\n    <div class=\"formContent\">\n      <div class=\"formExtr1\">\n        <div class=\"formHeading\">\n          <h2>Admin Login</h2>\n        </div>\n\n        <div class=\"formInputs container\">\n          <div class=\"example-container container extr1\">\n            <input type=\"text\" name=\"ID\" placeholder=\"Enter Your ID Number\" #inp1 />\n          </div>\n\n          <div class=\"example-container container extr3\">\n            <div class=\"psswrd\">\n              <input type=\"password\" (keyup)=\"extr(shwPsswrd, hdePsswrd, inp2)\" name=\"Password\"\n                placeholder=\"Enter Your 6 Digit Password\" #inp2 />\n            </div>\n\n            <div class=\"seenIcn\">\n              <div class=\"extr1 w-100 h-100\">\n                <i class=\"material-icons\" style=\"display: none;\" #shwPsswrd\n                  (click)=\"shwpasswrd(shwPsswrd, hdePsswrd, inp2)\">remove_red_eye</i>\n\n                <i class=\"fas fa-eye-slash\" #hdePsswrd (click)=\"hdepasswrd(shwPsswrd, hdePsswrd, inp2)\"></i>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"submitBx extr1 pt-3\">\n            <button mat-button (click)=\"goToAdmin(inp1, inp2)\">\n              Click to Login!\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n\nconst MaterialComponents = [\n  BrowserAnimationsModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatSidenavModule,\n  MatInputModule,\n  MatDialogModule,\n  MatTabsModule,\n  MatChipsModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatTableModule,\n  MatSnackBarModule\n]\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from \"@angular/router\";\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  gotoLogin() {\n\n    this.router.navigate(['/login-admin']);\n\n  }\n\n\n}\n","<div class=\"full-body w-100 h-100\">\n    <div class=\"w-100 my-4 d-flex justify-content-center align-items-center\">\n        <img src=\"assets/404.gif\" alt=\"\">\n    </div>\n    <div class=\"w-100 d-flex justify-content-center align-items-center\">\n        <button class=\"btn btn-secondary\" (click)=\"gotoLogin()\">Go to Login</button>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}